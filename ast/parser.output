Grammar

    0 $accept: Start $end

    1 Start: F FUNC_

    2 FUNC_: F FUNC_
    3      | /* empty */

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON TYPE LEFTBRACE B_O_F RIGHTBRACE

    5 P_L: IDENTIFIER COLON TYPE MORE_PARAMS
    6    | /* empty */

    7 MORE_PARAMS: COMMA P_L
    8            | /* empty */

    9 TYPE: INT
   10     | BOOL

   11 TYPE_2: TYPE
   12       | INT_ARRAY

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER RIGHTBRACKET

   14 INT_ARRAY_EXP: IDENTIFIER LEFTBRACKET

   15 ARRAY_EXP: EXPR_ESSION RIGHTBRACKET

   16 B_O_F: VAR_DECLERATIONS MULT_FUNCTIONS BODY_STATEMENTS RETURN_

   17 MULT_FUNCTIONS: F MULT_FUNCTIONS
   18               | /* empty */

   19 BODY_STATEMENTS: STATEMENTS_ BODY_STATEMENTS
   20                | /* empty */

   21 VAR_DECLERATIONS: VAR_DEC VAR_DECLERATIONS
   22                 | /* empty */

   23 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE_2 SEMICOLON

   24 MULT_DEC: COMMA IDENTIFIER MULT_DEC
   25         | /* empty */

   26 STATEMENTS_: ASIGN_MENT SEMICOLON
   27            | FUNCTION_CALL SEMICOLON
   28            | IF_
   29            | IF_ELSE
   30            | FOR_

   31 RETURN_: RETURN EXPR_ESSION SEMICOLON

   32 IF_: IF_EXPR IF_BODY

   33 IF_EXPR: IF LEFTPAREN EXPR_ESSION RIGHTPAREN

   34 IF_BODY: LEFTBRACE BODY_STATEMENTS RIGHTBRACE

   35 IF_ELSE: IF_EXPR IF_BODY ELSE LEFTBRACE BODY_STATEMENTS RIGHTBRACE

   36 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

   37 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN

   38 FOR_ASIGN: ASIGN_MENT SEMICOLON
   39          | /* empty */

   40 ASIGN_MENT: IDENTIFIER ASSIGNMENT EXPR_ESSION
   41           | INT_ARRAY_EXP ARRAY_EXP ASSIGNMENT EXPR_ESSION

   42 EXPR_ESSION: LEFTPAREN EXPR_ESSION RIGHTPAREN
   43            | ABSOLUTEVALUE EXPR_ESSION ABSOLUTEVALUE
   44            | MINUS EXPR_ESSION
   45            | NOT EXPR_ESSION
   46            | EXPR_ESSION PLUS EXPR_ESSION
   47            | EXPR_ESSION MINUS EXPR_ESSION
   48            | EXPR_ESSION TIMES EXPR_ESSION
   49            | EXPR_ESSION DIVIDE EXPR_ESSION
   50            | EXPR_ESSION OROR EXPR_ESSION
   51            | EXPR_ESSION ANDAND EXPR_ESSION
   52            | EXPR_ESSION EQEQ EXPR_ESSION
   53            | EXPR_ESSION GT EXPR_ESSION
   54            | EXPR_ESSION GTE EXPR_ESSION
   55            | EXPR_ESSION LT EXPR_ESSION
   56            | EXPR_ESSION LTE EXPR_ESSION
   57            | EXPR_ESSION NE EXPR_ESSION
   58            | SINGLE_EXPRESSION

   59 SINGLE_EXPRESSION: INTEGER
   60                  | TRUE
   61                  | FALSE
   62                  | IDENTIFIER
   63                  | INT_ARRAY_EXP ARRAY_EXP

   64 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN
   65              | INT_ARRAY_EXP ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

   66 IN_PARAMS: EXPR_ESSION NEXT_PARAM
   67          | /* empty */

   68 NEXT_PARAM: COMMA EXPR_ESSION NEXT_PARAM
   69           | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
BOOL (258) 10
ELSE (259) 35
IF (260) 33
INT (261) 9
FOR (262) 36
VAR (263) 23
FUNCTION (264) 4
INTARRAY (265) 13
RETURN (266) 31
EQEQ (267) 52
GT (268) 53
GTE (269) 54
LT (270) 55
LTE (271) 56
NE (272) 57
ANDAND (273) 51
OROR (274) 50
NOT (275) 45
PLUS (276) 46
MINUS (277) 44 47
TIMES (278) 48
DIVIDE (279) 49
TRUE (280) 60
FALSE (281) 61
IDENTIFIER (282) 4 5 14 23 24 40 62 64 65
INTEGER (283) 13 59
SEMICOLON (284) 23 26 27 31 38
COLON (285) 4 5 23
COMMA (286) 7 24 68
ABSOLUTEVALUE (287) 43
LEFTBRACE (288) 4 34 35 36
RIGHTBRACE (289) 4 34 35 36
LEFTPAREN (290) 4 33 36 37 42 64 65
RIGHTPAREN (291) 4 33 36 37 42 64 65
LEFTBRACKET (292) 13 14
RIGHTBRACKET (293) 13 15
ASSIGNMENT (294) 40 41 64 65


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
Start (41)
    on left: 1, on right: 0
FUNC_ (42)
    on left: 2 3, on right: 1 2
F (43)
    on left: 4, on right: 1 2 17
P_L (44)
    on left: 5 6, on right: 4 7
MORE_PARAMS (45)
    on left: 7 8, on right: 5
TYPE (46)
    on left: 9 10, on right: 4 5 11
TYPE_2 (47)
    on left: 11 12, on right: 23
INT_ARRAY (48)
    on left: 13, on right: 12
INT_ARRAY_EXP (49)
    on left: 14, on right: 41 63 65
ARRAY_EXP (50)
    on left: 15, on right: 41 63 65
B_O_F (51)
    on left: 16, on right: 4
MULT_FUNCTIONS (52)
    on left: 17 18, on right: 16 17
BODY_STATEMENTS (53)
    on left: 19 20, on right: 16 19 34 35 36
VAR_DECLERATIONS (54)
    on left: 21 22, on right: 16 21
VAR_DEC (55)
    on left: 23, on right: 21
MULT_DEC (56)
    on left: 24 25, on right: 23 24
STATEMENTS_ (57)
    on left: 26 27 28 29 30, on right: 19
RETURN_ (58)
    on left: 31, on right: 16
IF_ (59)
    on left: 32, on right: 28
IF_EXPR (60)
    on left: 33, on right: 32 35
IF_BODY (61)
    on left: 34, on right: 32 35
IF_ELSE (62)
    on left: 35, on right: 29
FOR_ (63)
    on left: 36, on right: 30
FOR_PARAMS (64)
    on left: 37, on right: 36
FOR_ASIGN (65)
    on left: 38 39, on right: 37
ASIGN_MENT (66)
    on left: 40 41, on right: 26 38
EXPR_ESSION (67)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58, on right:
    15 31 33 37 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
    57 66 68
SINGLE_EXPRESSION (68)
    on left: 59 60 61 62 63, on right: 58
FUNCTION_CALL (69)
    on left: 64 65, on right: 27
IN_PARAMS (70)
    on left: 66 67, on right: 64 65
NEXT_PARAM (71)
    on left: 68 69, on right: 66 68


state 0

    0 $accept: . Start $end

    FUNCTION  shift, and go to state 1

    Start  go to state 2
    F      go to state 3


state 1

    4 F: FUNCTION . IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON TYPE LEFTBRACE B_O_F RIGHTBRACE

    IDENTIFIER  shift, and go to state 4


state 2

    0 $accept: Start . $end

    $end  shift, and go to state 5


state 3

    1 Start: F . FUNC_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (FUNC_)

    FUNC_  go to state 6
    F      go to state 7


state 4

    4 F: FUNCTION IDENTIFIER . LEFTPAREN P_L RIGHTPAREN COLON TYPE LEFTBRACE B_O_F RIGHTBRACE

    LEFTPAREN  shift, and go to state 8


state 5

    0 $accept: Start $end .

    $default  accept


state 6

    1 Start: F FUNC_ .

    $default  reduce using rule 1 (Start)


state 7

    2 FUNC_: F . FUNC_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (FUNC_)

    FUNC_  go to state 9
    F      go to state 7


state 8

    4 F: FUNCTION IDENTIFIER LEFTPAREN . P_L RIGHTPAREN COLON TYPE LEFTBRACE B_O_F RIGHTBRACE

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 6 (P_L)

    P_L  go to state 11


state 9

    2 FUNC_: F FUNC_ .

    $default  reduce using rule 2 (FUNC_)


state 10

    5 P_L: IDENTIFIER . COLON TYPE MORE_PARAMS

    COLON  shift, and go to state 12


state 11

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L . RIGHTPAREN COLON TYPE LEFTBRACE B_O_F RIGHTBRACE

    RIGHTPAREN  shift, and go to state 13


state 12

    5 P_L: IDENTIFIER COLON . TYPE MORE_PARAMS

    BOOL  shift, and go to state 14
    INT   shift, and go to state 15

    TYPE  go to state 16


state 13

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN . COLON TYPE LEFTBRACE B_O_F RIGHTBRACE

    COLON  shift, and go to state 17


state 14

   10 TYPE: BOOL .

    $default  reduce using rule 10 (TYPE)


state 15

    9 TYPE: INT .

    $default  reduce using rule 9 (TYPE)


state 16

    5 P_L: IDENTIFIER COLON TYPE . MORE_PARAMS

    COMMA  shift, and go to state 18

    $default  reduce using rule 8 (MORE_PARAMS)

    MORE_PARAMS  go to state 19


state 17

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON . TYPE LEFTBRACE B_O_F RIGHTBRACE

    BOOL  shift, and go to state 14
    INT   shift, and go to state 15

    TYPE  go to state 20


state 18

    7 MORE_PARAMS: COMMA . P_L

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 6 (P_L)

    P_L  go to state 21


state 19

    5 P_L: IDENTIFIER COLON TYPE MORE_PARAMS .

    $default  reduce using rule 5 (P_L)


state 20

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON TYPE . LEFTBRACE B_O_F RIGHTBRACE

    LEFTBRACE  shift, and go to state 22


state 21

    7 MORE_PARAMS: COMMA P_L .

    $default  reduce using rule 7 (MORE_PARAMS)


state 22

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON TYPE LEFTBRACE . B_O_F RIGHTBRACE

    VAR  shift, and go to state 23

    $default  reduce using rule 22 (VAR_DECLERATIONS)

    B_O_F             go to state 24
    VAR_DECLERATIONS  go to state 25
    VAR_DEC           go to state 26


state 23

   23 VAR_DEC: VAR . IDENTIFIER MULT_DEC COLON TYPE_2 SEMICOLON

    IDENTIFIER  shift, and go to state 27


state 24

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON TYPE LEFTBRACE B_O_F . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 28


state 25

   16 B_O_F: VAR_DECLERATIONS . MULT_FUNCTIONS BODY_STATEMENTS RETURN_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 18 (MULT_FUNCTIONS)

    F               go to state 29
    MULT_FUNCTIONS  go to state 30


state 26

   21 VAR_DECLERATIONS: VAR_DEC . VAR_DECLERATIONS

    VAR  shift, and go to state 23

    $default  reduce using rule 22 (VAR_DECLERATIONS)

    VAR_DECLERATIONS  go to state 31
    VAR_DEC           go to state 26


state 27

   23 VAR_DEC: VAR IDENTIFIER . MULT_DEC COLON TYPE_2 SEMICOLON

    COMMA  shift, and go to state 32

    $default  reduce using rule 25 (MULT_DEC)

    MULT_DEC  go to state 33


state 28

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON TYPE LEFTBRACE B_O_F RIGHTBRACE .

    $default  reduce using rule 4 (F)


state 29

   17 MULT_FUNCTIONS: F . MULT_FUNCTIONS

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 18 (MULT_FUNCTIONS)

    F               go to state 29
    MULT_FUNCTIONS  go to state 34


state 30

   16 B_O_F: VAR_DECLERATIONS MULT_FUNCTIONS . BODY_STATEMENTS RETURN_

    IF          shift, and go to state 35
    FOR         shift, and go to state 36
    IDENTIFIER  shift, and go to state 37

    $default  reduce using rule 20 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 38
    BODY_STATEMENTS  go to state 39
    STATEMENTS_      go to state 40
    IF_              go to state 41
    IF_EXPR          go to state 42
    IF_ELSE          go to state 43
    FOR_             go to state 44
    ASIGN_MENT       go to state 45
    FUNCTION_CALL    go to state 46


state 31

   21 VAR_DECLERATIONS: VAR_DEC VAR_DECLERATIONS .

    $default  reduce using rule 21 (VAR_DECLERATIONS)


state 32

   24 MULT_DEC: COMMA . IDENTIFIER MULT_DEC

    IDENTIFIER  shift, and go to state 47


state 33

   23 VAR_DEC: VAR IDENTIFIER MULT_DEC . COLON TYPE_2 SEMICOLON

    COLON  shift, and go to state 48


state 34

   17 MULT_FUNCTIONS: F MULT_FUNCTIONS .

    $default  reduce using rule 17 (MULT_FUNCTIONS)


state 35

   33 IF_EXPR: IF . LEFTPAREN EXPR_ESSION RIGHTPAREN

    LEFTPAREN  shift, and go to state 49


state 36

   36 FOR_: FOR . LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTPAREN  shift, and go to state 50


state 37

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET
   40 ASIGN_MENT: IDENTIFIER . ASSIGNMENT EXPR_ESSION
   64 FUNCTION_CALL: IDENTIFIER . ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTBRACKET  shift, and go to state 51
    ASSIGNMENT   shift, and go to state 52


state 38

   41 ASIGN_MENT: INT_ARRAY_EXP . ARRAY_EXP ASSIGNMENT EXPR_ESSION
   65 FUNCTION_CALL: INT_ARRAY_EXP . ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    ARRAY_EXP          go to state 62
    EXPR_ESSION        go to state 63
    SINGLE_EXPRESSION  go to state 64


state 39

   16 B_O_F: VAR_DECLERATIONS MULT_FUNCTIONS BODY_STATEMENTS . RETURN_

    RETURN  shift, and go to state 65

    RETURN_  go to state 66


state 40

   19 BODY_STATEMENTS: STATEMENTS_ . BODY_STATEMENTS

    IF          shift, and go to state 35
    FOR         shift, and go to state 36
    IDENTIFIER  shift, and go to state 37

    $default  reduce using rule 20 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 38
    BODY_STATEMENTS  go to state 67
    STATEMENTS_      go to state 40
    IF_              go to state 41
    IF_EXPR          go to state 42
    IF_ELSE          go to state 43
    FOR_             go to state 44
    ASIGN_MENT       go to state 45
    FUNCTION_CALL    go to state 46


state 41

   28 STATEMENTS_: IF_ .

    $default  reduce using rule 28 (STATEMENTS_)


state 42

   32 IF_: IF_EXPR . IF_BODY
   35 IF_ELSE: IF_EXPR . IF_BODY ELSE LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTBRACE  shift, and go to state 68

    IF_BODY  go to state 69


state 43

   29 STATEMENTS_: IF_ELSE .

    $default  reduce using rule 29 (STATEMENTS_)


state 44

   30 STATEMENTS_: FOR_ .

    $default  reduce using rule 30 (STATEMENTS_)


state 45

   26 STATEMENTS_: ASIGN_MENT . SEMICOLON

    SEMICOLON  shift, and go to state 70


state 46

   27 STATEMENTS_: FUNCTION_CALL . SEMICOLON

    SEMICOLON  shift, and go to state 71


state 47

   24 MULT_DEC: COMMA IDENTIFIER . MULT_DEC

    COMMA  shift, and go to state 32

    $default  reduce using rule 25 (MULT_DEC)

    MULT_DEC  go to state 72


state 48

   23 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON . TYPE_2 SEMICOLON

    BOOL      shift, and go to state 14
    INT       shift, and go to state 15
    INTARRAY  shift, and go to state 73

    TYPE       go to state 74
    TYPE_2     go to state 75
    INT_ARRAY  go to state 76


state 49

   33 IF_EXPR: IF LEFTPAREN . EXPR_ESSION RIGHTPAREN

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 77
    SINGLE_EXPRESSION  go to state 64


state 50

   36 FOR_: FOR LEFTPAREN . FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    IDENTIFIER  shift, and go to state 78

    $default  reduce using rule 39 (FOR_ASIGN)

    INT_ARRAY_EXP  go to state 79
    FOR_PARAMS     go to state 80
    FOR_ASIGN      go to state 81
    ASIGN_MENT     go to state 82


state 51

   14 INT_ARRAY_EXP: IDENTIFIER LEFTBRACKET .

    $default  reduce using rule 14 (INT_ARRAY_EXP)


state 52

   40 ASIGN_MENT: IDENTIFIER ASSIGNMENT . EXPR_ESSION
   64 FUNCTION_CALL: IDENTIFIER ASSIGNMENT . IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 83
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 84
    SINGLE_EXPRESSION  go to state 64


state 53

   45 EXPR_ESSION: NOT . EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 85
    SINGLE_EXPRESSION  go to state 64


state 54

   44 EXPR_ESSION: MINUS . EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 86
    SINGLE_EXPRESSION  go to state 64


state 55

   60 SINGLE_EXPRESSION: TRUE .

    $default  reduce using rule 60 (SINGLE_EXPRESSION)


state 56

   61 SINGLE_EXPRESSION: FALSE .

    $default  reduce using rule 61 (SINGLE_EXPRESSION)


state 57

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET
   62 SINGLE_EXPRESSION: IDENTIFIER .

    LEFTBRACKET  shift, and go to state 51

    $default  reduce using rule 62 (SINGLE_EXPRESSION)


state 58

   59 SINGLE_EXPRESSION: INTEGER .

    $default  reduce using rule 59 (SINGLE_EXPRESSION)


state 59

   43 EXPR_ESSION: ABSOLUTEVALUE . EXPR_ESSION ABSOLUTEVALUE

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 87
    SINGLE_EXPRESSION  go to state 64


state 60

   42 EXPR_ESSION: LEFTPAREN . EXPR_ESSION RIGHTPAREN

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 88
    SINGLE_EXPRESSION  go to state 64


state 61

   63 SINGLE_EXPRESSION: INT_ARRAY_EXP . ARRAY_EXP

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    ARRAY_EXP          go to state 89
    EXPR_ESSION        go to state 63
    SINGLE_EXPRESSION  go to state 64


state 62

   41 ASIGN_MENT: INT_ARRAY_EXP ARRAY_EXP . ASSIGNMENT EXPR_ESSION
   65 FUNCTION_CALL: INT_ARRAY_EXP ARRAY_EXP . ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    ASSIGNMENT  shift, and go to state 90


state 63

   15 ARRAY_EXP: EXPR_ESSION . RIGHTBRACKET
   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    EQEQ          shift, and go to state 91
    GT            shift, and go to state 92
    GTE           shift, and go to state 93
    LT            shift, and go to state 94
    LTE           shift, and go to state 95
    NE            shift, and go to state 96
    ANDAND        shift, and go to state 97
    OROR          shift, and go to state 98
    PLUS          shift, and go to state 99
    MINUS         shift, and go to state 100
    TIMES         shift, and go to state 101
    DIVIDE        shift, and go to state 102
    RIGHTBRACKET  shift, and go to state 103


state 64

   58 EXPR_ESSION: SINGLE_EXPRESSION .

    $default  reduce using rule 58 (EXPR_ESSION)


state 65

   31 RETURN_: RETURN . EXPR_ESSION SEMICOLON

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 104
    SINGLE_EXPRESSION  go to state 64


state 66

   16 B_O_F: VAR_DECLERATIONS MULT_FUNCTIONS BODY_STATEMENTS RETURN_ .

    $default  reduce using rule 16 (B_O_F)


state 67

   19 BODY_STATEMENTS: STATEMENTS_ BODY_STATEMENTS .

    $default  reduce using rule 19 (BODY_STATEMENTS)


state 68

   34 IF_BODY: LEFTBRACE . BODY_STATEMENTS RIGHTBRACE

    IF          shift, and go to state 35
    FOR         shift, and go to state 36
    IDENTIFIER  shift, and go to state 37

    $default  reduce using rule 20 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 38
    BODY_STATEMENTS  go to state 105
    STATEMENTS_      go to state 40
    IF_              go to state 41
    IF_EXPR          go to state 42
    IF_ELSE          go to state 43
    FOR_             go to state 44
    ASIGN_MENT       go to state 45
    FUNCTION_CALL    go to state 46


state 69

   32 IF_: IF_EXPR IF_BODY .
   35 IF_ELSE: IF_EXPR IF_BODY . ELSE LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    ELSE  shift, and go to state 106

    $default  reduce using rule 32 (IF_)


state 70

   26 STATEMENTS_: ASIGN_MENT SEMICOLON .

    $default  reduce using rule 26 (STATEMENTS_)


state 71

   27 STATEMENTS_: FUNCTION_CALL SEMICOLON .

    $default  reduce using rule 27 (STATEMENTS_)


state 72

   24 MULT_DEC: COMMA IDENTIFIER MULT_DEC .

    $default  reduce using rule 24 (MULT_DEC)


state 73

   13 INT_ARRAY: INTARRAY . LEFTBRACKET INTEGER RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 107


state 74

   11 TYPE_2: TYPE .

    $default  reduce using rule 11 (TYPE_2)


state 75

   23 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE_2 . SEMICOLON

    SEMICOLON  shift, and go to state 108


state 76

   12 TYPE_2: INT_ARRAY .

    $default  reduce using rule 12 (TYPE_2)


state 77

   33 IF_EXPR: IF LEFTPAREN EXPR_ESSION . RIGHTPAREN
   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    EQEQ        shift, and go to state 91
    GT          shift, and go to state 92
    GTE         shift, and go to state 93
    LT          shift, and go to state 94
    LTE         shift, and go to state 95
    NE          shift, and go to state 96
    ANDAND      shift, and go to state 97
    OROR        shift, and go to state 98
    PLUS        shift, and go to state 99
    MINUS       shift, and go to state 100
    TIMES       shift, and go to state 101
    DIVIDE      shift, and go to state 102
    RIGHTPAREN  shift, and go to state 109


state 78

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET
   40 ASIGN_MENT: IDENTIFIER . ASSIGNMENT EXPR_ESSION

    LEFTBRACKET  shift, and go to state 51
    ASSIGNMENT   shift, and go to state 110


state 79

   41 ASIGN_MENT: INT_ARRAY_EXP . ARRAY_EXP ASSIGNMENT EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    ARRAY_EXP          go to state 111
    EXPR_ESSION        go to state 63
    SINGLE_EXPRESSION  go to state 64


state 80

   36 FOR_: FOR LEFTPAREN FOR_PARAMS . RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    RIGHTPAREN  shift, and go to state 112


state 81

   37 FOR_PARAMS: FOR_ASIGN . LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN

    LEFTPAREN  shift, and go to state 113


state 82

   38 FOR_ASIGN: ASIGN_MENT . SEMICOLON

    SEMICOLON  shift, and go to state 114


state 83

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET
   62 SINGLE_EXPRESSION: IDENTIFIER .
   64 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER . LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTPAREN    shift, and go to state 115
    LEFTBRACKET  shift, and go to state 51

    $default  reduce using rule 62 (SINGLE_EXPRESSION)


state 84

   40 ASIGN_MENT: IDENTIFIER ASSIGNMENT EXPR_ESSION .
   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    EQEQ    shift, and go to state 91
    GT      shift, and go to state 92
    GTE     shift, and go to state 93
    LT      shift, and go to state 94
    LTE     shift, and go to state 95
    NE      shift, and go to state 96
    ANDAND  shift, and go to state 97
    OROR    shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    TIMES   shift, and go to state 101
    DIVIDE  shift, and go to state 102

    $default  reduce using rule 40 (ASIGN_MENT)


state 85

   45 EXPR_ESSION: NOT EXPR_ESSION .
   46            | EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    $default  reduce using rule 45 (EXPR_ESSION)


state 86

   44 EXPR_ESSION: MINUS EXPR_ESSION .
   46            | EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    $default  reduce using rule 44 (EXPR_ESSION)


state 87

   43 EXPR_ESSION: ABSOLUTEVALUE EXPR_ESSION . ABSOLUTEVALUE
   46            | EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    EQEQ           shift, and go to state 91
    GT             shift, and go to state 92
    GTE            shift, and go to state 93
    LT             shift, and go to state 94
    LTE            shift, and go to state 95
    NE             shift, and go to state 96
    ANDAND         shift, and go to state 97
    OROR           shift, and go to state 98
    PLUS           shift, and go to state 99
    MINUS          shift, and go to state 100
    TIMES          shift, and go to state 101
    DIVIDE         shift, and go to state 102
    ABSOLUTEVALUE  shift, and go to state 116


state 88

   42 EXPR_ESSION: LEFTPAREN EXPR_ESSION . RIGHTPAREN
   46            | EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    EQEQ        shift, and go to state 91
    GT          shift, and go to state 92
    GTE         shift, and go to state 93
    LT          shift, and go to state 94
    LTE         shift, and go to state 95
    NE          shift, and go to state 96
    ANDAND      shift, and go to state 97
    OROR        shift, and go to state 98
    PLUS        shift, and go to state 99
    MINUS       shift, and go to state 100
    TIMES       shift, and go to state 101
    DIVIDE      shift, and go to state 102
    RIGHTPAREN  shift, and go to state 117


state 89

   63 SINGLE_EXPRESSION: INT_ARRAY_EXP ARRAY_EXP .

    $default  reduce using rule 63 (SINGLE_EXPRESSION)


state 90

   41 ASIGN_MENT: INT_ARRAY_EXP ARRAY_EXP ASSIGNMENT . EXPR_ESSION
   65 FUNCTION_CALL: INT_ARRAY_EXP ARRAY_EXP ASSIGNMENT . IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 118
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 119
    SINGLE_EXPRESSION  go to state 64


state 91

   52 EXPR_ESSION: EXPR_ESSION EQEQ . EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 120
    SINGLE_EXPRESSION  go to state 64


state 92

   53 EXPR_ESSION: EXPR_ESSION GT . EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 121
    SINGLE_EXPRESSION  go to state 64


state 93

   54 EXPR_ESSION: EXPR_ESSION GTE . EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 122
    SINGLE_EXPRESSION  go to state 64


state 94

   55 EXPR_ESSION: EXPR_ESSION LT . EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 123
    SINGLE_EXPRESSION  go to state 64


state 95

   56 EXPR_ESSION: EXPR_ESSION LTE . EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 124
    SINGLE_EXPRESSION  go to state 64


state 96

   57 EXPR_ESSION: EXPR_ESSION NE . EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 125
    SINGLE_EXPRESSION  go to state 64


state 97

   51 EXPR_ESSION: EXPR_ESSION ANDAND . EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 126
    SINGLE_EXPRESSION  go to state 64


state 98

   50 EXPR_ESSION: EXPR_ESSION OROR . EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 127
    SINGLE_EXPRESSION  go to state 64


state 99

   46 EXPR_ESSION: EXPR_ESSION PLUS . EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 128
    SINGLE_EXPRESSION  go to state 64


state 100

   47 EXPR_ESSION: EXPR_ESSION MINUS . EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 129
    SINGLE_EXPRESSION  go to state 64


state 101

   48 EXPR_ESSION: EXPR_ESSION TIMES . EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 130
    SINGLE_EXPRESSION  go to state 64


state 102

   49 EXPR_ESSION: EXPR_ESSION DIVIDE . EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 131
    SINGLE_EXPRESSION  go to state 64


state 103

   15 ARRAY_EXP: EXPR_ESSION RIGHTBRACKET .

    $default  reduce using rule 15 (ARRAY_EXP)


state 104

   31 RETURN_: RETURN EXPR_ESSION . SEMICOLON
   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    EQEQ       shift, and go to state 91
    GT         shift, and go to state 92
    GTE        shift, and go to state 93
    LT         shift, and go to state 94
    LTE        shift, and go to state 95
    NE         shift, and go to state 96
    ANDAND     shift, and go to state 97
    OROR       shift, and go to state 98
    PLUS       shift, and go to state 99
    MINUS      shift, and go to state 100
    TIMES      shift, and go to state 101
    DIVIDE     shift, and go to state 102
    SEMICOLON  shift, and go to state 132


state 105

   34 IF_BODY: LEFTBRACE BODY_STATEMENTS . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 133


state 106

   35 IF_ELSE: IF_EXPR IF_BODY ELSE . LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTBRACE  shift, and go to state 134


state 107

   13 INT_ARRAY: INTARRAY LEFTBRACKET . INTEGER RIGHTBRACKET

    INTEGER  shift, and go to state 135


state 108

   23 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE_2 SEMICOLON .

    $default  reduce using rule 23 (VAR_DEC)


state 109

   33 IF_EXPR: IF LEFTPAREN EXPR_ESSION RIGHTPAREN .

    $default  reduce using rule 33 (IF_EXPR)


state 110

   40 ASIGN_MENT: IDENTIFIER ASSIGNMENT . EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 84
    SINGLE_EXPRESSION  go to state 64


state 111

   41 ASIGN_MENT: INT_ARRAY_EXP ARRAY_EXP . ASSIGNMENT EXPR_ESSION

    ASSIGNMENT  shift, and go to state 136


state 112

   36 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN . LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTBRACE  shift, and go to state 137


state 113

   37 FOR_PARAMS: FOR_ASIGN LEFTPAREN . EXPR_ESSION RIGHTPAREN FOR_ASIGN

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 138
    SINGLE_EXPRESSION  go to state 64


state 114

   38 FOR_ASIGN: ASIGN_MENT SEMICOLON .

    $default  reduce using rule 38 (FOR_ASIGN)


state 115

   64 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN . IN_PARAMS RIGHTPAREN

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    $default  reduce using rule 67 (IN_PARAMS)

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 139
    SINGLE_EXPRESSION  go to state 64
    IN_PARAMS          go to state 140


state 116

   43 EXPR_ESSION: ABSOLUTEVALUE EXPR_ESSION ABSOLUTEVALUE .

    $default  reduce using rule 43 (EXPR_ESSION)


state 117

   42 EXPR_ESSION: LEFTPAREN EXPR_ESSION RIGHTPAREN .

    $default  reduce using rule 42 (EXPR_ESSION)


state 118

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET
   62 SINGLE_EXPRESSION: IDENTIFIER .
   65 FUNCTION_CALL: INT_ARRAY_EXP ARRAY_EXP ASSIGNMENT IDENTIFIER . LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTPAREN    shift, and go to state 141
    LEFTBRACKET  shift, and go to state 51

    $default  reduce using rule 62 (SINGLE_EXPRESSION)


state 119

   41 ASIGN_MENT: INT_ARRAY_EXP ARRAY_EXP ASSIGNMENT EXPR_ESSION .
   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    EQEQ    shift, and go to state 91
    GT      shift, and go to state 92
    GTE     shift, and go to state 93
    LT      shift, and go to state 94
    LTE     shift, and go to state 95
    NE      shift, and go to state 96
    ANDAND  shift, and go to state 97
    OROR    shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    TIMES   shift, and go to state 101
    DIVIDE  shift, and go to state 102

    $default  reduce using rule 41 (ASIGN_MENT)


state 120

   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   52            | EXPR_ESSION EQEQ EXPR_ESSION .
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    GT      shift, and go to state 92
    GTE     shift, and go to state 93
    LT      shift, and go to state 94
    LTE     shift, and go to state 95
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    TIMES   shift, and go to state 101
    DIVIDE  shift, and go to state 102

    $default  reduce using rule 52 (EXPR_ESSION)


state 121

   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   53            | EXPR_ESSION GT EXPR_ESSION .
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    TIMES   shift, and go to state 101
    DIVIDE  shift, and go to state 102

    $default  reduce using rule 53 (EXPR_ESSION)


state 122

   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   54            | EXPR_ESSION GTE EXPR_ESSION .
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    TIMES   shift, and go to state 101
    DIVIDE  shift, and go to state 102

    $default  reduce using rule 54 (EXPR_ESSION)


state 123

   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   55            | EXPR_ESSION LT EXPR_ESSION .
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    TIMES   shift, and go to state 101
    DIVIDE  shift, and go to state 102

    $default  reduce using rule 55 (EXPR_ESSION)


state 124

   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   56            | EXPR_ESSION LTE EXPR_ESSION .
   57            | EXPR_ESSION . NE EXPR_ESSION

    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    TIMES   shift, and go to state 101
    DIVIDE  shift, and go to state 102

    $default  reduce using rule 56 (EXPR_ESSION)


state 125

   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION
   57            | EXPR_ESSION NE EXPR_ESSION .

    GT      shift, and go to state 92
    GTE     shift, and go to state 93
    LT      shift, and go to state 94
    LTE     shift, and go to state 95
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    TIMES   shift, and go to state 101
    DIVIDE  shift, and go to state 102

    $default  reduce using rule 57 (EXPR_ESSION)


state 126

   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   51            | EXPR_ESSION ANDAND EXPR_ESSION .
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    EQEQ    shift, and go to state 91
    GT      shift, and go to state 92
    GTE     shift, and go to state 93
    LT      shift, and go to state 94
    LTE     shift, and go to state 95
    NE      shift, and go to state 96
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    TIMES   shift, and go to state 101
    DIVIDE  shift, and go to state 102

    $default  reduce using rule 51 (EXPR_ESSION)


state 127

   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   50            | EXPR_ESSION OROR EXPR_ESSION .
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    EQEQ    shift, and go to state 91
    GT      shift, and go to state 92
    GTE     shift, and go to state 93
    LT      shift, and go to state 94
    LTE     shift, and go to state 95
    NE      shift, and go to state 96
    ANDAND  shift, and go to state 97
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    TIMES   shift, and go to state 101
    DIVIDE  shift, and go to state 102

    $default  reduce using rule 50 (EXPR_ESSION)


state 128

   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   46            | EXPR_ESSION PLUS EXPR_ESSION .
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    TIMES   shift, and go to state 101
    DIVIDE  shift, and go to state 102

    $default  reduce using rule 46 (EXPR_ESSION)


state 129

   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   47            | EXPR_ESSION MINUS EXPR_ESSION .
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    TIMES   shift, and go to state 101
    DIVIDE  shift, and go to state 102

    $default  reduce using rule 47 (EXPR_ESSION)


state 130

   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   48            | EXPR_ESSION TIMES EXPR_ESSION .
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    $default  reduce using rule 48 (EXPR_ESSION)


state 131

   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   49            | EXPR_ESSION DIVIDE EXPR_ESSION .
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    $default  reduce using rule 49 (EXPR_ESSION)


state 132

   31 RETURN_: RETURN EXPR_ESSION SEMICOLON .

    $default  reduce using rule 31 (RETURN_)


state 133

   34 IF_BODY: LEFTBRACE BODY_STATEMENTS RIGHTBRACE .

    $default  reduce using rule 34 (IF_BODY)


state 134

   35 IF_ELSE: IF_EXPR IF_BODY ELSE LEFTBRACE . BODY_STATEMENTS RIGHTBRACE

    IF          shift, and go to state 35
    FOR         shift, and go to state 36
    IDENTIFIER  shift, and go to state 37

    $default  reduce using rule 20 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 38
    BODY_STATEMENTS  go to state 142
    STATEMENTS_      go to state 40
    IF_              go to state 41
    IF_EXPR          go to state 42
    IF_ELSE          go to state 43
    FOR_             go to state 44
    ASIGN_MENT       go to state 45
    FUNCTION_CALL    go to state 46


state 135

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 143


state 136

   41 ASIGN_MENT: INT_ARRAY_EXP ARRAY_EXP ASSIGNMENT . EXPR_ESSION

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 119
    SINGLE_EXPRESSION  go to state 64


state 137

   36 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE . BODY_STATEMENTS RIGHTBRACE

    IF          shift, and go to state 35
    FOR         shift, and go to state 36
    IDENTIFIER  shift, and go to state 37

    $default  reduce using rule 20 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 38
    BODY_STATEMENTS  go to state 144
    STATEMENTS_      go to state 40
    IF_              go to state 41
    IF_EXPR          go to state 42
    IF_ELSE          go to state 43
    FOR_             go to state 44
    ASIGN_MENT       go to state 45
    FUNCTION_CALL    go to state 46


state 138

   37 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION . RIGHTPAREN FOR_ASIGN
   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION

    EQEQ        shift, and go to state 91
    GT          shift, and go to state 92
    GTE         shift, and go to state 93
    LT          shift, and go to state 94
    LTE         shift, and go to state 95
    NE          shift, and go to state 96
    ANDAND      shift, and go to state 97
    OROR        shift, and go to state 98
    PLUS        shift, and go to state 99
    MINUS       shift, and go to state 100
    TIMES       shift, and go to state 101
    DIVIDE      shift, and go to state 102
    RIGHTPAREN  shift, and go to state 145


state 139

   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION
   66 IN_PARAMS: EXPR_ESSION . NEXT_PARAM

    EQEQ    shift, and go to state 91
    GT      shift, and go to state 92
    GTE     shift, and go to state 93
    LT      shift, and go to state 94
    LTE     shift, and go to state 95
    NE      shift, and go to state 96
    ANDAND  shift, and go to state 97
    OROR    shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    TIMES   shift, and go to state 101
    DIVIDE  shift, and go to state 102
    COMMA   shift, and go to state 146

    $default  reduce using rule 69 (NEXT_PARAM)

    NEXT_PARAM  go to state 147


state 140

   64 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS . RIGHTPAREN

    RIGHTPAREN  shift, and go to state 148


state 141

   65 FUNCTION_CALL: INT_ARRAY_EXP ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN . IN_PARAMS RIGHTPAREN

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    $default  reduce using rule 67 (IN_PARAMS)

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 139
    SINGLE_EXPRESSION  go to state 64
    IN_PARAMS          go to state 149


state 142

   35 IF_ELSE: IF_EXPR IF_BODY ELSE LEFTBRACE BODY_STATEMENTS . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 150


state 143

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER RIGHTBRACKET .

    $default  reduce using rule 13 (INT_ARRAY)


state 144

   36 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 151


state 145

   37 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN . FOR_ASIGN

    IDENTIFIER  shift, and go to state 78

    $default  reduce using rule 39 (FOR_ASIGN)

    INT_ARRAY_EXP  go to state 79
    FOR_ASIGN      go to state 152
    ASIGN_MENT     go to state 82


state 146

   68 NEXT_PARAM: COMMA . EXPR_ESSION NEXT_PARAM

    NOT            shift, and go to state 53
    MINUS          shift, and go to state 54
    TRUE           shift, and go to state 55
    FALSE          shift, and go to state 56
    IDENTIFIER     shift, and go to state 57
    INTEGER        shift, and go to state 58
    ABSOLUTEVALUE  shift, and go to state 59
    LEFTPAREN      shift, and go to state 60

    INT_ARRAY_EXP      go to state 61
    EXPR_ESSION        go to state 153
    SINGLE_EXPRESSION  go to state 64


state 147

   66 IN_PARAMS: EXPR_ESSION NEXT_PARAM .

    $default  reduce using rule 66 (IN_PARAMS)


state 148

   64 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN .

    $default  reduce using rule 64 (FUNCTION_CALL)


state 149

   65 FUNCTION_CALL: INT_ARRAY_EXP ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS . RIGHTPAREN

    RIGHTPAREN  shift, and go to state 154


state 150

   35 IF_ELSE: IF_EXPR IF_BODY ELSE LEFTBRACE BODY_STATEMENTS RIGHTBRACE .

    $default  reduce using rule 35 (IF_ELSE)


state 151

   36 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE .

    $default  reduce using rule 36 (FOR_)


state 152

   37 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN .

    $default  reduce using rule 37 (FOR_PARAMS)


state 153

   46 EXPR_ESSION: EXPR_ESSION . PLUS EXPR_ESSION
   47            | EXPR_ESSION . MINUS EXPR_ESSION
   48            | EXPR_ESSION . TIMES EXPR_ESSION
   49            | EXPR_ESSION . DIVIDE EXPR_ESSION
   50            | EXPR_ESSION . OROR EXPR_ESSION
   51            | EXPR_ESSION . ANDAND EXPR_ESSION
   52            | EXPR_ESSION . EQEQ EXPR_ESSION
   53            | EXPR_ESSION . GT EXPR_ESSION
   54            | EXPR_ESSION . GTE EXPR_ESSION
   55            | EXPR_ESSION . LT EXPR_ESSION
   56            | EXPR_ESSION . LTE EXPR_ESSION
   57            | EXPR_ESSION . NE EXPR_ESSION
   68 NEXT_PARAM: COMMA EXPR_ESSION . NEXT_PARAM

    EQEQ    shift, and go to state 91
    GT      shift, and go to state 92
    GTE     shift, and go to state 93
    LT      shift, and go to state 94
    LTE     shift, and go to state 95
    NE      shift, and go to state 96
    ANDAND  shift, and go to state 97
    OROR    shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    TIMES   shift, and go to state 101
    DIVIDE  shift, and go to state 102
    COMMA   shift, and go to state 146

    $default  reduce using rule 69 (NEXT_PARAM)

    NEXT_PARAM  go to state 155


state 154

   65 FUNCTION_CALL: INT_ARRAY_EXP ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN .

    $default  reduce using rule 65 (FUNCTION_CALL)


state 155

   68 NEXT_PARAM: COMMA EXPR_ESSION NEXT_PARAM .

    $default  reduce using rule 68 (NEXT_PARAM)
