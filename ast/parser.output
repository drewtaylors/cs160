Grammar

    0 $accept: Start $end

    1 Start: F FUNC_

    2 FUNC_: F FUNC_
    3      | /* empty */

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON TYPE LEFTBRACE B_O_F RIGHTBRACE

    5 P_L: IDENTIFIER COLON TYPE MORE_PARAMS
    6    | /* empty */

    7 MORE_PARAMS: COMMA P_L
    8            | /* empty */

    9 TYPE: INT
   10     | BOOL

   11 TYPE_2: TYPE
   12       | INT_ARRAY

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER RIGHTBRACKET

   14 INT_ARRAY_EXP: IDENTIFIER LEFTBRACKET EXPR_ESSION RIGHTBRACKET

   15 B_O_F: VAR_DECLERATIONS BODY_CHOICE RETURN_

   16 BODY_CHOICE: MULT_FUNCTIONS BODY_STATEMENTS

   17 MULT_FUNCTIONS: F MULT_FUNCTIONS
   18               | /* empty */

   19 BODY_STATEMENTS: STATEMENTS_ BODY_STATEMENTS
   20                | /* empty */

   21 VAR_DECLERATIONS: VAR_DEC VAR_DECLERATIONS
   22                 | /* empty */

   23 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE_2 SEMICOLON

   24 MULT_DEC: COMMA IDENTIFIER MULT_DEC
   25         | /* empty */

   26 STATEMENTS_: ASIGN_MENT SEMICOLON
   27            | FUNCTION_CALL SEMICOLON
   28            | IF_
   29            | IF_ELSE
   30            | FOR_

   31 RETURN_: RETURN EXPR_ESSION SEMICOLON

   32 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

   33 IF_ELSE: IF_ ELSE LEFTBRACE BODY_STATEMENTS RIGHTBRACE

   34 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

   35 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN

   36 FOR_ASIGN: ASIGN_MENT SEMICOLON
   37          | /* empty */

   38 ASIGN_MENT: IDENTIFIER ASSIGNMENT EXPR_ESSION
   39           | INT_ARRAY_EXP ASSIGNMENT EXPR_ESSION

   40 EXPR_ESSION: MULT_EXPRESSION
   41            | LEFTPAREN EXPR_ESSION RIGHTPAREN OPE_RATOR
   42            | NOT LEFTPAREN EXPR_ESSION RIGHTPAREN OPE_RATOR
   43            | ABSOLUTEVALUE EXPR_ESSION ABSOLUTEVALUE OPE_RATOR

   44 SINGLE_EXPRESSION: MINUS SINGLE_EXPRESSION
   45                  | INTEGER
   46                  | TRUE
   47                  | FALSE
   48                  | IDENTIFIER
   49                  | INT_ARRAY_EXP
   50                  | NOT SINGLE_EXPRESSION

   51 MULT_EXPRESSION: SINGLE_EXPRESSION OPE_RATOR

   52 OPE_RATOR: PLUS EXPR_ESSION
   53          | MINUS EXPR_ESSION
   54          | TIMES EXPR_ESSION
   55          | DIVIDE EXPR_ESSION
   56          | OROR EXPR_ESSION
   57          | ANDAND EXPR_ESSION
   58          | EQEQ EXPR_ESSION
   59          | GT EXPR_ESSION
   60          | GTE EXPR_ESSION
   61          | LT EXPR_ESSION
   62          | LTE EXPR_ESSION
   63          | NE EXPR_ESSION
   64          | /* empty */

   65 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN
   66              | INT_ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

   67 IN_PARAMS: EXPR_ESSION NEXT_PARAM
   68          | /* empty */

   69 NEXT_PARAM: COMMA IN_PARAMS
   70           | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
BOOL (258) 10
ELSE (259) 33
IF (260) 32
INT (261) 9
FOR (262) 34
VAR (263) 23
FUNCTION (264) 4
INTARRAY (265) 13
RETURN (266) 31
EQEQ (267) 58
GT (268) 59
GTE (269) 60
LT (270) 61
LTE (271) 62
NE (272) 63
ANDAND (273) 57
OROR (274) 56
NOT (275) 42 50
PLUS (276) 52
MINUS (277) 44 53
TIMES (278) 54
DIVIDE (279) 55
TRUE (280) 46
FALSE (281) 47
IDENTIFIER (282) 4 5 14 23 24 38 48 65 66
INTEGER (283) 13 45
SEMICOLON (284) 23 26 27 31 36
COLON (285) 4 5 23
COMMA (286) 7 24 69
ABSOLUTEVALUE (287) 43
LEFTBRACE (288) 4 32 33 34
RIGHTBRACE (289) 4 32 33 34
LEFTPAREN (290) 4 32 34 35 41 42 65 66
RIGHTPAREN (291) 4 32 34 35 41 42 65 66
LEFTBRACKET (292) 13 14
RIGHTBRACKET (293) 13 14
ASSIGNMENT (294) 38 39 65 66


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
Start (41)
    on left: 1, on right: 0
FUNC_ (42)
    on left: 2 3, on right: 1 2
F (43)
    on left: 4, on right: 1 2 17
P_L (44)
    on left: 5 6, on right: 4 7
MORE_PARAMS (45)
    on left: 7 8, on right: 5
TYPE (46)
    on left: 9 10, on right: 4 5 11
TYPE_2 (47)
    on left: 11 12, on right: 23
INT_ARRAY (48)
    on left: 13, on right: 12
INT_ARRAY_EXP (49)
    on left: 14, on right: 39 49 66
B_O_F (50)
    on left: 15, on right: 4
BODY_CHOICE (51)
    on left: 16, on right: 15
MULT_FUNCTIONS (52)
    on left: 17 18, on right: 16 17
BODY_STATEMENTS (53)
    on left: 19 20, on right: 16 19 32 33 34
VAR_DECLERATIONS (54)
    on left: 21 22, on right: 15 21
VAR_DEC (55)
    on left: 23, on right: 21
MULT_DEC (56)
    on left: 24 25, on right: 23 24
STATEMENTS_ (57)
    on left: 26 27 28 29 30, on right: 19
RETURN_ (58)
    on left: 31, on right: 15
IF_ (59)
    on left: 32, on right: 28 33
IF_ELSE (60)
    on left: 33, on right: 29
FOR_ (61)
    on left: 34, on right: 30
FOR_PARAMS (62)
    on left: 35, on right: 34
FOR_ASIGN (63)
    on left: 36 37, on right: 35
ASIGN_MENT (64)
    on left: 38 39, on right: 26 36
EXPR_ESSION (65)
    on left: 40 41 42 43, on right: 14 31 32 35 38 39 41 42 43 52 53
    54 55 56 57 58 59 60 61 62 63 67
SINGLE_EXPRESSION (66)
    on left: 44 45 46 47 48 49 50, on right: 44 50 51
MULT_EXPRESSION (67)
    on left: 51, on right: 40
OPE_RATOR (68)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63 64, on right: 41 42
    43 51
FUNCTION_CALL (69)
    on left: 65 66, on right: 27
IN_PARAMS (70)
    on left: 67 68, on right: 65 66 69
NEXT_PARAM (71)
    on left: 69 70, on right: 67


state 0

    0 $accept: . Start $end

    FUNCTION  shift, and go to state 1

    Start  go to state 2
    F      go to state 3


state 1

    4 F: FUNCTION . IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON TYPE LEFTBRACE B_O_F RIGHTBRACE

    IDENTIFIER  shift, and go to state 4


state 2

    0 $accept: Start . $end

    $end  shift, and go to state 5


state 3

    1 Start: F . FUNC_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (FUNC_)

    FUNC_  go to state 6
    F      go to state 7


state 4

    4 F: FUNCTION IDENTIFIER . LEFTPAREN P_L RIGHTPAREN COLON TYPE LEFTBRACE B_O_F RIGHTBRACE

    LEFTPAREN  shift, and go to state 8


state 5

    0 $accept: Start $end .

    $default  accept


state 6

    1 Start: F FUNC_ .

    $default  reduce using rule 1 (Start)


state 7

    2 FUNC_: F . FUNC_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (FUNC_)

    FUNC_  go to state 9
    F      go to state 7


state 8

    4 F: FUNCTION IDENTIFIER LEFTPAREN . P_L RIGHTPAREN COLON TYPE LEFTBRACE B_O_F RIGHTBRACE

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 6 (P_L)

    P_L  go to state 11


state 9

    2 FUNC_: F FUNC_ .

    $default  reduce using rule 2 (FUNC_)


state 10

    5 P_L: IDENTIFIER . COLON TYPE MORE_PARAMS

    COLON  shift, and go to state 12


state 11

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L . RIGHTPAREN COLON TYPE LEFTBRACE B_O_F RIGHTBRACE

    RIGHTPAREN  shift, and go to state 13


state 12

    5 P_L: IDENTIFIER COLON . TYPE MORE_PARAMS

    BOOL  shift, and go to state 14
    INT   shift, and go to state 15

    TYPE  go to state 16


state 13

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN . COLON TYPE LEFTBRACE B_O_F RIGHTBRACE

    COLON  shift, and go to state 17


state 14

   10 TYPE: BOOL .

    $default  reduce using rule 10 (TYPE)


state 15

    9 TYPE: INT .

    $default  reduce using rule 9 (TYPE)


state 16

    5 P_L: IDENTIFIER COLON TYPE . MORE_PARAMS

    COMMA  shift, and go to state 18

    $default  reduce using rule 8 (MORE_PARAMS)

    MORE_PARAMS  go to state 19


state 17

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON . TYPE LEFTBRACE B_O_F RIGHTBRACE

    BOOL  shift, and go to state 14
    INT   shift, and go to state 15

    TYPE  go to state 20


state 18

    7 MORE_PARAMS: COMMA . P_L

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 6 (P_L)

    P_L  go to state 21


state 19

    5 P_L: IDENTIFIER COLON TYPE MORE_PARAMS .

    $default  reduce using rule 5 (P_L)


state 20

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON TYPE . LEFTBRACE B_O_F RIGHTBRACE

    LEFTBRACE  shift, and go to state 22


state 21

    7 MORE_PARAMS: COMMA P_L .

    $default  reduce using rule 7 (MORE_PARAMS)


state 22

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON TYPE LEFTBRACE . B_O_F RIGHTBRACE

    VAR  shift, and go to state 23

    $default  reduce using rule 22 (VAR_DECLERATIONS)

    B_O_F             go to state 24
    VAR_DECLERATIONS  go to state 25
    VAR_DEC           go to state 26


state 23

   23 VAR_DEC: VAR . IDENTIFIER MULT_DEC COLON TYPE_2 SEMICOLON

    IDENTIFIER  shift, and go to state 27


state 24

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON TYPE LEFTBRACE B_O_F . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 28


state 25

   15 B_O_F: VAR_DECLERATIONS . BODY_CHOICE RETURN_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 18 (MULT_FUNCTIONS)

    F               go to state 29
    BODY_CHOICE     go to state 30
    MULT_FUNCTIONS  go to state 31


state 26

   21 VAR_DECLERATIONS: VAR_DEC . VAR_DECLERATIONS

    VAR  shift, and go to state 23

    $default  reduce using rule 22 (VAR_DECLERATIONS)

    VAR_DECLERATIONS  go to state 32
    VAR_DEC           go to state 26


state 27

   23 VAR_DEC: VAR IDENTIFIER . MULT_DEC COLON TYPE_2 SEMICOLON

    COMMA  shift, and go to state 33

    $default  reduce using rule 25 (MULT_DEC)

    MULT_DEC  go to state 34


state 28

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON TYPE LEFTBRACE B_O_F RIGHTBRACE .

    $default  reduce using rule 4 (F)


state 29

   17 MULT_FUNCTIONS: F . MULT_FUNCTIONS

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 18 (MULT_FUNCTIONS)

    F               go to state 29
    MULT_FUNCTIONS  go to state 35


state 30

   15 B_O_F: VAR_DECLERATIONS BODY_CHOICE . RETURN_

    RETURN  shift, and go to state 36

    RETURN_  go to state 37


state 31

   16 BODY_CHOICE: MULT_FUNCTIONS . BODY_STATEMENTS

    IF          shift, and go to state 38
    FOR         shift, and go to state 39
    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 20 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 41
    BODY_STATEMENTS  go to state 42
    STATEMENTS_      go to state 43
    IF_              go to state 44
    IF_ELSE          go to state 45
    FOR_             go to state 46
    ASIGN_MENT       go to state 47
    FUNCTION_CALL    go to state 48


state 32

   21 VAR_DECLERATIONS: VAR_DEC VAR_DECLERATIONS .

    $default  reduce using rule 21 (VAR_DECLERATIONS)


state 33

   24 MULT_DEC: COMMA . IDENTIFIER MULT_DEC

    IDENTIFIER  shift, and go to state 49


state 34

   23 VAR_DEC: VAR IDENTIFIER MULT_DEC . COLON TYPE_2 SEMICOLON

    COLON  shift, and go to state 50


state 35

   17 MULT_FUNCTIONS: F MULT_FUNCTIONS .

    $default  reduce using rule 17 (MULT_FUNCTIONS)


state 36

   31 RETURN_: RETURN . EXPR_ESSION SEMICOLON

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 60
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 37

   15 B_O_F: VAR_DECLERATIONS BODY_CHOICE RETURN_ .

    $default  reduce using rule 15 (B_O_F)


state 38

   32 IF_: IF . LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTPAREN  shift, and go to state 63


state 39

   34 FOR_: FOR . LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTPAREN  shift, and go to state 64


state 40

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET
   38 ASIGN_MENT: IDENTIFIER . ASSIGNMENT EXPR_ESSION
   65 FUNCTION_CALL: IDENTIFIER . ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTBRACKET  shift, and go to state 65
    ASSIGNMENT   shift, and go to state 66


state 41

   39 ASIGN_MENT: INT_ARRAY_EXP . ASSIGNMENT EXPR_ESSION
   66 FUNCTION_CALL: INT_ARRAY_EXP . ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    ASSIGNMENT  shift, and go to state 67


state 42

   16 BODY_CHOICE: MULT_FUNCTIONS BODY_STATEMENTS .

    $default  reduce using rule 16 (BODY_CHOICE)


state 43

   19 BODY_STATEMENTS: STATEMENTS_ . BODY_STATEMENTS

    IF          shift, and go to state 38
    FOR         shift, and go to state 39
    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 20 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 41
    BODY_STATEMENTS  go to state 68
    STATEMENTS_      go to state 43
    IF_              go to state 44
    IF_ELSE          go to state 45
    FOR_             go to state 46
    ASIGN_MENT       go to state 47
    FUNCTION_CALL    go to state 48


state 44

   28 STATEMENTS_: IF_ .
   33 IF_ELSE: IF_ . ELSE LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    ELSE  shift, and go to state 69

    $default  reduce using rule 28 (STATEMENTS_)


state 45

   29 STATEMENTS_: IF_ELSE .

    $default  reduce using rule 29 (STATEMENTS_)


state 46

   30 STATEMENTS_: FOR_ .

    $default  reduce using rule 30 (STATEMENTS_)


state 47

   26 STATEMENTS_: ASIGN_MENT . SEMICOLON

    SEMICOLON  shift, and go to state 70


state 48

   27 STATEMENTS_: FUNCTION_CALL . SEMICOLON

    SEMICOLON  shift, and go to state 71


state 49

   24 MULT_DEC: COMMA IDENTIFIER . MULT_DEC

    COMMA  shift, and go to state 33

    $default  reduce using rule 25 (MULT_DEC)

    MULT_DEC  go to state 72


state 50

   23 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON . TYPE_2 SEMICOLON

    BOOL      shift, and go to state 14
    INT       shift, and go to state 15
    INTARRAY  shift, and go to state 73

    TYPE       go to state 74
    TYPE_2     go to state 75
    INT_ARRAY  go to state 76


state 51

   42 EXPR_ESSION: NOT . LEFTPAREN EXPR_ESSION RIGHTPAREN OPE_RATOR
   50 SINGLE_EXPRESSION: NOT . SINGLE_EXPRESSION

    NOT         shift, and go to state 77
    MINUS       shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 56
    LEFTPAREN   shift, and go to state 78

    INT_ARRAY_EXP      go to state 59
    SINGLE_EXPRESSION  go to state 79


state 52

   44 SINGLE_EXPRESSION: MINUS . SINGLE_EXPRESSION

    NOT         shift, and go to state 77
    MINUS       shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 56

    INT_ARRAY_EXP      go to state 59
    SINGLE_EXPRESSION  go to state 80


state 53

   46 SINGLE_EXPRESSION: TRUE .

    $default  reduce using rule 46 (SINGLE_EXPRESSION)


state 54

   47 SINGLE_EXPRESSION: FALSE .

    $default  reduce using rule 47 (SINGLE_EXPRESSION)


state 55

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET
   48 SINGLE_EXPRESSION: IDENTIFIER .

    LEFTBRACKET  shift, and go to state 65

    $default  reduce using rule 48 (SINGLE_EXPRESSION)


state 56

   45 SINGLE_EXPRESSION: INTEGER .

    $default  reduce using rule 45 (SINGLE_EXPRESSION)


state 57

   43 EXPR_ESSION: ABSOLUTEVALUE . EXPR_ESSION ABSOLUTEVALUE OPE_RATOR

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 81
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 58

   41 EXPR_ESSION: LEFTPAREN . EXPR_ESSION RIGHTPAREN OPE_RATOR

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 82
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 59

   49 SINGLE_EXPRESSION: INT_ARRAY_EXP .

    $default  reduce using rule 49 (SINGLE_EXPRESSION)


state 60

   31 RETURN_: RETURN EXPR_ESSION . SEMICOLON

    SEMICOLON  shift, and go to state 83


state 61

   51 MULT_EXPRESSION: SINGLE_EXPRESSION . OPE_RATOR

    EQEQ    shift, and go to state 84
    GT      shift, and go to state 85
    GTE     shift, and go to state 86
    LT      shift, and go to state 87
    LTE     shift, and go to state 88
    NE      shift, and go to state 89
    ANDAND  shift, and go to state 90
    OROR    shift, and go to state 91
    PLUS    shift, and go to state 92
    MINUS   shift, and go to state 93
    TIMES   shift, and go to state 94
    DIVIDE  shift, and go to state 95

    $default  reduce using rule 64 (OPE_RATOR)

    OPE_RATOR  go to state 96


state 62

   40 EXPR_ESSION: MULT_EXPRESSION .

    $default  reduce using rule 40 (EXPR_ESSION)


state 63

   32 IF_: IF LEFTPAREN . EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 97
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 64

   34 FOR_: FOR LEFTPAREN . FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    IDENTIFIER  shift, and go to state 98

    $default  reduce using rule 37 (FOR_ASIGN)

    INT_ARRAY_EXP  go to state 99
    FOR_PARAMS     go to state 100
    FOR_ASIGN      go to state 101
    ASIGN_MENT     go to state 102


state 65

   14 INT_ARRAY_EXP: IDENTIFIER LEFTBRACKET . EXPR_ESSION RIGHTBRACKET

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 103
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 66

   38 ASIGN_MENT: IDENTIFIER ASSIGNMENT . EXPR_ESSION
   65 FUNCTION_CALL: IDENTIFIER ASSIGNMENT . IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 104
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 105
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 67

   39 ASIGN_MENT: INT_ARRAY_EXP ASSIGNMENT . EXPR_ESSION
   66 FUNCTION_CALL: INT_ARRAY_EXP ASSIGNMENT . IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 106
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 107
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 68

   19 BODY_STATEMENTS: STATEMENTS_ BODY_STATEMENTS .

    $default  reduce using rule 19 (BODY_STATEMENTS)


state 69

   33 IF_ELSE: IF_ ELSE . LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTBRACE  shift, and go to state 108


state 70

   26 STATEMENTS_: ASIGN_MENT SEMICOLON .

    $default  reduce using rule 26 (STATEMENTS_)


state 71

   27 STATEMENTS_: FUNCTION_CALL SEMICOLON .

    $default  reduce using rule 27 (STATEMENTS_)


state 72

   24 MULT_DEC: COMMA IDENTIFIER MULT_DEC .

    $default  reduce using rule 24 (MULT_DEC)


state 73

   13 INT_ARRAY: INTARRAY . LEFTBRACKET INTEGER RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 109


state 74

   11 TYPE_2: TYPE .

    $default  reduce using rule 11 (TYPE_2)


state 75

   23 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE_2 . SEMICOLON

    SEMICOLON  shift, and go to state 110


state 76

   12 TYPE_2: INT_ARRAY .

    $default  reduce using rule 12 (TYPE_2)


state 77

   50 SINGLE_EXPRESSION: NOT . SINGLE_EXPRESSION

    NOT         shift, and go to state 77
    MINUS       shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 56

    INT_ARRAY_EXP      go to state 59
    SINGLE_EXPRESSION  go to state 79


state 78

   42 EXPR_ESSION: NOT LEFTPAREN . EXPR_ESSION RIGHTPAREN OPE_RATOR

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 111
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 79

   50 SINGLE_EXPRESSION: NOT SINGLE_EXPRESSION .

    $default  reduce using rule 50 (SINGLE_EXPRESSION)


state 80

   44 SINGLE_EXPRESSION: MINUS SINGLE_EXPRESSION .

    $default  reduce using rule 44 (SINGLE_EXPRESSION)


state 81

   43 EXPR_ESSION: ABSOLUTEVALUE EXPR_ESSION . ABSOLUTEVALUE OPE_RATOR

    ABSOLUTEVALUE  shift, and go to state 112


state 82

   41 EXPR_ESSION: LEFTPAREN EXPR_ESSION . RIGHTPAREN OPE_RATOR

    RIGHTPAREN  shift, and go to state 113


state 83

   31 RETURN_: RETURN EXPR_ESSION SEMICOLON .

    $default  reduce using rule 31 (RETURN_)


state 84

   58 OPE_RATOR: EQEQ . EXPR_ESSION

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 114
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 85

   59 OPE_RATOR: GT . EXPR_ESSION

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 115
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 86

   60 OPE_RATOR: GTE . EXPR_ESSION

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 116
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 87

   61 OPE_RATOR: LT . EXPR_ESSION

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 117
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 88

   62 OPE_RATOR: LTE . EXPR_ESSION

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 118
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 89

   63 OPE_RATOR: NE . EXPR_ESSION

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 119
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 90

   57 OPE_RATOR: ANDAND . EXPR_ESSION

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 120
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 91

   56 OPE_RATOR: OROR . EXPR_ESSION

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 121
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 92

   52 OPE_RATOR: PLUS . EXPR_ESSION

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 122
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 93

   53 OPE_RATOR: MINUS . EXPR_ESSION

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 123
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 94

   54 OPE_RATOR: TIMES . EXPR_ESSION

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 124
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 95

   55 OPE_RATOR: DIVIDE . EXPR_ESSION

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 125
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 96

   51 MULT_EXPRESSION: SINGLE_EXPRESSION OPE_RATOR .

    $default  reduce using rule 51 (MULT_EXPRESSION)


state 97

   32 IF_: IF LEFTPAREN EXPR_ESSION . RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    RIGHTPAREN  shift, and go to state 126


state 98

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET
   38 ASIGN_MENT: IDENTIFIER . ASSIGNMENT EXPR_ESSION

    LEFTBRACKET  shift, and go to state 65
    ASSIGNMENT   shift, and go to state 127


state 99

   39 ASIGN_MENT: INT_ARRAY_EXP . ASSIGNMENT EXPR_ESSION

    ASSIGNMENT  shift, and go to state 128


state 100

   34 FOR_: FOR LEFTPAREN FOR_PARAMS . RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    RIGHTPAREN  shift, and go to state 129


state 101

   35 FOR_PARAMS: FOR_ASIGN . LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN

    LEFTPAREN  shift, and go to state 130


state 102

   36 FOR_ASIGN: ASIGN_MENT . SEMICOLON

    SEMICOLON  shift, and go to state 131


state 103

   14 INT_ARRAY_EXP: IDENTIFIER LEFTBRACKET EXPR_ESSION . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 132


state 104

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET
   48 SINGLE_EXPRESSION: IDENTIFIER .
   65 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER . LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTPAREN    shift, and go to state 133
    LEFTBRACKET  shift, and go to state 65

    $default  reduce using rule 48 (SINGLE_EXPRESSION)


state 105

   38 ASIGN_MENT: IDENTIFIER ASSIGNMENT EXPR_ESSION .

    $default  reduce using rule 38 (ASIGN_MENT)


state 106

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET
   48 SINGLE_EXPRESSION: IDENTIFIER .
   66 FUNCTION_CALL: INT_ARRAY_EXP ASSIGNMENT IDENTIFIER . LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTPAREN    shift, and go to state 134
    LEFTBRACKET  shift, and go to state 65

    $default  reduce using rule 48 (SINGLE_EXPRESSION)


state 107

   39 ASIGN_MENT: INT_ARRAY_EXP ASSIGNMENT EXPR_ESSION .

    $default  reduce using rule 39 (ASIGN_MENT)


state 108

   33 IF_ELSE: IF_ ELSE LEFTBRACE . BODY_STATEMENTS RIGHTBRACE

    IF          shift, and go to state 38
    FOR         shift, and go to state 39
    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 20 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 41
    BODY_STATEMENTS  go to state 135
    STATEMENTS_      go to state 43
    IF_              go to state 44
    IF_ELSE          go to state 45
    FOR_             go to state 46
    ASIGN_MENT       go to state 47
    FUNCTION_CALL    go to state 48


state 109

   13 INT_ARRAY: INTARRAY LEFTBRACKET . INTEGER RIGHTBRACKET

    INTEGER  shift, and go to state 136


state 110

   23 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE_2 SEMICOLON .

    $default  reduce using rule 23 (VAR_DEC)


state 111

   42 EXPR_ESSION: NOT LEFTPAREN EXPR_ESSION . RIGHTPAREN OPE_RATOR

    RIGHTPAREN  shift, and go to state 137


state 112

   43 EXPR_ESSION: ABSOLUTEVALUE EXPR_ESSION ABSOLUTEVALUE . OPE_RATOR

    EQEQ    shift, and go to state 84
    GT      shift, and go to state 85
    GTE     shift, and go to state 86
    LT      shift, and go to state 87
    LTE     shift, and go to state 88
    NE      shift, and go to state 89
    ANDAND  shift, and go to state 90
    OROR    shift, and go to state 91
    PLUS    shift, and go to state 92
    MINUS   shift, and go to state 93
    TIMES   shift, and go to state 94
    DIVIDE  shift, and go to state 95

    $default  reduce using rule 64 (OPE_RATOR)

    OPE_RATOR  go to state 138


state 113

   41 EXPR_ESSION: LEFTPAREN EXPR_ESSION RIGHTPAREN . OPE_RATOR

    EQEQ    shift, and go to state 84
    GT      shift, and go to state 85
    GTE     shift, and go to state 86
    LT      shift, and go to state 87
    LTE     shift, and go to state 88
    NE      shift, and go to state 89
    ANDAND  shift, and go to state 90
    OROR    shift, and go to state 91
    PLUS    shift, and go to state 92
    MINUS   shift, and go to state 93
    TIMES   shift, and go to state 94
    DIVIDE  shift, and go to state 95

    $default  reduce using rule 64 (OPE_RATOR)

    OPE_RATOR  go to state 139


state 114

   58 OPE_RATOR: EQEQ EXPR_ESSION .

    $default  reduce using rule 58 (OPE_RATOR)


state 115

   59 OPE_RATOR: GT EXPR_ESSION .

    $default  reduce using rule 59 (OPE_RATOR)


state 116

   60 OPE_RATOR: GTE EXPR_ESSION .

    $default  reduce using rule 60 (OPE_RATOR)


state 117

   61 OPE_RATOR: LT EXPR_ESSION .

    $default  reduce using rule 61 (OPE_RATOR)


state 118

   62 OPE_RATOR: LTE EXPR_ESSION .

    $default  reduce using rule 62 (OPE_RATOR)


state 119

   63 OPE_RATOR: NE EXPR_ESSION .

    $default  reduce using rule 63 (OPE_RATOR)


state 120

   57 OPE_RATOR: ANDAND EXPR_ESSION .

    $default  reduce using rule 57 (OPE_RATOR)


state 121

   56 OPE_RATOR: OROR EXPR_ESSION .

    $default  reduce using rule 56 (OPE_RATOR)


state 122

   52 OPE_RATOR: PLUS EXPR_ESSION .

    $default  reduce using rule 52 (OPE_RATOR)


state 123

   53 OPE_RATOR: MINUS EXPR_ESSION .

    $default  reduce using rule 53 (OPE_RATOR)


state 124

   54 OPE_RATOR: TIMES EXPR_ESSION .

    $default  reduce using rule 54 (OPE_RATOR)


state 125

   55 OPE_RATOR: DIVIDE EXPR_ESSION .

    $default  reduce using rule 55 (OPE_RATOR)


state 126

   32 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN . LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTBRACE  shift, and go to state 140


state 127

   38 ASIGN_MENT: IDENTIFIER ASSIGNMENT . EXPR_ESSION

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 105
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 128

   39 ASIGN_MENT: INT_ARRAY_EXP ASSIGNMENT . EXPR_ESSION

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 107
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 129

   34 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN . LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTBRACE  shift, and go to state 141


state 130

   35 FOR_PARAMS: FOR_ASIGN LEFTPAREN . EXPR_ESSION RIGHTPAREN FOR_ASIGN

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 142
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62


state 131

   36 FOR_ASIGN: ASIGN_MENT SEMICOLON .

    $default  reduce using rule 36 (FOR_ASIGN)


state 132

   14 INT_ARRAY_EXP: IDENTIFIER LEFTBRACKET EXPR_ESSION RIGHTBRACKET .

    $default  reduce using rule 14 (INT_ARRAY_EXP)


state 133

   65 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN . IN_PARAMS RIGHTPAREN

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    $default  reduce using rule 68 (IN_PARAMS)

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 143
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62
    IN_PARAMS          go to state 144


state 134

   66 FUNCTION_CALL: INT_ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN . IN_PARAMS RIGHTPAREN

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    $default  reduce using rule 68 (IN_PARAMS)

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 143
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62
    IN_PARAMS          go to state 145


state 135

   33 IF_ELSE: IF_ ELSE LEFTBRACE BODY_STATEMENTS . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 146


state 136

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 147


state 137

   42 EXPR_ESSION: NOT LEFTPAREN EXPR_ESSION RIGHTPAREN . OPE_RATOR

    EQEQ    shift, and go to state 84
    GT      shift, and go to state 85
    GTE     shift, and go to state 86
    LT      shift, and go to state 87
    LTE     shift, and go to state 88
    NE      shift, and go to state 89
    ANDAND  shift, and go to state 90
    OROR    shift, and go to state 91
    PLUS    shift, and go to state 92
    MINUS   shift, and go to state 93
    TIMES   shift, and go to state 94
    DIVIDE  shift, and go to state 95

    $default  reduce using rule 64 (OPE_RATOR)

    OPE_RATOR  go to state 148


state 138

   43 EXPR_ESSION: ABSOLUTEVALUE EXPR_ESSION ABSOLUTEVALUE OPE_RATOR .

    $default  reduce using rule 43 (EXPR_ESSION)


state 139

   41 EXPR_ESSION: LEFTPAREN EXPR_ESSION RIGHTPAREN OPE_RATOR .

    $default  reduce using rule 41 (EXPR_ESSION)


state 140

   32 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE . BODY_STATEMENTS RIGHTBRACE

    IF          shift, and go to state 38
    FOR         shift, and go to state 39
    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 20 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 41
    BODY_STATEMENTS  go to state 149
    STATEMENTS_      go to state 43
    IF_              go to state 44
    IF_ELSE          go to state 45
    FOR_             go to state 46
    ASIGN_MENT       go to state 47
    FUNCTION_CALL    go to state 48


state 141

   34 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE . BODY_STATEMENTS RIGHTBRACE

    IF          shift, and go to state 38
    FOR         shift, and go to state 39
    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 20 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 41
    BODY_STATEMENTS  go to state 150
    STATEMENTS_      go to state 43
    IF_              go to state 44
    IF_ELSE          go to state 45
    FOR_             go to state 46
    ASIGN_MENT       go to state 47
    FUNCTION_CALL    go to state 48


state 142

   35 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION . RIGHTPAREN FOR_ASIGN

    RIGHTPAREN  shift, and go to state 151


state 143

   67 IN_PARAMS: EXPR_ESSION . NEXT_PARAM

    COMMA  shift, and go to state 152

    $default  reduce using rule 70 (NEXT_PARAM)

    NEXT_PARAM  go to state 153


state 144

   65 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS . RIGHTPAREN

    RIGHTPAREN  shift, and go to state 154


state 145

   66 FUNCTION_CALL: INT_ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS . RIGHTPAREN

    RIGHTPAREN  shift, and go to state 155


state 146

   33 IF_ELSE: IF_ ELSE LEFTBRACE BODY_STATEMENTS RIGHTBRACE .

    $default  reduce using rule 33 (IF_ELSE)


state 147

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER RIGHTBRACKET .

    $default  reduce using rule 13 (INT_ARRAY)


state 148

   42 EXPR_ESSION: NOT LEFTPAREN EXPR_ESSION RIGHTPAREN OPE_RATOR .

    $default  reduce using rule 42 (EXPR_ESSION)


state 149

   32 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 156


state 150

   34 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 157


state 151

   35 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN . FOR_ASIGN

    IDENTIFIER  shift, and go to state 98

    $default  reduce using rule 37 (FOR_ASIGN)

    INT_ARRAY_EXP  go to state 99
    FOR_ASIGN      go to state 158
    ASIGN_MENT     go to state 102


state 152

   69 NEXT_PARAM: COMMA . IN_PARAMS

    NOT            shift, and go to state 51
    MINUS          shift, and go to state 52
    TRUE           shift, and go to state 53
    FALSE          shift, and go to state 54
    IDENTIFIER     shift, and go to state 55
    INTEGER        shift, and go to state 56
    ABSOLUTEVALUE  shift, and go to state 57
    LEFTPAREN      shift, and go to state 58

    $default  reduce using rule 68 (IN_PARAMS)

    INT_ARRAY_EXP      go to state 59
    EXPR_ESSION        go to state 143
    SINGLE_EXPRESSION  go to state 61
    MULT_EXPRESSION    go to state 62
    IN_PARAMS          go to state 159


state 153

   67 IN_PARAMS: EXPR_ESSION NEXT_PARAM .

    $default  reduce using rule 67 (IN_PARAMS)


state 154

   65 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN .

    $default  reduce using rule 65 (FUNCTION_CALL)


state 155

   66 FUNCTION_CALL: INT_ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN .

    $default  reduce using rule 66 (FUNCTION_CALL)


state 156

   32 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE .

    $default  reduce using rule 32 (IF_)


state 157

   34 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE .

    $default  reduce using rule 34 (FOR_)


state 158

   35 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN .

    $default  reduce using rule 35 (FOR_PARAMS)


state 159

   69 NEXT_PARAM: COMMA IN_PARAMS .

    $default  reduce using rule 69 (NEXT_PARAM)
