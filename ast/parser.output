Grammar

    0 $accept: Start $end

    1 Start: F FUNC_

    2 FUNC_: F FUNC_
    3      | /* empty */

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    5 P_L: IDENTIFIER COLON TYPE MORE_PARAMS
    6    | /* empty */

    7 MORE_PARAMS: COMMA P_L
    8            | /* empty */

    9 TYPE: INT
   10     | BOOL

   11 TYPE_2: TYPE
   12       | INT_ARRAY

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER RIGHTBRACKET

   14 INT_ARRAY_EXP: IDENTIFIER LEFTBRACKET EXPR_ESSION RIGHTBRACKET

   15 R_T: INT
   16    | BOOL

   17 B_O_F: VAR_DECLERATIONS BODY_CHOICE RETURN_

   18 BODY_CHOICE: MULT_FUNCTIONS BODY_STATEMENTS

   19 MULT_FUNCTIONS: F MULT_FUNCTIONS
   20               | /* empty */

   21 BODY_STATEMENTS: STATEMENTS_ BODY_STATEMENTS
   22                | /* empty */

   23 VAR_DECLERATIONS: VAR_DEC VAR_DECLERATIONS
   24                 | /* empty */

   25 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE_2 SEMICOLON

   26 MULT_DEC: COMMA IDENTIFIER MULT_DEC
   27         | COMMA INT_ARRAY MULT_DEC
   28         | /* empty */

   29 STATEMENTS_: ASIGN_MENT SEMICOLON
   30            | FUNCTION_CALL SEMICOLON
   31            | IF_
   32            | IF_ELSE
   33            | FOR_

   34 RETURN_: RETURN EXPR_ESSION SEMICOLON

   35 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

   36 IF_ELSE: IF_ ELSE LEFTBRACE BODY_STATEMENTS RIGHTBRACE

   37 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

   38 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN

   39 FOR_ASIGN: ASIGN_MENT SEMICOLON
   40          | /* empty */

   41 ASIGN_MENT: IDENTIFIER ASSIGNMENT EXPR_ESSION
   42           | INT_ARRAY_EXP ASSIGNMENT EXPR_ESSION

   43 EXPR_ESSION: MULT_EXPRESSION
   44            | LEFTPAREN EXPR_ESSION RIGHTPAREN OPE_RATOR
   45            | NOT LEFTPAREN EXPR_ESSION RIGHTPAREN OPE_RATOR
   46            | ABSOLUTEVALUE EXPR_ESSION ABSOLUTEVALUE OPE_RATOR

   47 SINGLE_EXPRESSION: MINUS INTEGER
   48                  | INTEGER
   49                  | TRUE
   50                  | FALSE
   51                  | IDENTIFIER
   52                  | INT_ARRAY_EXP
   53                  | NOT SINGLE_EXPRESSION

   54 MULT_EXPRESSION: SINGLE_EXPRESSION OPE_RATOR

   55 OPE_RATOR: /* empty */
   56          | PLUS EXPR_ESSION
   57          | MINUS EXPR_ESSION
   58          | TIMES EXPR_ESSION
   59          | DIVIDE EXPR_ESSION
   60          | OROR EXPR_ESSION
   61          | ANDAND EXPR_ESSION
   62          | EQEQ EXPR_ESSION
   63          | GT EXPR_ESSION
   64          | GTE EXPR_ESSION
   65          | LT EXPR_ESSION
   66          | LTE EXPR_ESSION
   67          | NE EXPR_ESSION

   68 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN
   69              | INT_ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

   70 IN_PARAMS: EXPR_ESSION NEXT_PARAM
   71          | /* empty */

   72 NEXT_PARAM: COMMA IN_PARAMS
   73           | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
BOOL (258) 10 16
ELSE (259) 36
IF (260) 35
INT (261) 9 15
FOR (262) 37
VAR (263) 25
FUNCTION (264) 4
INTARRAY (265) 13
RETURN (266) 34
EQEQ (267) 62
GT (268) 63
GTE (269) 64
LT (270) 65
LTE (271) 66
NE (272) 67
ANDAND (273) 61
OROR (274) 60
NOT (275) 45 53
PLUS (276) 56
MINUS (277) 47 57
TIMES (278) 58
DIVIDE (279) 59
TRUE (280) 49
FALSE (281) 50
IDENTIFIER (282) 4 5 14 25 26 41 51 68 69
INTEGER (283) 13 47 48
SEMICOLON (284) 25 29 30 34 39
COLON (285) 4 5 25
COMMA (286) 7 26 27 72
ABSOLUTEVALUE (287) 46
LEFTBRACE (288) 4 35 36 37
RIGHTBRACE (289) 4 35 36 37
LEFTPAREN (290) 4 35 37 38 44 45 68 69
RIGHTPAREN (291) 4 35 37 38 44 45 68 69
LEFTBRACKET (292) 13 14
RIGHTBRACKET (293) 13 14
ASSIGNMENT (294) 41 42 68 69


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
Start (41)
    on left: 1, on right: 0
FUNC_ (42)
    on left: 2 3, on right: 1 2
F (43)
    on left: 4, on right: 1 2 19
P_L (44)
    on left: 5 6, on right: 4 7
MORE_PARAMS (45)
    on left: 7 8, on right: 5
TYPE (46)
    on left: 9 10, on right: 5 11
TYPE_2 (47)
    on left: 11 12, on right: 25
INT_ARRAY (48)
    on left: 13, on right: 12 27
INT_ARRAY_EXP (49)
    on left: 14, on right: 42 52 69
R_T (50)
    on left: 15 16, on right: 4
B_O_F (51)
    on left: 17, on right: 4
BODY_CHOICE (52)
    on left: 18, on right: 17
MULT_FUNCTIONS (53)
    on left: 19 20, on right: 18 19
BODY_STATEMENTS (54)
    on left: 21 22, on right: 18 21 35 36 37
VAR_DECLERATIONS (55)
    on left: 23 24, on right: 17 23
VAR_DEC (56)
    on left: 25, on right: 23
MULT_DEC (57)
    on left: 26 27 28, on right: 25 26 27
STATEMENTS_ (58)
    on left: 29 30 31 32 33, on right: 21
RETURN_ (59)
    on left: 34, on right: 17
IF_ (60)
    on left: 35, on right: 31 36
IF_ELSE (61)
    on left: 36, on right: 32
FOR_ (62)
    on left: 37, on right: 33
FOR_PARAMS (63)
    on left: 38, on right: 37
FOR_ASIGN (64)
    on left: 39 40, on right: 38
ASIGN_MENT (65)
    on left: 41 42, on right: 29 39
EXPR_ESSION (66)
    on left: 43 44 45 46, on right: 14 34 35 38 41 42 44 45 46 56 57
    58 59 60 61 62 63 64 65 66 67 70
SINGLE_EXPRESSION (67)
    on left: 47 48 49 50 51 52 53, on right: 53 54
MULT_EXPRESSION (68)
    on left: 54, on right: 43
OPE_RATOR (69)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66 67, on right: 44 45
    46 54
FUNCTION_CALL (70)
    on left: 68 69, on right: 30
IN_PARAMS (71)
    on left: 70 71, on right: 68 69 72
NEXT_PARAM (72)
    on left: 72 73, on right: 70


state 0

    0 $accept: . Start $end

    FUNCTION  shift, and go to state 1

    Start  go to state 2
    F      go to state 3


state 1

    4 F: FUNCTION . IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    IDENTIFIER  shift, and go to state 4


state 2

    0 $accept: Start . $end

    $end  shift, and go to state 5


state 3

    1 Start: F . FUNC_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (FUNC_)

    FUNC_  go to state 6
    F      go to state 7


state 4

    4 F: FUNCTION IDENTIFIER . LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    LEFTPAREN  shift, and go to state 8


state 5

    0 $accept: Start $end .

    $default  accept


state 6

    1 Start: F FUNC_ .

    $default  reduce using rule 1 (Start)


state 7

    2 FUNC_: F . FUNC_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (FUNC_)

    FUNC_  go to state 9
    F      go to state 7


state 8

    4 F: FUNCTION IDENTIFIER LEFTPAREN . P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 6 (P_L)

    P_L  go to state 11


state 9

    2 FUNC_: F FUNC_ .

    $default  reduce using rule 2 (FUNC_)


state 10

    5 P_L: IDENTIFIER . COLON TYPE MORE_PARAMS

    COLON  shift, and go to state 12


state 11

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L . RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    RIGHTPAREN  shift, and go to state 13


state 12

    5 P_L: IDENTIFIER COLON . TYPE MORE_PARAMS

    BOOL  shift, and go to state 14
    INT   shift, and go to state 15

    TYPE  go to state 16


state 13

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN . COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    COLON  shift, and go to state 17


state 14

   10 TYPE: BOOL .

    $default  reduce using rule 10 (TYPE)


state 15

    9 TYPE: INT .

    $default  reduce using rule 9 (TYPE)


state 16

    5 P_L: IDENTIFIER COLON TYPE . MORE_PARAMS

    COMMA  shift, and go to state 18

    $default  reduce using rule 8 (MORE_PARAMS)

    MORE_PARAMS  go to state 19


state 17

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON . R_T LEFTBRACE B_O_F RIGHTBRACE

    BOOL  shift, and go to state 20
    INT   shift, and go to state 21

    R_T  go to state 22


state 18

    7 MORE_PARAMS: COMMA . P_L

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 6 (P_L)

    P_L  go to state 23


state 19

    5 P_L: IDENTIFIER COLON TYPE MORE_PARAMS .

    $default  reduce using rule 5 (P_L)


state 20

   16 R_T: BOOL .

    $default  reduce using rule 16 (R_T)


state 21

   15 R_T: INT .

    $default  reduce using rule 15 (R_T)


state 22

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T . LEFTBRACE B_O_F RIGHTBRACE

    LEFTBRACE  shift, and go to state 24


state 23

    7 MORE_PARAMS: COMMA P_L .

    $default  reduce using rule 7 (MORE_PARAMS)


state 24

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE . B_O_F RIGHTBRACE

    VAR  shift, and go to state 25

    $default  reduce using rule 24 (VAR_DECLERATIONS)

    B_O_F             go to state 26
    VAR_DECLERATIONS  go to state 27
    VAR_DEC           go to state 28


state 25

   25 VAR_DEC: VAR . IDENTIFIER MULT_DEC COLON TYPE_2 SEMICOLON

    IDENTIFIER  shift, and go to state 29


state 26

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 30


state 27

   17 B_O_F: VAR_DECLERATIONS . BODY_CHOICE RETURN_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 20 (MULT_FUNCTIONS)

    F               go to state 31
    BODY_CHOICE     go to state 32
    MULT_FUNCTIONS  go to state 33


state 28

   23 VAR_DECLERATIONS: VAR_DEC . VAR_DECLERATIONS

    VAR  shift, and go to state 25

    $default  reduce using rule 24 (VAR_DECLERATIONS)

    VAR_DECLERATIONS  go to state 34
    VAR_DEC           go to state 28


state 29

   25 VAR_DEC: VAR IDENTIFIER . MULT_DEC COLON TYPE_2 SEMICOLON

    COMMA  shift, and go to state 35

    $default  reduce using rule 28 (MULT_DEC)

    MULT_DEC  go to state 36


state 30

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE .

    $default  reduce using rule 4 (F)


state 31

   19 MULT_FUNCTIONS: F . MULT_FUNCTIONS

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 20 (MULT_FUNCTIONS)

    F               go to state 31
    MULT_FUNCTIONS  go to state 37


state 32

   17 B_O_F: VAR_DECLERATIONS BODY_CHOICE . RETURN_

    RETURN  shift, and go to state 38

    RETURN_  go to state 39


state 33

   18 BODY_CHOICE: MULT_FUNCTIONS . BODY_STATEMENTS

    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 22 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 43
    BODY_STATEMENTS  go to state 44
    STATEMENTS_      go to state 45
    IF_              go to state 46
    IF_ELSE          go to state 47
    FOR_             go to state 48
    ASIGN_MENT       go to state 49
    FUNCTION_CALL    go to state 50


state 34

   23 VAR_DECLERATIONS: VAR_DEC VAR_DECLERATIONS .

    $default  reduce using rule 23 (VAR_DECLERATIONS)


state 35

   26 MULT_DEC: COMMA . IDENTIFIER MULT_DEC
   27         | COMMA . INT_ARRAY MULT_DEC

    INTARRAY    shift, and go to state 51
    IDENTIFIER  shift, and go to state 52

    INT_ARRAY  go to state 53


state 36

   25 VAR_DEC: VAR IDENTIFIER MULT_DEC . COLON TYPE_2 SEMICOLON

    COLON  shift, and go to state 54


state 37

   19 MULT_FUNCTIONS: F MULT_FUNCTIONS .

    $default  reduce using rule 19 (MULT_FUNCTIONS)


state 38

   34 RETURN_: RETURN . EXPR_ESSION SEMICOLON

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 64
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 39

   17 B_O_F: VAR_DECLERATIONS BODY_CHOICE RETURN_ .

    $default  reduce using rule 17 (B_O_F)


state 40

   35 IF_: IF . LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTPAREN  shift, and go to state 67


state 41

   37 FOR_: FOR . LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTPAREN  shift, and go to state 68


state 42

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET
   41 ASIGN_MENT: IDENTIFIER . ASSIGNMENT EXPR_ESSION
   68 FUNCTION_CALL: IDENTIFIER . ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTBRACKET  shift, and go to state 69
    ASSIGNMENT   shift, and go to state 70


state 43

   42 ASIGN_MENT: INT_ARRAY_EXP . ASSIGNMENT EXPR_ESSION
   69 FUNCTION_CALL: INT_ARRAY_EXP . ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    ASSIGNMENT  shift, and go to state 71


state 44

   18 BODY_CHOICE: MULT_FUNCTIONS BODY_STATEMENTS .

    $default  reduce using rule 18 (BODY_CHOICE)


state 45

   21 BODY_STATEMENTS: STATEMENTS_ . BODY_STATEMENTS

    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 22 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 43
    BODY_STATEMENTS  go to state 72
    STATEMENTS_      go to state 45
    IF_              go to state 46
    IF_ELSE          go to state 47
    FOR_             go to state 48
    ASIGN_MENT       go to state 49
    FUNCTION_CALL    go to state 50


state 46

   31 STATEMENTS_: IF_ .
   36 IF_ELSE: IF_ . ELSE LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    ELSE  shift, and go to state 73

    $default  reduce using rule 31 (STATEMENTS_)


state 47

   32 STATEMENTS_: IF_ELSE .

    $default  reduce using rule 32 (STATEMENTS_)


state 48

   33 STATEMENTS_: FOR_ .

    $default  reduce using rule 33 (STATEMENTS_)


state 49

   29 STATEMENTS_: ASIGN_MENT . SEMICOLON

    SEMICOLON  shift, and go to state 74


state 50

   30 STATEMENTS_: FUNCTION_CALL . SEMICOLON

    SEMICOLON  shift, and go to state 75


state 51

   13 INT_ARRAY: INTARRAY . LEFTBRACKET INTEGER RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 76


state 52

   26 MULT_DEC: COMMA IDENTIFIER . MULT_DEC

    COMMA  shift, and go to state 35

    $default  reduce using rule 28 (MULT_DEC)

    MULT_DEC  go to state 77


state 53

   27 MULT_DEC: COMMA INT_ARRAY . MULT_DEC

    COMMA  shift, and go to state 35

    $default  reduce using rule 28 (MULT_DEC)

    MULT_DEC  go to state 78


state 54

   25 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON . TYPE_2 SEMICOLON

    BOOL      shift, and go to state 14
    INT       shift, and go to state 15
    INTARRAY  shift, and go to state 51

    TYPE       go to state 79
    TYPE_2     go to state 80
    INT_ARRAY  go to state 81


state 55

   45 EXPR_ESSION: NOT . LEFTPAREN EXPR_ESSION RIGHTPAREN OPE_RATOR
   53 SINGLE_EXPRESSION: NOT . SINGLE_EXPRESSION

    NOT         shift, and go to state 82
    MINUS       shift, and go to state 56
    TRUE        shift, and go to state 57
    FALSE       shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    INTEGER     shift, and go to state 60
    LEFTPAREN   shift, and go to state 83

    INT_ARRAY_EXP      go to state 63
    SINGLE_EXPRESSION  go to state 84


state 56

   47 SINGLE_EXPRESSION: MINUS . INTEGER

    INTEGER  shift, and go to state 85


state 57

   49 SINGLE_EXPRESSION: TRUE .

    $default  reduce using rule 49 (SINGLE_EXPRESSION)


state 58

   50 SINGLE_EXPRESSION: FALSE .

    $default  reduce using rule 50 (SINGLE_EXPRESSION)


state 59

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET
   51 SINGLE_EXPRESSION: IDENTIFIER .

    LEFTBRACKET  shift, and go to state 69

    $default  reduce using rule 51 (SINGLE_EXPRESSION)


state 60

   48 SINGLE_EXPRESSION: INTEGER .

    $default  reduce using rule 48 (SINGLE_EXPRESSION)


state 61

   46 EXPR_ESSION: ABSOLUTEVALUE . EXPR_ESSION ABSOLUTEVALUE OPE_RATOR

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 86
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 62

   44 EXPR_ESSION: LEFTPAREN . EXPR_ESSION RIGHTPAREN OPE_RATOR

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 87
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 63

   52 SINGLE_EXPRESSION: INT_ARRAY_EXP .

    $default  reduce using rule 52 (SINGLE_EXPRESSION)


state 64

   34 RETURN_: RETURN EXPR_ESSION . SEMICOLON

    SEMICOLON  shift, and go to state 88


state 65

   54 MULT_EXPRESSION: SINGLE_EXPRESSION . OPE_RATOR

    EQEQ    shift, and go to state 89
    GT      shift, and go to state 90
    GTE     shift, and go to state 91
    LT      shift, and go to state 92
    LTE     shift, and go to state 93
    NE      shift, and go to state 94
    ANDAND  shift, and go to state 95
    OROR    shift, and go to state 96
    PLUS    shift, and go to state 97
    MINUS   shift, and go to state 98
    TIMES   shift, and go to state 99
    DIVIDE  shift, and go to state 100

    $default  reduce using rule 55 (OPE_RATOR)

    OPE_RATOR  go to state 101


state 66

   43 EXPR_ESSION: MULT_EXPRESSION .

    $default  reduce using rule 43 (EXPR_ESSION)


state 67

   35 IF_: IF LEFTPAREN . EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 102
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 68

   37 FOR_: FOR LEFTPAREN . FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    IDENTIFIER  shift, and go to state 103

    $default  reduce using rule 40 (FOR_ASIGN)

    INT_ARRAY_EXP  go to state 104
    FOR_PARAMS     go to state 105
    FOR_ASIGN      go to state 106
    ASIGN_MENT     go to state 107


state 69

   14 INT_ARRAY_EXP: IDENTIFIER LEFTBRACKET . EXPR_ESSION RIGHTBRACKET

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 108
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 70

   41 ASIGN_MENT: IDENTIFIER ASSIGNMENT . EXPR_ESSION
   68 FUNCTION_CALL: IDENTIFIER ASSIGNMENT . IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 109
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 110
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 71

   42 ASIGN_MENT: INT_ARRAY_EXP ASSIGNMENT . EXPR_ESSION
   69 FUNCTION_CALL: INT_ARRAY_EXP ASSIGNMENT . IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 111
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 112
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 72

   21 BODY_STATEMENTS: STATEMENTS_ BODY_STATEMENTS .

    $default  reduce using rule 21 (BODY_STATEMENTS)


state 73

   36 IF_ELSE: IF_ ELSE . LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTBRACE  shift, and go to state 113


state 74

   29 STATEMENTS_: ASIGN_MENT SEMICOLON .

    $default  reduce using rule 29 (STATEMENTS_)


state 75

   30 STATEMENTS_: FUNCTION_CALL SEMICOLON .

    $default  reduce using rule 30 (STATEMENTS_)


state 76

   13 INT_ARRAY: INTARRAY LEFTBRACKET . INTEGER RIGHTBRACKET

    INTEGER  shift, and go to state 114


state 77

   26 MULT_DEC: COMMA IDENTIFIER MULT_DEC .

    $default  reduce using rule 26 (MULT_DEC)


state 78

   27 MULT_DEC: COMMA INT_ARRAY MULT_DEC .

    $default  reduce using rule 27 (MULT_DEC)


state 79

   11 TYPE_2: TYPE .

    $default  reduce using rule 11 (TYPE_2)


state 80

   25 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE_2 . SEMICOLON

    SEMICOLON  shift, and go to state 115


state 81

   12 TYPE_2: INT_ARRAY .

    $default  reduce using rule 12 (TYPE_2)


state 82

   53 SINGLE_EXPRESSION: NOT . SINGLE_EXPRESSION

    NOT         shift, and go to state 82
    MINUS       shift, and go to state 56
    TRUE        shift, and go to state 57
    FALSE       shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    INTEGER     shift, and go to state 60

    INT_ARRAY_EXP      go to state 63
    SINGLE_EXPRESSION  go to state 84


state 83

   45 EXPR_ESSION: NOT LEFTPAREN . EXPR_ESSION RIGHTPAREN OPE_RATOR

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 116
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 84

   53 SINGLE_EXPRESSION: NOT SINGLE_EXPRESSION .

    $default  reduce using rule 53 (SINGLE_EXPRESSION)


state 85

   47 SINGLE_EXPRESSION: MINUS INTEGER .

    $default  reduce using rule 47 (SINGLE_EXPRESSION)


state 86

   46 EXPR_ESSION: ABSOLUTEVALUE EXPR_ESSION . ABSOLUTEVALUE OPE_RATOR

    ABSOLUTEVALUE  shift, and go to state 117


state 87

   44 EXPR_ESSION: LEFTPAREN EXPR_ESSION . RIGHTPAREN OPE_RATOR

    RIGHTPAREN  shift, and go to state 118


state 88

   34 RETURN_: RETURN EXPR_ESSION SEMICOLON .

    $default  reduce using rule 34 (RETURN_)


state 89

   62 OPE_RATOR: EQEQ . EXPR_ESSION

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 119
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 90

   63 OPE_RATOR: GT . EXPR_ESSION

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 120
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 91

   64 OPE_RATOR: GTE . EXPR_ESSION

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 121
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 92

   65 OPE_RATOR: LT . EXPR_ESSION

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 122
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 93

   66 OPE_RATOR: LTE . EXPR_ESSION

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 123
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 94

   67 OPE_RATOR: NE . EXPR_ESSION

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 124
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 95

   61 OPE_RATOR: ANDAND . EXPR_ESSION

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 125
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 96

   60 OPE_RATOR: OROR . EXPR_ESSION

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 126
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 97

   56 OPE_RATOR: PLUS . EXPR_ESSION

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 127
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 98

   57 OPE_RATOR: MINUS . EXPR_ESSION

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 128
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 99

   58 OPE_RATOR: TIMES . EXPR_ESSION

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 129
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 100

   59 OPE_RATOR: DIVIDE . EXPR_ESSION

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 130
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 101

   54 MULT_EXPRESSION: SINGLE_EXPRESSION OPE_RATOR .

    $default  reduce using rule 54 (MULT_EXPRESSION)


state 102

   35 IF_: IF LEFTPAREN EXPR_ESSION . RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    RIGHTPAREN  shift, and go to state 131


state 103

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET
   41 ASIGN_MENT: IDENTIFIER . ASSIGNMENT EXPR_ESSION

    LEFTBRACKET  shift, and go to state 69
    ASSIGNMENT   shift, and go to state 132


state 104

   42 ASIGN_MENT: INT_ARRAY_EXP . ASSIGNMENT EXPR_ESSION

    ASSIGNMENT  shift, and go to state 133


state 105

   37 FOR_: FOR LEFTPAREN FOR_PARAMS . RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    RIGHTPAREN  shift, and go to state 134


state 106

   38 FOR_PARAMS: FOR_ASIGN . LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN

    LEFTPAREN  shift, and go to state 135


state 107

   39 FOR_ASIGN: ASIGN_MENT . SEMICOLON

    SEMICOLON  shift, and go to state 136


state 108

   14 INT_ARRAY_EXP: IDENTIFIER LEFTBRACKET EXPR_ESSION . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 137


state 109

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET
   51 SINGLE_EXPRESSION: IDENTIFIER .
   68 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER . LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTPAREN    shift, and go to state 138
    LEFTBRACKET  shift, and go to state 69

    $default  reduce using rule 51 (SINGLE_EXPRESSION)


state 110

   41 ASIGN_MENT: IDENTIFIER ASSIGNMENT EXPR_ESSION .

    $default  reduce using rule 41 (ASIGN_MENT)


state 111

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET
   51 SINGLE_EXPRESSION: IDENTIFIER .
   69 FUNCTION_CALL: INT_ARRAY_EXP ASSIGNMENT IDENTIFIER . LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTPAREN    shift, and go to state 139
    LEFTBRACKET  shift, and go to state 69

    $default  reduce using rule 51 (SINGLE_EXPRESSION)


state 112

   42 ASIGN_MENT: INT_ARRAY_EXP ASSIGNMENT EXPR_ESSION .

    $default  reduce using rule 42 (ASIGN_MENT)


state 113

   36 IF_ELSE: IF_ ELSE LEFTBRACE . BODY_STATEMENTS RIGHTBRACE

    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 22 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 43
    BODY_STATEMENTS  go to state 140
    STATEMENTS_      go to state 45
    IF_              go to state 46
    IF_ELSE          go to state 47
    FOR_             go to state 48
    ASIGN_MENT       go to state 49
    FUNCTION_CALL    go to state 50


state 114

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 141


state 115

   25 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE_2 SEMICOLON .

    $default  reduce using rule 25 (VAR_DEC)


state 116

   45 EXPR_ESSION: NOT LEFTPAREN EXPR_ESSION . RIGHTPAREN OPE_RATOR

    RIGHTPAREN  shift, and go to state 142


state 117

   46 EXPR_ESSION: ABSOLUTEVALUE EXPR_ESSION ABSOLUTEVALUE . OPE_RATOR

    EQEQ    shift, and go to state 89
    GT      shift, and go to state 90
    GTE     shift, and go to state 91
    LT      shift, and go to state 92
    LTE     shift, and go to state 93
    NE      shift, and go to state 94
    ANDAND  shift, and go to state 95
    OROR    shift, and go to state 96
    PLUS    shift, and go to state 97
    MINUS   shift, and go to state 98
    TIMES   shift, and go to state 99
    DIVIDE  shift, and go to state 100

    $default  reduce using rule 55 (OPE_RATOR)

    OPE_RATOR  go to state 143


state 118

   44 EXPR_ESSION: LEFTPAREN EXPR_ESSION RIGHTPAREN . OPE_RATOR

    EQEQ    shift, and go to state 89
    GT      shift, and go to state 90
    GTE     shift, and go to state 91
    LT      shift, and go to state 92
    LTE     shift, and go to state 93
    NE      shift, and go to state 94
    ANDAND  shift, and go to state 95
    OROR    shift, and go to state 96
    PLUS    shift, and go to state 97
    MINUS   shift, and go to state 98
    TIMES   shift, and go to state 99
    DIVIDE  shift, and go to state 100

    $default  reduce using rule 55 (OPE_RATOR)

    OPE_RATOR  go to state 144


state 119

   62 OPE_RATOR: EQEQ EXPR_ESSION .

    $default  reduce using rule 62 (OPE_RATOR)


state 120

   63 OPE_RATOR: GT EXPR_ESSION .

    $default  reduce using rule 63 (OPE_RATOR)


state 121

   64 OPE_RATOR: GTE EXPR_ESSION .

    $default  reduce using rule 64 (OPE_RATOR)


state 122

   65 OPE_RATOR: LT EXPR_ESSION .

    $default  reduce using rule 65 (OPE_RATOR)


state 123

   66 OPE_RATOR: LTE EXPR_ESSION .

    $default  reduce using rule 66 (OPE_RATOR)


state 124

   67 OPE_RATOR: NE EXPR_ESSION .

    $default  reduce using rule 67 (OPE_RATOR)


state 125

   61 OPE_RATOR: ANDAND EXPR_ESSION .

    $default  reduce using rule 61 (OPE_RATOR)


state 126

   60 OPE_RATOR: OROR EXPR_ESSION .

    $default  reduce using rule 60 (OPE_RATOR)


state 127

   56 OPE_RATOR: PLUS EXPR_ESSION .

    $default  reduce using rule 56 (OPE_RATOR)


state 128

   57 OPE_RATOR: MINUS EXPR_ESSION .

    $default  reduce using rule 57 (OPE_RATOR)


state 129

   58 OPE_RATOR: TIMES EXPR_ESSION .

    $default  reduce using rule 58 (OPE_RATOR)


state 130

   59 OPE_RATOR: DIVIDE EXPR_ESSION .

    $default  reduce using rule 59 (OPE_RATOR)


state 131

   35 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN . LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTBRACE  shift, and go to state 145


state 132

   41 ASIGN_MENT: IDENTIFIER ASSIGNMENT . EXPR_ESSION

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 110
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 133

   42 ASIGN_MENT: INT_ARRAY_EXP ASSIGNMENT . EXPR_ESSION

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 112
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 134

   37 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN . LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTBRACE  shift, and go to state 146


state 135

   38 FOR_PARAMS: FOR_ASIGN LEFTPAREN . EXPR_ESSION RIGHTPAREN FOR_ASIGN

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 147
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66


state 136

   39 FOR_ASIGN: ASIGN_MENT SEMICOLON .

    $default  reduce using rule 39 (FOR_ASIGN)


state 137

   14 INT_ARRAY_EXP: IDENTIFIER LEFTBRACKET EXPR_ESSION RIGHTBRACKET .

    $default  reduce using rule 14 (INT_ARRAY_EXP)


state 138

   68 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN . IN_PARAMS RIGHTPAREN

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    $default  reduce using rule 71 (IN_PARAMS)

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 148
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66
    IN_PARAMS          go to state 149


state 139

   69 FUNCTION_CALL: INT_ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN . IN_PARAMS RIGHTPAREN

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    $default  reduce using rule 71 (IN_PARAMS)

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 148
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66
    IN_PARAMS          go to state 150


state 140

   36 IF_ELSE: IF_ ELSE LEFTBRACE BODY_STATEMENTS . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 151


state 141

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER RIGHTBRACKET .

    $default  reduce using rule 13 (INT_ARRAY)


state 142

   45 EXPR_ESSION: NOT LEFTPAREN EXPR_ESSION RIGHTPAREN . OPE_RATOR

    EQEQ    shift, and go to state 89
    GT      shift, and go to state 90
    GTE     shift, and go to state 91
    LT      shift, and go to state 92
    LTE     shift, and go to state 93
    NE      shift, and go to state 94
    ANDAND  shift, and go to state 95
    OROR    shift, and go to state 96
    PLUS    shift, and go to state 97
    MINUS   shift, and go to state 98
    TIMES   shift, and go to state 99
    DIVIDE  shift, and go to state 100

    $default  reduce using rule 55 (OPE_RATOR)

    OPE_RATOR  go to state 152


state 143

   46 EXPR_ESSION: ABSOLUTEVALUE EXPR_ESSION ABSOLUTEVALUE OPE_RATOR .

    $default  reduce using rule 46 (EXPR_ESSION)


state 144

   44 EXPR_ESSION: LEFTPAREN EXPR_ESSION RIGHTPAREN OPE_RATOR .

    $default  reduce using rule 44 (EXPR_ESSION)


state 145

   35 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE . BODY_STATEMENTS RIGHTBRACE

    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 22 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 43
    BODY_STATEMENTS  go to state 153
    STATEMENTS_      go to state 45
    IF_              go to state 46
    IF_ELSE          go to state 47
    FOR_             go to state 48
    ASIGN_MENT       go to state 49
    FUNCTION_CALL    go to state 50


state 146

   37 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE . BODY_STATEMENTS RIGHTBRACE

    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 22 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 43
    BODY_STATEMENTS  go to state 154
    STATEMENTS_      go to state 45
    IF_              go to state 46
    IF_ELSE          go to state 47
    FOR_             go to state 48
    ASIGN_MENT       go to state 49
    FUNCTION_CALL    go to state 50


state 147

   38 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION . RIGHTPAREN FOR_ASIGN

    RIGHTPAREN  shift, and go to state 155


state 148

   70 IN_PARAMS: EXPR_ESSION . NEXT_PARAM

    COMMA  shift, and go to state 156

    $default  reduce using rule 73 (NEXT_PARAM)

    NEXT_PARAM  go to state 157


state 149

   68 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS . RIGHTPAREN

    RIGHTPAREN  shift, and go to state 158


state 150

   69 FUNCTION_CALL: INT_ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS . RIGHTPAREN

    RIGHTPAREN  shift, and go to state 159


state 151

   36 IF_ELSE: IF_ ELSE LEFTBRACE BODY_STATEMENTS RIGHTBRACE .

    $default  reduce using rule 36 (IF_ELSE)


state 152

   45 EXPR_ESSION: NOT LEFTPAREN EXPR_ESSION RIGHTPAREN OPE_RATOR .

    $default  reduce using rule 45 (EXPR_ESSION)


state 153

   35 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 160


state 154

   37 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 161


state 155

   38 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN . FOR_ASIGN

    IDENTIFIER  shift, and go to state 103

    $default  reduce using rule 40 (FOR_ASIGN)

    INT_ARRAY_EXP  go to state 104
    FOR_ASIGN      go to state 162
    ASIGN_MENT     go to state 107


state 156

   72 NEXT_PARAM: COMMA . IN_PARAMS

    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    TRUE           shift, and go to state 57
    FALSE          shift, and go to state 58
    IDENTIFIER     shift, and go to state 59
    INTEGER        shift, and go to state 60
    ABSOLUTEVALUE  shift, and go to state 61
    LEFTPAREN      shift, and go to state 62

    $default  reduce using rule 71 (IN_PARAMS)

    INT_ARRAY_EXP      go to state 63
    EXPR_ESSION        go to state 148
    SINGLE_EXPRESSION  go to state 65
    MULT_EXPRESSION    go to state 66
    IN_PARAMS          go to state 163


state 157

   70 IN_PARAMS: EXPR_ESSION NEXT_PARAM .

    $default  reduce using rule 70 (IN_PARAMS)


state 158

   68 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN .

    $default  reduce using rule 68 (FUNCTION_CALL)


state 159

   69 FUNCTION_CALL: INT_ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN .

    $default  reduce using rule 69 (FUNCTION_CALL)


state 160

   35 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE .

    $default  reduce using rule 35 (IF_)


state 161

   37 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE .

    $default  reduce using rule 37 (FOR_)


state 162

   38 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN .

    $default  reduce using rule 38 (FOR_PARAMS)


state 163

   72 NEXT_PARAM: COMMA IN_PARAMS .

    $default  reduce using rule 72 (NEXT_PARAM)
