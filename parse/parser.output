Grammar

    0 $accept: Start $end

    1 Start: F FUNC_
    2      | /* empty */

    3 FUNC_: F FUNC_
    4      | /* empty */

    5 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    6 P_L: IDENTIFIER COLON TYPE MORE_PARAMS
    7    | /* empty */

    8 MORE_PARAMS: COMMA P_L
    9            | /* empty */

   10 TYPE: INT
   11     | BOOL
   12     | INT_ARRAY

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER RIGHTBRACKET

   14 R_T: TYPE

   15 B_O_F: VAR_DECLERATIONS BODY_CHOICE RETURN_

   16 BODY_CHOICE: F BODY_STATEMENTS
   17            | BODY_STATEMENTS

   18 BODY_STATEMENTS: STATEMENTS_ BODY_STATEMENTS
   19                | /* empty */

   20 VAR_DECLERATIONS: VAR_DEC VAR_DECLERATIONS
   21                 | /* empty */

   22 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE SEMICOLON

   23 MULT_DEC: COMMA IDENTIFIER MULT_DEC
   24         | COMMA INT_ARRAY MULT_DEC
   25         | /* empty */

   26 STATEMENTS_: ASIGN_MENT SEMICOLON
   27            | FUNCTION_CALL SEMICOLON
   28            | IF_
   29            | IF_ELSE
   30            | FOR_

   31 RETURN_: RETURN EXPR_ESSION SEMICOLON

   32 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE

   33 IF_ELSE: IF_ ELSE LEFTBRACE STATEMENTS_ RIGHTBRACE

   34 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE

   35 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN

   36 FOR_ASIGN: ASIGN_MENT
   37          | /* empty */

   38 ASIGN_MENT: IDENTIFIER ASSIGNMENT EXPR_ESSION
   39           | INT_ARRAY ASSIGNMENT EXPR_ESSION

   40 EXPR_ESSION: MULT_EXPRESSION
   41            | LEFTPAREN MULT_EXPRESSION RIGHTPAREN

   42 SINGLE_EXPRESSION: MINUS INTEGER
   43                  | ABSOLUTEVALUE MINUS INTEGER ABSOLUTEVALUE
   44                  | INTEGER
   45                  | ABSOLUTEVALUE INTEGER ABSOLUTEVALUE
   46                  | TRUE
   47                  | NOT TRUE
   48                  | FALSE
   49                  | NOT FALSE
   50                  | IDENTIFIER
   51                  | ABSOLUTEVALUE IDENTIFIER ABSOLUTEVALUE
   52                  | INT_ARRAY
   53                  | ABSOLUTEVALUE INT_ARRAY ABSOLUTEVALUE

   54 INT_ARRAY: IDENTIFIER LEFTBRACKET INTEGER RIGHTBRACKET

   55 MULT_EXPRESSION: SINGLE_EXPRESSION OPE_RATOR

   56 OPE_RATOR: /* empty */
   57          | PLUS EXPR_ESSION
   58          | MINUS EXPR_ESSION
   59          | TIMES EXPR_ESSION
   60          | DIVIDE EXPR_ESSION
   61          | OROR EXPR_ESSION
   62          | ANDAND EXPR_ESSION
   63          | EQEQ EXPR_ESSION
   64          | GT EXPR_ESSION
   65          | GTE EXPR_ESSION
   66          | LT EXPR_ESSION
   67          | LTE EXPR_ESSION
   68          | NE EXPR_ESSION

   69 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN
   70              | INT_ARRAY ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

   71 IN_PARAMS: MINUS INTEGER NEXT_PARAM
   72          | INTEGER NEXT_PARAM
   73          | TRUE NEXT_PARAM
   74          | NOT TRUE NEXT_PARAM
   75          | FALSE NEXT_PARAM
   76          | NOT FALSE NEXT_PARAM
   77          | NEXT_PARAM

   78 NEXT_PARAM: COMMA IN_PARAMS
   79           | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
BOOL (258) 11
ELSE (259) 33
IF (260) 32
INT (261) 10
FOR (262) 34
VAR (263) 22
FUNCTION (264) 5
INTARRAY (265) 13
RETURN (266) 31
EQEQ (267) 63
GT (268) 64
GTE (269) 65
LT (270) 66
LTE (271) 67
NE (272) 68
ANDAND (273) 62
OROR (274) 61
NOT (275) 47 49 74 76
PLUS (276) 57
MINUS (277) 42 43 58 71
TIMES (278) 59
DIVIDE (279) 60
TRUE (280) 46 47 73 74
FALSE (281) 48 49 75 76
IDENTIFIER (282) 5 6 22 23 38 50 51 54 69 70
INTEGER (283) 13 42 43 44 45 54 71 72
SEMICOLON (284) 22 26 27 31
COLON (285) 5 6 22
COMMA (286) 8 23 24 78
ABSOLUTEVALUE (287) 43 45 51 53
LEFTBRACE (288) 5 32 33 34
RIGHTBRACE (289) 5 32 33 34
LEFTPAREN (290) 5 32 34 35 41 69 70
RIGHTPAREN (291) 5 32 34 35 41 69 70
LEFTBRACKET (292) 13 54
RIGHTBRACKET (293) 13 54
ASSIGNMENT (294) 38 39 69 70


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
Start (41)
    on left: 1 2, on right: 0
FUNC_ (42)
    on left: 3 4, on right: 1 3
F (43)
    on left: 5, on right: 1 3 16
P_L (44)
    on left: 6 7, on right: 5 8
MORE_PARAMS (45)
    on left: 8 9, on right: 6
TYPE (46)
    on left: 10 11 12, on right: 6 14 22
INT_ARRAY (47)
    on left: 13 54, on right: 12 24 39 52 53 70
R_T (48)
    on left: 14, on right: 5
B_O_F (49)
    on left: 15, on right: 5
BODY_CHOICE (50)
    on left: 16 17, on right: 15
BODY_STATEMENTS (51)
    on left: 18 19, on right: 16 17 18
VAR_DECLERATIONS (52)
    on left: 20 21, on right: 15 20
VAR_DEC (53)
    on left: 22, on right: 20
MULT_DEC (54)
    on left: 23 24 25, on right: 22 23 24
STATEMENTS_ (55)
    on left: 26 27 28 29 30, on right: 18 32 33 34
RETURN_ (56)
    on left: 31, on right: 15
IF_ (57)
    on left: 32, on right: 28 33
IF_ELSE (58)
    on left: 33, on right: 29
FOR_ (59)
    on left: 34, on right: 30
FOR_PARAMS (60)
    on left: 35, on right: 34
FOR_ASIGN (61)
    on left: 36 37, on right: 35
ASIGN_MENT (62)
    on left: 38 39, on right: 26 36
EXPR_ESSION (63)
    on left: 40 41, on right: 31 32 35 38 39 57 58 59 60 61 62 63 64
    65 66 67 68
SINGLE_EXPRESSION (64)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53, on right: 55
MULT_EXPRESSION (65)
    on left: 55, on right: 40 41
OPE_RATOR (66)
    on left: 56 57 58 59 60 61 62 63 64 65 66 67 68, on right: 55
FUNCTION_CALL (67)
    on left: 69 70, on right: 27
IN_PARAMS (68)
    on left: 71 72 73 74 75 76 77, on right: 69 70 78
NEXT_PARAM (69)
    on left: 78 79, on right: 71 72 73 74 75 76 77


state 0

    0 $accept: . Start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Start)

    Start  go to state 2
    F      go to state 3


state 1

    5 F: FUNCTION . IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    IDENTIFIER  shift, and go to state 4


state 2

    0 $accept: Start . $end

    $end  shift, and go to state 5


state 3

    1 Start: F . FUNC_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 4 (FUNC_)

    FUNC_  go to state 6
    F      go to state 7


state 4

    5 F: FUNCTION IDENTIFIER . LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    LEFTPAREN  shift, and go to state 8


state 5

    0 $accept: Start $end .

    $default  accept


state 6

    1 Start: F FUNC_ .

    $default  reduce using rule 1 (Start)


state 7

    3 FUNC_: F . FUNC_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 4 (FUNC_)

    FUNC_  go to state 9
    F      go to state 7


state 8

    5 F: FUNCTION IDENTIFIER LEFTPAREN . P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 7 (P_L)

    P_L  go to state 11


state 9

    3 FUNC_: F FUNC_ .

    $default  reduce using rule 3 (FUNC_)


state 10

    6 P_L: IDENTIFIER . COLON TYPE MORE_PARAMS

    COLON  shift, and go to state 12


state 11

    5 F: FUNCTION IDENTIFIER LEFTPAREN P_L . RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    RIGHTPAREN  shift, and go to state 13


state 12

    6 P_L: IDENTIFIER COLON . TYPE MORE_PARAMS

    BOOL        shift, and go to state 14
    INT         shift, and go to state 15
    INTARRAY    shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    TYPE       go to state 18
    INT_ARRAY  go to state 19


state 13

    5 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN . COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    COLON  shift, and go to state 20


state 14

   11 TYPE: BOOL .

    $default  reduce using rule 11 (TYPE)


state 15

   10 TYPE: INT .

    $default  reduce using rule 10 (TYPE)


state 16

   13 INT_ARRAY: INTARRAY . LEFTBRACKET INTEGER RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 21


state 17

   54 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 22


state 18

    6 P_L: IDENTIFIER COLON TYPE . MORE_PARAMS

    COMMA  shift, and go to state 23

    $default  reduce using rule 9 (MORE_PARAMS)

    MORE_PARAMS  go to state 24


state 19

   12 TYPE: INT_ARRAY .

    $default  reduce using rule 12 (TYPE)


state 20

    5 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON . R_T LEFTBRACE B_O_F RIGHTBRACE

    BOOL        shift, and go to state 14
    INT         shift, and go to state 15
    INTARRAY    shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    TYPE       go to state 25
    INT_ARRAY  go to state 19
    R_T        go to state 26


state 21

   13 INT_ARRAY: INTARRAY LEFTBRACKET . INTEGER RIGHTBRACKET

    INTEGER  shift, and go to state 27


state 22

   54 INT_ARRAY: IDENTIFIER LEFTBRACKET . INTEGER RIGHTBRACKET

    INTEGER  shift, and go to state 28


state 23

    8 MORE_PARAMS: COMMA . P_L

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 7 (P_L)

    P_L  go to state 29


state 24

    6 P_L: IDENTIFIER COLON TYPE MORE_PARAMS .

    $default  reduce using rule 6 (P_L)


state 25

   14 R_T: TYPE .

    $default  reduce using rule 14 (R_T)


state 26

    5 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T . LEFTBRACE B_O_F RIGHTBRACE

    LEFTBRACE  shift, and go to state 30


state 27

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 31


state 28

   54 INT_ARRAY: IDENTIFIER LEFTBRACKET INTEGER . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 32


state 29

    8 MORE_PARAMS: COMMA P_L .

    $default  reduce using rule 8 (MORE_PARAMS)


state 30

    5 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE . B_O_F RIGHTBRACE

    VAR  shift, and go to state 33

    $default  reduce using rule 21 (VAR_DECLERATIONS)

    B_O_F             go to state 34
    VAR_DECLERATIONS  go to state 35
    VAR_DEC           go to state 36


state 31

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER RIGHTBRACKET .

    $default  reduce using rule 13 (INT_ARRAY)


state 32

   54 INT_ARRAY: IDENTIFIER LEFTBRACKET INTEGER RIGHTBRACKET .

    $default  reduce using rule 54 (INT_ARRAY)


state 33

   22 VAR_DEC: VAR . IDENTIFIER MULT_DEC COLON TYPE SEMICOLON

    IDENTIFIER  shift, and go to state 37


state 34

    5 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 38


state 35

   15 B_O_F: VAR_DECLERATIONS . BODY_CHOICE RETURN_

    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    FUNCTION    shift, and go to state 1
    INTARRAY    shift, and go to state 16
    IDENTIFIER  shift, and go to state 41

    $default  reduce using rule 19 (BODY_STATEMENTS)

    F                go to state 42
    INT_ARRAY        go to state 43
    BODY_CHOICE      go to state 44
    BODY_STATEMENTS  go to state 45
    STATEMENTS_      go to state 46
    IF_              go to state 47
    IF_ELSE          go to state 48
    FOR_             go to state 49
    ASIGN_MENT       go to state 50
    FUNCTION_CALL    go to state 51


state 36

   20 VAR_DECLERATIONS: VAR_DEC . VAR_DECLERATIONS

    VAR  shift, and go to state 33

    $default  reduce using rule 21 (VAR_DECLERATIONS)

    VAR_DECLERATIONS  go to state 52
    VAR_DEC           go to state 36


state 37

   22 VAR_DEC: VAR IDENTIFIER . MULT_DEC COLON TYPE SEMICOLON

    COMMA  shift, and go to state 53

    $default  reduce using rule 25 (MULT_DEC)

    MULT_DEC  go to state 54


state 38

    5 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE .

    $default  reduce using rule 5 (F)


state 39

   32 IF_: IF . LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE

    LEFTPAREN  shift, and go to state 55


state 40

   34 FOR_: FOR . LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE

    LEFTPAREN  shift, and go to state 56


state 41

   38 ASIGN_MENT: IDENTIFIER . ASSIGNMENT EXPR_ESSION
   54 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET
   69 FUNCTION_CALL: IDENTIFIER . ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTBRACKET  shift, and go to state 22
    ASSIGNMENT   shift, and go to state 57


state 42

   16 BODY_CHOICE: F . BODY_STATEMENTS

    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    INTARRAY    shift, and go to state 16
    IDENTIFIER  shift, and go to state 41

    $default  reduce using rule 19 (BODY_STATEMENTS)

    INT_ARRAY        go to state 43
    BODY_STATEMENTS  go to state 58
    STATEMENTS_      go to state 46
    IF_              go to state 47
    IF_ELSE          go to state 48
    FOR_             go to state 49
    ASIGN_MENT       go to state 50
    FUNCTION_CALL    go to state 51


state 43

   39 ASIGN_MENT: INT_ARRAY . ASSIGNMENT EXPR_ESSION
   70 FUNCTION_CALL: INT_ARRAY . ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    ASSIGNMENT  shift, and go to state 59


state 44

   15 B_O_F: VAR_DECLERATIONS BODY_CHOICE . RETURN_

    RETURN  shift, and go to state 60

    RETURN_  go to state 61


state 45

   17 BODY_CHOICE: BODY_STATEMENTS .

    $default  reduce using rule 17 (BODY_CHOICE)


state 46

   18 BODY_STATEMENTS: STATEMENTS_ . BODY_STATEMENTS

    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    INTARRAY    shift, and go to state 16
    IDENTIFIER  shift, and go to state 41

    $default  reduce using rule 19 (BODY_STATEMENTS)

    INT_ARRAY        go to state 43
    BODY_STATEMENTS  go to state 62
    STATEMENTS_      go to state 46
    IF_              go to state 47
    IF_ELSE          go to state 48
    FOR_             go to state 49
    ASIGN_MENT       go to state 50
    FUNCTION_CALL    go to state 51


state 47

   28 STATEMENTS_: IF_ .
   33 IF_ELSE: IF_ . ELSE LEFTBRACE STATEMENTS_ RIGHTBRACE

    ELSE  shift, and go to state 63

    $default  reduce using rule 28 (STATEMENTS_)


state 48

   29 STATEMENTS_: IF_ELSE .

    $default  reduce using rule 29 (STATEMENTS_)


state 49

   30 STATEMENTS_: FOR_ .

    $default  reduce using rule 30 (STATEMENTS_)


state 50

   26 STATEMENTS_: ASIGN_MENT . SEMICOLON

    SEMICOLON  shift, and go to state 64


state 51

   27 STATEMENTS_: FUNCTION_CALL . SEMICOLON

    SEMICOLON  shift, and go to state 65


state 52

   20 VAR_DECLERATIONS: VAR_DEC VAR_DECLERATIONS .

    $default  reduce using rule 20 (VAR_DECLERATIONS)


state 53

   23 MULT_DEC: COMMA . IDENTIFIER MULT_DEC
   24         | COMMA . INT_ARRAY MULT_DEC

    INTARRAY    shift, and go to state 16
    IDENTIFIER  shift, and go to state 66

    INT_ARRAY  go to state 67


state 54

   22 VAR_DEC: VAR IDENTIFIER MULT_DEC . COLON TYPE SEMICOLON

    COLON  shift, and go to state 68


state 55

   32 IF_: IF LEFTPAREN . EXPR_ESSION RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 78
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 56

   34 FOR_: FOR LEFTPAREN . FOR_PARAMS RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE

    INTARRAY    shift, and go to state 16
    IDENTIFIER  shift, and go to state 81

    $default  reduce using rule 37 (FOR_ASIGN)

    INT_ARRAY   go to state 82
    FOR_PARAMS  go to state 83
    FOR_ASIGN   go to state 84
    ASIGN_MENT  go to state 85


state 57

   38 ASIGN_MENT: IDENTIFIER ASSIGNMENT . EXPR_ESSION
   69 FUNCTION_CALL: IDENTIFIER ASSIGNMENT . IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 86
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 87
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 58

   16 BODY_CHOICE: F BODY_STATEMENTS .

    $default  reduce using rule 16 (BODY_CHOICE)


state 59

   39 ASIGN_MENT: INT_ARRAY ASSIGNMENT . EXPR_ESSION
   70 FUNCTION_CALL: INT_ARRAY ASSIGNMENT . IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 88
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 89
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 60

   31 RETURN_: RETURN . EXPR_ESSION SEMICOLON

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 90
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 61

   15 B_O_F: VAR_DECLERATIONS BODY_CHOICE RETURN_ .

    $default  reduce using rule 15 (B_O_F)


state 62

   18 BODY_STATEMENTS: STATEMENTS_ BODY_STATEMENTS .

    $default  reduce using rule 18 (BODY_STATEMENTS)


state 63

   33 IF_ELSE: IF_ ELSE . LEFTBRACE STATEMENTS_ RIGHTBRACE

    LEFTBRACE  shift, and go to state 91


state 64

   26 STATEMENTS_: ASIGN_MENT SEMICOLON .

    $default  reduce using rule 26 (STATEMENTS_)


state 65

   27 STATEMENTS_: FUNCTION_CALL SEMICOLON .

    $default  reduce using rule 27 (STATEMENTS_)


state 66

   23 MULT_DEC: COMMA IDENTIFIER . MULT_DEC
   54 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET

    COMMA        shift, and go to state 53
    LEFTBRACKET  shift, and go to state 22

    $default  reduce using rule 25 (MULT_DEC)

    MULT_DEC  go to state 92


state 67

   24 MULT_DEC: COMMA INT_ARRAY . MULT_DEC

    COMMA  shift, and go to state 53

    $default  reduce using rule 25 (MULT_DEC)

    MULT_DEC  go to state 93


state 68

   22 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON . TYPE SEMICOLON

    BOOL        shift, and go to state 14
    INT         shift, and go to state 15
    INTARRAY    shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    TYPE       go to state 94
    INT_ARRAY  go to state 19


state 69

   47 SINGLE_EXPRESSION: NOT . TRUE
   49                  | NOT . FALSE

    TRUE   shift, and go to state 95
    FALSE  shift, and go to state 96


state 70

   42 SINGLE_EXPRESSION: MINUS . INTEGER

    INTEGER  shift, and go to state 97


state 71

   46 SINGLE_EXPRESSION: TRUE .

    $default  reduce using rule 46 (SINGLE_EXPRESSION)


state 72

   48 SINGLE_EXPRESSION: FALSE .

    $default  reduce using rule 48 (SINGLE_EXPRESSION)


state 73

   50 SINGLE_EXPRESSION: IDENTIFIER .
   54 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 22

    $default  reduce using rule 50 (SINGLE_EXPRESSION)


state 74

   44 SINGLE_EXPRESSION: INTEGER .

    $default  reduce using rule 44 (SINGLE_EXPRESSION)


state 75

   43 SINGLE_EXPRESSION: ABSOLUTEVALUE . MINUS INTEGER ABSOLUTEVALUE
   45                  | ABSOLUTEVALUE . INTEGER ABSOLUTEVALUE
   51                  | ABSOLUTEVALUE . IDENTIFIER ABSOLUTEVALUE
   53                  | ABSOLUTEVALUE . INT_ARRAY ABSOLUTEVALUE

    INTARRAY    shift, and go to state 16
    MINUS       shift, and go to state 98
    IDENTIFIER  shift, and go to state 99
    INTEGER     shift, and go to state 100

    INT_ARRAY  go to state 101


state 76

   41 EXPR_ESSION: LEFTPAREN . MULT_EXPRESSION RIGHTPAREN

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75

    INT_ARRAY          go to state 77
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 102


state 77

   52 SINGLE_EXPRESSION: INT_ARRAY .

    $default  reduce using rule 52 (SINGLE_EXPRESSION)


state 78

   32 IF_: IF LEFTPAREN EXPR_ESSION . RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE

    RIGHTPAREN  shift, and go to state 103


state 79

   55 MULT_EXPRESSION: SINGLE_EXPRESSION . OPE_RATOR

    EQEQ    shift, and go to state 104
    GT      shift, and go to state 105
    GTE     shift, and go to state 106
    LT      shift, and go to state 107
    LTE     shift, and go to state 108
    NE      shift, and go to state 109
    ANDAND  shift, and go to state 110
    OROR    shift, and go to state 111
    PLUS    shift, and go to state 112
    MINUS   shift, and go to state 113
    TIMES   shift, and go to state 114
    DIVIDE  shift, and go to state 115

    $default  reduce using rule 56 (OPE_RATOR)

    OPE_RATOR  go to state 116


state 80

   40 EXPR_ESSION: MULT_EXPRESSION .

    $default  reduce using rule 40 (EXPR_ESSION)


state 81

   38 ASIGN_MENT: IDENTIFIER . ASSIGNMENT EXPR_ESSION
   54 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 22
    ASSIGNMENT   shift, and go to state 117


state 82

   39 ASIGN_MENT: INT_ARRAY . ASSIGNMENT EXPR_ESSION

    ASSIGNMENT  shift, and go to state 118


state 83

   34 FOR_: FOR LEFTPAREN FOR_PARAMS . RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE

    RIGHTPAREN  shift, and go to state 119


state 84

   35 FOR_PARAMS: FOR_ASIGN . LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN

    LEFTPAREN  shift, and go to state 120


state 85

   36 FOR_ASIGN: ASIGN_MENT .

    $default  reduce using rule 36 (FOR_ASIGN)


state 86

   50 SINGLE_EXPRESSION: IDENTIFIER .
   54 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET
   69 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER . LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTPAREN    shift, and go to state 121
    LEFTBRACKET  shift, and go to state 22

    $default  reduce using rule 50 (SINGLE_EXPRESSION)


state 87

   38 ASIGN_MENT: IDENTIFIER ASSIGNMENT EXPR_ESSION .

    $default  reduce using rule 38 (ASIGN_MENT)


state 88

   50 SINGLE_EXPRESSION: IDENTIFIER .
   54 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET
   70 FUNCTION_CALL: INT_ARRAY ASSIGNMENT IDENTIFIER . LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTPAREN    shift, and go to state 122
    LEFTBRACKET  shift, and go to state 22

    $default  reduce using rule 50 (SINGLE_EXPRESSION)


state 89

   39 ASIGN_MENT: INT_ARRAY ASSIGNMENT EXPR_ESSION .

    $default  reduce using rule 39 (ASIGN_MENT)


state 90

   31 RETURN_: RETURN EXPR_ESSION . SEMICOLON

    SEMICOLON  shift, and go to state 123


state 91

   33 IF_ELSE: IF_ ELSE LEFTBRACE . STATEMENTS_ RIGHTBRACE

    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    INTARRAY    shift, and go to state 16
    IDENTIFIER  shift, and go to state 41

    INT_ARRAY      go to state 43
    STATEMENTS_    go to state 124
    IF_            go to state 47
    IF_ELSE        go to state 48
    FOR_           go to state 49
    ASIGN_MENT     go to state 50
    FUNCTION_CALL  go to state 51


state 92

   23 MULT_DEC: COMMA IDENTIFIER MULT_DEC .

    $default  reduce using rule 23 (MULT_DEC)


state 93

   24 MULT_DEC: COMMA INT_ARRAY MULT_DEC .

    $default  reduce using rule 24 (MULT_DEC)


state 94

   22 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE . SEMICOLON

    SEMICOLON  shift, and go to state 125


state 95

   47 SINGLE_EXPRESSION: NOT TRUE .

    $default  reduce using rule 47 (SINGLE_EXPRESSION)


state 96

   49 SINGLE_EXPRESSION: NOT FALSE .

    $default  reduce using rule 49 (SINGLE_EXPRESSION)


state 97

   42 SINGLE_EXPRESSION: MINUS INTEGER .

    $default  reduce using rule 42 (SINGLE_EXPRESSION)


state 98

   43 SINGLE_EXPRESSION: ABSOLUTEVALUE MINUS . INTEGER ABSOLUTEVALUE

    INTEGER  shift, and go to state 126


state 99

   51 SINGLE_EXPRESSION: ABSOLUTEVALUE IDENTIFIER . ABSOLUTEVALUE
   54 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET

    ABSOLUTEVALUE  shift, and go to state 127
    LEFTBRACKET    shift, and go to state 22


state 100

   45 SINGLE_EXPRESSION: ABSOLUTEVALUE INTEGER . ABSOLUTEVALUE

    ABSOLUTEVALUE  shift, and go to state 128


state 101

   53 SINGLE_EXPRESSION: ABSOLUTEVALUE INT_ARRAY . ABSOLUTEVALUE

    ABSOLUTEVALUE  shift, and go to state 129


state 102

   41 EXPR_ESSION: LEFTPAREN MULT_EXPRESSION . RIGHTPAREN

    RIGHTPAREN  shift, and go to state 130


state 103

   32 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN . LEFTBRACE STATEMENTS_ RIGHTBRACE

    LEFTBRACE  shift, and go to state 131


state 104

   63 OPE_RATOR: EQEQ . EXPR_ESSION

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 132
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 105

   64 OPE_RATOR: GT . EXPR_ESSION

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 133
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 106

   65 OPE_RATOR: GTE . EXPR_ESSION

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 134
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 107

   66 OPE_RATOR: LT . EXPR_ESSION

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 135
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 108

   67 OPE_RATOR: LTE . EXPR_ESSION

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 136
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 109

   68 OPE_RATOR: NE . EXPR_ESSION

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 137
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 110

   62 OPE_RATOR: ANDAND . EXPR_ESSION

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 138
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 111

   61 OPE_RATOR: OROR . EXPR_ESSION

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 139
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 112

   57 OPE_RATOR: PLUS . EXPR_ESSION

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 140
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 113

   58 OPE_RATOR: MINUS . EXPR_ESSION

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 141
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 114

   59 OPE_RATOR: TIMES . EXPR_ESSION

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 142
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 115

   60 OPE_RATOR: DIVIDE . EXPR_ESSION

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 143
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 116

   55 MULT_EXPRESSION: SINGLE_EXPRESSION OPE_RATOR .

    $default  reduce using rule 55 (MULT_EXPRESSION)


state 117

   38 ASIGN_MENT: IDENTIFIER ASSIGNMENT . EXPR_ESSION

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 87
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 118

   39 ASIGN_MENT: INT_ARRAY ASSIGNMENT . EXPR_ESSION

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 89
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 119

   34 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN . LEFTBRACE STATEMENTS_ RIGHTBRACE

    LEFTBRACE  shift, and go to state 144


state 120

   35 FOR_PARAMS: FOR_ASIGN LEFTPAREN . EXPR_ESSION RIGHTPAREN FOR_ASIGN

    INTARRAY       shift, and go to state 16
    NOT            shift, and go to state 69
    MINUS          shift, and go to state 70
    TRUE           shift, and go to state 71
    FALSE          shift, and go to state 72
    IDENTIFIER     shift, and go to state 73
    INTEGER        shift, and go to state 74
    ABSOLUTEVALUE  shift, and go to state 75
    LEFTPAREN      shift, and go to state 76

    INT_ARRAY          go to state 77
    EXPR_ESSION        go to state 145
    SINGLE_EXPRESSION  go to state 79
    MULT_EXPRESSION    go to state 80


state 121

   69 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN . IN_PARAMS RIGHTPAREN

    NOT      shift, and go to state 146
    MINUS    shift, and go to state 147
    TRUE     shift, and go to state 148
    FALSE    shift, and go to state 149
    INTEGER  shift, and go to state 150
    COMMA    shift, and go to state 151

    $default  reduce using rule 79 (NEXT_PARAM)

    IN_PARAMS   go to state 152
    NEXT_PARAM  go to state 153


state 122

   70 FUNCTION_CALL: INT_ARRAY ASSIGNMENT IDENTIFIER LEFTPAREN . IN_PARAMS RIGHTPAREN

    NOT      shift, and go to state 146
    MINUS    shift, and go to state 147
    TRUE     shift, and go to state 148
    FALSE    shift, and go to state 149
    INTEGER  shift, and go to state 150
    COMMA    shift, and go to state 151

    $default  reduce using rule 79 (NEXT_PARAM)

    IN_PARAMS   go to state 154
    NEXT_PARAM  go to state 153


state 123

   31 RETURN_: RETURN EXPR_ESSION SEMICOLON .

    $default  reduce using rule 31 (RETURN_)


state 124

   33 IF_ELSE: IF_ ELSE LEFTBRACE STATEMENTS_ . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 155


state 125

   22 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE SEMICOLON .

    $default  reduce using rule 22 (VAR_DEC)


state 126

   43 SINGLE_EXPRESSION: ABSOLUTEVALUE MINUS INTEGER . ABSOLUTEVALUE

    ABSOLUTEVALUE  shift, and go to state 156


state 127

   51 SINGLE_EXPRESSION: ABSOLUTEVALUE IDENTIFIER ABSOLUTEVALUE .

    $default  reduce using rule 51 (SINGLE_EXPRESSION)


state 128

   45 SINGLE_EXPRESSION: ABSOLUTEVALUE INTEGER ABSOLUTEVALUE .

    $default  reduce using rule 45 (SINGLE_EXPRESSION)


state 129

   53 SINGLE_EXPRESSION: ABSOLUTEVALUE INT_ARRAY ABSOLUTEVALUE .

    $default  reduce using rule 53 (SINGLE_EXPRESSION)


state 130

   41 EXPR_ESSION: LEFTPAREN MULT_EXPRESSION RIGHTPAREN .

    $default  reduce using rule 41 (EXPR_ESSION)


state 131

   32 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE . STATEMENTS_ RIGHTBRACE

    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    INTARRAY    shift, and go to state 16
    IDENTIFIER  shift, and go to state 41

    INT_ARRAY      go to state 43
    STATEMENTS_    go to state 157
    IF_            go to state 47
    IF_ELSE        go to state 48
    FOR_           go to state 49
    ASIGN_MENT     go to state 50
    FUNCTION_CALL  go to state 51


state 132

   63 OPE_RATOR: EQEQ EXPR_ESSION .

    $default  reduce using rule 63 (OPE_RATOR)


state 133

   64 OPE_RATOR: GT EXPR_ESSION .

    $default  reduce using rule 64 (OPE_RATOR)


state 134

   65 OPE_RATOR: GTE EXPR_ESSION .

    $default  reduce using rule 65 (OPE_RATOR)


state 135

   66 OPE_RATOR: LT EXPR_ESSION .

    $default  reduce using rule 66 (OPE_RATOR)


state 136

   67 OPE_RATOR: LTE EXPR_ESSION .

    $default  reduce using rule 67 (OPE_RATOR)


state 137

   68 OPE_RATOR: NE EXPR_ESSION .

    $default  reduce using rule 68 (OPE_RATOR)


state 138

   62 OPE_RATOR: ANDAND EXPR_ESSION .

    $default  reduce using rule 62 (OPE_RATOR)


state 139

   61 OPE_RATOR: OROR EXPR_ESSION .

    $default  reduce using rule 61 (OPE_RATOR)


state 140

   57 OPE_RATOR: PLUS EXPR_ESSION .

    $default  reduce using rule 57 (OPE_RATOR)


state 141

   58 OPE_RATOR: MINUS EXPR_ESSION .

    $default  reduce using rule 58 (OPE_RATOR)


state 142

   59 OPE_RATOR: TIMES EXPR_ESSION .

    $default  reduce using rule 59 (OPE_RATOR)


state 143

   60 OPE_RATOR: DIVIDE EXPR_ESSION .

    $default  reduce using rule 60 (OPE_RATOR)


state 144

   34 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE . STATEMENTS_ RIGHTBRACE

    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    INTARRAY    shift, and go to state 16
    IDENTIFIER  shift, and go to state 41

    INT_ARRAY      go to state 43
    STATEMENTS_    go to state 158
    IF_            go to state 47
    IF_ELSE        go to state 48
    FOR_           go to state 49
    ASIGN_MENT     go to state 50
    FUNCTION_CALL  go to state 51


state 145

   35 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION . RIGHTPAREN FOR_ASIGN

    RIGHTPAREN  shift, and go to state 159


state 146

   74 IN_PARAMS: NOT . TRUE NEXT_PARAM
   76          | NOT . FALSE NEXT_PARAM

    TRUE   shift, and go to state 160
    FALSE  shift, and go to state 161


state 147

   71 IN_PARAMS: MINUS . INTEGER NEXT_PARAM

    INTEGER  shift, and go to state 162


state 148

   73 IN_PARAMS: TRUE . NEXT_PARAM

    COMMA  shift, and go to state 151

    $default  reduce using rule 79 (NEXT_PARAM)

    NEXT_PARAM  go to state 163


state 149

   75 IN_PARAMS: FALSE . NEXT_PARAM

    COMMA  shift, and go to state 151

    $default  reduce using rule 79 (NEXT_PARAM)

    NEXT_PARAM  go to state 164


state 150

   72 IN_PARAMS: INTEGER . NEXT_PARAM

    COMMA  shift, and go to state 151

    $default  reduce using rule 79 (NEXT_PARAM)

    NEXT_PARAM  go to state 165


state 151

   78 NEXT_PARAM: COMMA . IN_PARAMS

    NOT      shift, and go to state 146
    MINUS    shift, and go to state 147
    TRUE     shift, and go to state 148
    FALSE    shift, and go to state 149
    INTEGER  shift, and go to state 150
    COMMA    shift, and go to state 151

    $default  reduce using rule 79 (NEXT_PARAM)

    IN_PARAMS   go to state 166
    NEXT_PARAM  go to state 153


state 152

   69 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS . RIGHTPAREN

    RIGHTPAREN  shift, and go to state 167


state 153

   77 IN_PARAMS: NEXT_PARAM .

    $default  reduce using rule 77 (IN_PARAMS)


state 154

   70 FUNCTION_CALL: INT_ARRAY ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS . RIGHTPAREN

    RIGHTPAREN  shift, and go to state 168


state 155

   33 IF_ELSE: IF_ ELSE LEFTBRACE STATEMENTS_ RIGHTBRACE .

    $default  reduce using rule 33 (IF_ELSE)


state 156

   43 SINGLE_EXPRESSION: ABSOLUTEVALUE MINUS INTEGER ABSOLUTEVALUE .

    $default  reduce using rule 43 (SINGLE_EXPRESSION)


state 157

   32 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE STATEMENTS_ . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 169


state 158

   34 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE STATEMENTS_ . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 170


state 159

   35 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN . FOR_ASIGN

    INTARRAY    shift, and go to state 16
    IDENTIFIER  shift, and go to state 81

    $default  reduce using rule 37 (FOR_ASIGN)

    INT_ARRAY   go to state 82
    FOR_ASIGN   go to state 171
    ASIGN_MENT  go to state 85


state 160

   74 IN_PARAMS: NOT TRUE . NEXT_PARAM

    COMMA  shift, and go to state 151

    $default  reduce using rule 79 (NEXT_PARAM)

    NEXT_PARAM  go to state 172


state 161

   76 IN_PARAMS: NOT FALSE . NEXT_PARAM

    COMMA  shift, and go to state 151

    $default  reduce using rule 79 (NEXT_PARAM)

    NEXT_PARAM  go to state 173


state 162

   71 IN_PARAMS: MINUS INTEGER . NEXT_PARAM

    COMMA  shift, and go to state 151

    $default  reduce using rule 79 (NEXT_PARAM)

    NEXT_PARAM  go to state 174


state 163

   73 IN_PARAMS: TRUE NEXT_PARAM .

    $default  reduce using rule 73 (IN_PARAMS)


state 164

   75 IN_PARAMS: FALSE NEXT_PARAM .

    $default  reduce using rule 75 (IN_PARAMS)


state 165

   72 IN_PARAMS: INTEGER NEXT_PARAM .

    $default  reduce using rule 72 (IN_PARAMS)


state 166

   78 NEXT_PARAM: COMMA IN_PARAMS .

    $default  reduce using rule 78 (NEXT_PARAM)


state 167

   69 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN .

    $default  reduce using rule 69 (FUNCTION_CALL)


state 168

   70 FUNCTION_CALL: INT_ARRAY ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN .

    $default  reduce using rule 70 (FUNCTION_CALL)


state 169

   32 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE .

    $default  reduce using rule 32 (IF_)


state 170

   34 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE .

    $default  reduce using rule 34 (FOR_)


state 171

   35 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN .

    $default  reduce using rule 35 (FOR_PARAMS)


state 172

   74 IN_PARAMS: NOT TRUE NEXT_PARAM .

    $default  reduce using rule 74 (IN_PARAMS)


state 173

   76 IN_PARAMS: NOT FALSE NEXT_PARAM .

    $default  reduce using rule 76 (IN_PARAMS)


state 174

   71 IN_PARAMS: MINUS INTEGER NEXT_PARAM .

    $default  reduce using rule 71 (IN_PARAMS)
