Grammar

    0 $accept: Start $end

    1 Start: F FUNC_

    2 FUNC_: F FUNC_
    3      | /* empty */

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    5 P_L: IDENTIFIER COLON TYPE MORE_PARAMS
    6    | /* empty */

    7 MORE_PARAMS: COMMA P_L
    8            | /* empty */

    9 TYPE: INT
   10     | BOOL

   11 TYPE_2: TYPE
   12       | INT_ARRAY

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER RIGHTBRACKET

   14 INT_ARRAY_EXP: IDENTIFIER LEFTBRACKET EXPR_ESSION RIGHTBRACKET

   15 R_T: TYPE

   16 B_O_F: VAR_DECLERATIONS BODY_CHOICE RETURN_

   17 BODY_CHOICE: MULT_FUNCTIONS BODY_STATEMENTS

   18 MULT_FUNCTIONS: F MULT_FUNCTIONS
   19               | /* empty */

   20 BODY_STATEMENTS: STATEMENTS_ BODY_STATEMENTS
   21                | /* empty */

   22 VAR_DECLERATIONS: VAR_DEC VAR_DECLERATIONS
   23                 | /* empty */

   24 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE_2 SEMICOLON

   25 MULT_DEC: COMMA IDENTIFIER MULT_DEC
   26         | COMMA INT_ARRAY MULT_DEC
   27         | /* empty */

   28 STATEMENTS_: ASIGN_MENT SEMICOLON
   29            | FUNCTION_CALL SEMICOLON
   30            | IF_
   31            | IF_ELSE
   32            | FOR_

   33 RETURN_: RETURN EXPR_ESSION SEMICOLON

   34 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

   35 IF_ELSE: IF_ ELSE LEFTBRACE BODY_STATEMENTS RIGHTBRACE

   36 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

   37 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN

   38 FOR_ASIGN: ASIGN_MENT SEMICOLON
   39          | /* empty */

   40 ASIGN_MENT: IDENTIFIER ASSIGNMENT EXPR_ESSION
   41           | INT_ARRAY_EXP ASSIGNMENT EXPR_ESSION

   42 EXPR_ESSION: MULT_EXPRESSION
   43            | LEFTPAREN MULT_EXPRESSION RIGHTPAREN OPE_RATOR

   44 SINGLE_EXPRESSION: MINUS INTEGER
   45                  | ABSOLUTEVALUE MINUS INTEGER ABSOLUTEVALUE
   46                  | INTEGER
   47                  | ABSOLUTEVALUE INTEGER ABSOLUTEVALUE
   48                  | TRUE
   49                  | NOT TRUE
   50                  | FALSE
   51                  | NOT FALSE
   52                  | IDENTIFIER
   53                  | ABSOLUTEVALUE IDENTIFIER ABSOLUTEVALUE
   54                  | INT_ARRAY_EXP
   55                  | NOT INT_ARRAY_EXP
   56                  | ABSOLUTEVALUE INT_ARRAY_EXP ABSOLUTEVALUE
   57                  | ABSOLUTEVALUE NOT INT_ARRAY_EXP ABSOLUTEVALUE

   58 MULT_EXPRESSION: SINGLE_EXPRESSION OPE_RATOR

   59 OPE_RATOR: /* empty */
   60          | PLUS EXPR_ESSION
   61          | MINUS EXPR_ESSION
   62          | TIMES EXPR_ESSION
   63          | DIVIDE EXPR_ESSION
   64          | OROR EXPR_ESSION
   65          | ANDAND EXPR_ESSION
   66          | EQEQ EXPR_ESSION
   67          | GT EXPR_ESSION
   68          | GTE EXPR_ESSION
   69          | LT EXPR_ESSION
   70          | LTE EXPR_ESSION
   71          | NE EXPR_ESSION

   72 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN
   73              | INT_ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

   74 IN_PARAMS: MINUS INTEGER NEXT_PARAM
   75          | INTEGER NEXT_PARAM
   76          | INT_ARRAY_EXP NEXT_PARAM
   77          | TRUE NEXT_PARAM
   78          | NOT TRUE NEXT_PARAM
   79          | FALSE NEXT_PARAM
   80          | NOT FALSE NEXT_PARAM
   81          | NEXT_PARAM

   82 NEXT_PARAM: COMMA IN_PARAMS
   83           | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
BOOL (258) 10
ELSE (259) 35
IF (260) 34
INT (261) 9
FOR (262) 36
VAR (263) 24
FUNCTION (264) 4
INTARRAY (265) 13
RETURN (266) 33
EQEQ (267) 66
GT (268) 67
GTE (269) 68
LT (270) 69
LTE (271) 70
NE (272) 71
ANDAND (273) 65
OROR (274) 64
NOT (275) 49 51 55 57 78 80
PLUS (276) 60
MINUS (277) 44 45 61 74
TIMES (278) 62
DIVIDE (279) 63
TRUE (280) 48 49 77 78
FALSE (281) 50 51 79 80
IDENTIFIER (282) 4 5 14 24 25 40 52 53 72 73
INTEGER (283) 13 44 45 46 47 74 75
SEMICOLON (284) 24 28 29 33 38
COLON (285) 4 5 24
COMMA (286) 7 25 26 82
ABSOLUTEVALUE (287) 45 47 53 56 57
LEFTBRACE (288) 4 34 35 36
RIGHTBRACE (289) 4 34 35 36
LEFTPAREN (290) 4 34 36 37 43 72 73
RIGHTPAREN (291) 4 34 36 37 43 72 73
LEFTBRACKET (292) 13 14
RIGHTBRACKET (293) 13 14
ASSIGNMENT (294) 40 41 72 73


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
Start (41)
    on left: 1, on right: 0
FUNC_ (42)
    on left: 2 3, on right: 1 2
F (43)
    on left: 4, on right: 1 2 18
P_L (44)
    on left: 5 6, on right: 4 7
MORE_PARAMS (45)
    on left: 7 8, on right: 5
TYPE (46)
    on left: 9 10, on right: 5 11 15
TYPE_2 (47)
    on left: 11 12, on right: 24
INT_ARRAY (48)
    on left: 13, on right: 12 26
INT_ARRAY_EXP (49)
    on left: 14, on right: 41 54 55 56 57 73 76
R_T (50)
    on left: 15, on right: 4
B_O_F (51)
    on left: 16, on right: 4
BODY_CHOICE (52)
    on left: 17, on right: 16
MULT_FUNCTIONS (53)
    on left: 18 19, on right: 17 18
BODY_STATEMENTS (54)
    on left: 20 21, on right: 17 20 34 35 36
VAR_DECLERATIONS (55)
    on left: 22 23, on right: 16 22
VAR_DEC (56)
    on left: 24, on right: 22
MULT_DEC (57)
    on left: 25 26 27, on right: 24 25 26
STATEMENTS_ (58)
    on left: 28 29 30 31 32, on right: 20
RETURN_ (59)
    on left: 33, on right: 16
IF_ (60)
    on left: 34, on right: 30 35
IF_ELSE (61)
    on left: 35, on right: 31
FOR_ (62)
    on left: 36, on right: 32
FOR_PARAMS (63)
    on left: 37, on right: 36
FOR_ASIGN (64)
    on left: 38 39, on right: 37
ASIGN_MENT (65)
    on left: 40 41, on right: 28 38
EXPR_ESSION (66)
    on left: 42 43, on right: 14 33 34 37 40 41 60 61 62 63 64 65 66
    67 68 69 70 71
SINGLE_EXPRESSION (67)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57, on right: 58
MULT_EXPRESSION (68)
    on left: 58, on right: 42 43
OPE_RATOR (69)
    on left: 59 60 61 62 63 64 65 66 67 68 69 70 71, on right: 43 58
FUNCTION_CALL (70)
    on left: 72 73, on right: 29
IN_PARAMS (71)
    on left: 74 75 76 77 78 79 80 81, on right: 72 73 82
NEXT_PARAM (72)
    on left: 82 83, on right: 74 75 76 77 78 79 80 81


state 0

    0 $accept: . Start $end

    FUNCTION  shift, and go to state 1

    Start  go to state 2
    F      go to state 3


state 1

    4 F: FUNCTION . IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    IDENTIFIER  shift, and go to state 4


state 2

    0 $accept: Start . $end

    $end  shift, and go to state 5


state 3

    1 Start: F . FUNC_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (FUNC_)

    FUNC_  go to state 6
    F      go to state 7


state 4

    4 F: FUNCTION IDENTIFIER . LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    LEFTPAREN  shift, and go to state 8


state 5

    0 $accept: Start $end .

    $default  accept


state 6

    1 Start: F FUNC_ .

    $default  reduce using rule 1 (Start)


state 7

    2 FUNC_: F . FUNC_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (FUNC_)

    FUNC_  go to state 9
    F      go to state 7


state 8

    4 F: FUNCTION IDENTIFIER LEFTPAREN . P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 6 (P_L)

    P_L  go to state 11


state 9

    2 FUNC_: F FUNC_ .

    $default  reduce using rule 2 (FUNC_)


state 10

    5 P_L: IDENTIFIER . COLON TYPE MORE_PARAMS

    COLON  shift, and go to state 12


state 11

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L . RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    RIGHTPAREN  shift, and go to state 13


state 12

    5 P_L: IDENTIFIER COLON . TYPE MORE_PARAMS

    BOOL  shift, and go to state 14
    INT   shift, and go to state 15

    TYPE  go to state 16


state 13

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN . COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    COLON  shift, and go to state 17


state 14

   10 TYPE: BOOL .

    $default  reduce using rule 10 (TYPE)


state 15

    9 TYPE: INT .

    $default  reduce using rule 9 (TYPE)


state 16

    5 P_L: IDENTIFIER COLON TYPE . MORE_PARAMS

    COMMA  shift, and go to state 18

    $default  reduce using rule 8 (MORE_PARAMS)

    MORE_PARAMS  go to state 19


state 17

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON . R_T LEFTBRACE B_O_F RIGHTBRACE

    BOOL  shift, and go to state 14
    INT   shift, and go to state 15

    TYPE  go to state 20
    R_T   go to state 21


state 18

    7 MORE_PARAMS: COMMA . P_L

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 6 (P_L)

    P_L  go to state 22


state 19

    5 P_L: IDENTIFIER COLON TYPE MORE_PARAMS .

    $default  reduce using rule 5 (P_L)


state 20

   15 R_T: TYPE .

    $default  reduce using rule 15 (R_T)


state 21

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T . LEFTBRACE B_O_F RIGHTBRACE

    LEFTBRACE  shift, and go to state 23


state 22

    7 MORE_PARAMS: COMMA P_L .

    $default  reduce using rule 7 (MORE_PARAMS)


state 23

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE . B_O_F RIGHTBRACE

    VAR  shift, and go to state 24

    $default  reduce using rule 23 (VAR_DECLERATIONS)

    B_O_F             go to state 25
    VAR_DECLERATIONS  go to state 26
    VAR_DEC           go to state 27


state 24

   24 VAR_DEC: VAR . IDENTIFIER MULT_DEC COLON TYPE_2 SEMICOLON

    IDENTIFIER  shift, and go to state 28


state 25

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 29


state 26

   16 B_O_F: VAR_DECLERATIONS . BODY_CHOICE RETURN_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 19 (MULT_FUNCTIONS)

    F               go to state 30
    BODY_CHOICE     go to state 31
    MULT_FUNCTIONS  go to state 32


state 27

   22 VAR_DECLERATIONS: VAR_DEC . VAR_DECLERATIONS

    VAR  shift, and go to state 24

    $default  reduce using rule 23 (VAR_DECLERATIONS)

    VAR_DECLERATIONS  go to state 33
    VAR_DEC           go to state 27


state 28

   24 VAR_DEC: VAR IDENTIFIER . MULT_DEC COLON TYPE_2 SEMICOLON

    COMMA  shift, and go to state 34

    $default  reduce using rule 27 (MULT_DEC)

    MULT_DEC  go to state 35


state 29

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE .

    $default  reduce using rule 4 (F)


state 30

   18 MULT_FUNCTIONS: F . MULT_FUNCTIONS

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 19 (MULT_FUNCTIONS)

    F               go to state 30
    MULT_FUNCTIONS  go to state 36


state 31

   16 B_O_F: VAR_DECLERATIONS BODY_CHOICE . RETURN_

    RETURN  shift, and go to state 37

    RETURN_  go to state 38


state 32

   17 BODY_CHOICE: MULT_FUNCTIONS . BODY_STATEMENTS

    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    $default  reduce using rule 21 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 42
    BODY_STATEMENTS  go to state 43
    STATEMENTS_      go to state 44
    IF_              go to state 45
    IF_ELSE          go to state 46
    FOR_             go to state 47
    ASIGN_MENT       go to state 48
    FUNCTION_CALL    go to state 49


state 33

   22 VAR_DECLERATIONS: VAR_DEC VAR_DECLERATIONS .

    $default  reduce using rule 22 (VAR_DECLERATIONS)


state 34

   25 MULT_DEC: COMMA . IDENTIFIER MULT_DEC
   26         | COMMA . INT_ARRAY MULT_DEC

    INTARRAY    shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    INT_ARRAY  go to state 52


state 35

   24 VAR_DEC: VAR IDENTIFIER MULT_DEC . COLON TYPE_2 SEMICOLON

    COLON  shift, and go to state 53


state 36

   18 MULT_FUNCTIONS: F MULT_FUNCTIONS .

    $default  reduce using rule 18 (MULT_FUNCTIONS)


state 37

   33 RETURN_: RETURN . EXPR_ESSION SEMICOLON

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 63
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 38

   16 B_O_F: VAR_DECLERATIONS BODY_CHOICE RETURN_ .

    $default  reduce using rule 16 (B_O_F)


state 39

   34 IF_: IF . LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTPAREN  shift, and go to state 66


state 40

   36 FOR_: FOR . LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTPAREN  shift, and go to state 67


state 41

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET
   40 ASIGN_MENT: IDENTIFIER . ASSIGNMENT EXPR_ESSION
   72 FUNCTION_CALL: IDENTIFIER . ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTBRACKET  shift, and go to state 68
    ASSIGNMENT   shift, and go to state 69


state 42

   41 ASIGN_MENT: INT_ARRAY_EXP . ASSIGNMENT EXPR_ESSION
   73 FUNCTION_CALL: INT_ARRAY_EXP . ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    ASSIGNMENT  shift, and go to state 70


state 43

   17 BODY_CHOICE: MULT_FUNCTIONS BODY_STATEMENTS .

    $default  reduce using rule 17 (BODY_CHOICE)


state 44

   20 BODY_STATEMENTS: STATEMENTS_ . BODY_STATEMENTS

    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    $default  reduce using rule 21 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 42
    BODY_STATEMENTS  go to state 71
    STATEMENTS_      go to state 44
    IF_              go to state 45
    IF_ELSE          go to state 46
    FOR_             go to state 47
    ASIGN_MENT       go to state 48
    FUNCTION_CALL    go to state 49


state 45

   30 STATEMENTS_: IF_ .
   35 IF_ELSE: IF_ . ELSE LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    ELSE  shift, and go to state 72

    $default  reduce using rule 30 (STATEMENTS_)


state 46

   31 STATEMENTS_: IF_ELSE .

    $default  reduce using rule 31 (STATEMENTS_)


state 47

   32 STATEMENTS_: FOR_ .

    $default  reduce using rule 32 (STATEMENTS_)


state 48

   28 STATEMENTS_: ASIGN_MENT . SEMICOLON

    SEMICOLON  shift, and go to state 73


state 49

   29 STATEMENTS_: FUNCTION_CALL . SEMICOLON

    SEMICOLON  shift, and go to state 74


state 50

   13 INT_ARRAY: INTARRAY . LEFTBRACKET INTEGER RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 75


state 51

   25 MULT_DEC: COMMA IDENTIFIER . MULT_DEC

    COMMA  shift, and go to state 34

    $default  reduce using rule 27 (MULT_DEC)

    MULT_DEC  go to state 76


state 52

   26 MULT_DEC: COMMA INT_ARRAY . MULT_DEC

    COMMA  shift, and go to state 34

    $default  reduce using rule 27 (MULT_DEC)

    MULT_DEC  go to state 77


state 53

   24 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON . TYPE_2 SEMICOLON

    BOOL      shift, and go to state 14
    INT       shift, and go to state 15
    INTARRAY  shift, and go to state 50

    TYPE       go to state 78
    TYPE_2     go to state 79
    INT_ARRAY  go to state 80


state 54

   49 SINGLE_EXPRESSION: NOT . TRUE
   51                  | NOT . FALSE
   55                  | NOT . INT_ARRAY_EXP

    TRUE        shift, and go to state 81
    FALSE       shift, and go to state 82
    IDENTIFIER  shift, and go to state 83

    INT_ARRAY_EXP  go to state 84


state 55

   44 SINGLE_EXPRESSION: MINUS . INTEGER

    INTEGER  shift, and go to state 85


state 56

   48 SINGLE_EXPRESSION: TRUE .

    $default  reduce using rule 48 (SINGLE_EXPRESSION)


state 57

   50 SINGLE_EXPRESSION: FALSE .

    $default  reduce using rule 50 (SINGLE_EXPRESSION)


state 58

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET
   52 SINGLE_EXPRESSION: IDENTIFIER .

    LEFTBRACKET  shift, and go to state 68

    $default  reduce using rule 52 (SINGLE_EXPRESSION)


state 59

   46 SINGLE_EXPRESSION: INTEGER .

    $default  reduce using rule 46 (SINGLE_EXPRESSION)


state 60

   45 SINGLE_EXPRESSION: ABSOLUTEVALUE . MINUS INTEGER ABSOLUTEVALUE
   47                  | ABSOLUTEVALUE . INTEGER ABSOLUTEVALUE
   53                  | ABSOLUTEVALUE . IDENTIFIER ABSOLUTEVALUE
   56                  | ABSOLUTEVALUE . INT_ARRAY_EXP ABSOLUTEVALUE
   57                  | ABSOLUTEVALUE . NOT INT_ARRAY_EXP ABSOLUTEVALUE

    NOT         shift, and go to state 86
    MINUS       shift, and go to state 87
    IDENTIFIER  shift, and go to state 88
    INTEGER     shift, and go to state 89

    INT_ARRAY_EXP  go to state 90


state 61

   43 EXPR_ESSION: LEFTPAREN . MULT_EXPRESSION RIGHTPAREN OPE_RATOR

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60

    INT_ARRAY_EXP      go to state 62
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 91


state 62

   54 SINGLE_EXPRESSION: INT_ARRAY_EXP .

    $default  reduce using rule 54 (SINGLE_EXPRESSION)


state 63

   33 RETURN_: RETURN EXPR_ESSION . SEMICOLON

    SEMICOLON  shift, and go to state 92


state 64

   58 MULT_EXPRESSION: SINGLE_EXPRESSION . OPE_RATOR

    EQEQ    shift, and go to state 93
    GT      shift, and go to state 94
    GTE     shift, and go to state 95
    LT      shift, and go to state 96
    LTE     shift, and go to state 97
    NE      shift, and go to state 98
    ANDAND  shift, and go to state 99
    OROR    shift, and go to state 100
    PLUS    shift, and go to state 101
    MINUS   shift, and go to state 102
    TIMES   shift, and go to state 103
    DIVIDE  shift, and go to state 104

    $default  reduce using rule 59 (OPE_RATOR)

    OPE_RATOR  go to state 105


state 65

   42 EXPR_ESSION: MULT_EXPRESSION .

    $default  reduce using rule 42 (EXPR_ESSION)


state 66

   34 IF_: IF LEFTPAREN . EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 106
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 67

   36 FOR_: FOR LEFTPAREN . FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    IDENTIFIER  shift, and go to state 107

    $default  reduce using rule 39 (FOR_ASIGN)

    INT_ARRAY_EXP  go to state 108
    FOR_PARAMS     go to state 109
    FOR_ASIGN      go to state 110
    ASIGN_MENT     go to state 111


state 68

   14 INT_ARRAY_EXP: IDENTIFIER LEFTBRACKET . EXPR_ESSION RIGHTBRACKET

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 112
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 69

   40 ASIGN_MENT: IDENTIFIER ASSIGNMENT . EXPR_ESSION
   72 FUNCTION_CALL: IDENTIFIER ASSIGNMENT . IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 113
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 114
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 70

   41 ASIGN_MENT: INT_ARRAY_EXP ASSIGNMENT . EXPR_ESSION
   73 FUNCTION_CALL: INT_ARRAY_EXP ASSIGNMENT . IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 115
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 116
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 71

   20 BODY_STATEMENTS: STATEMENTS_ BODY_STATEMENTS .

    $default  reduce using rule 20 (BODY_STATEMENTS)


state 72

   35 IF_ELSE: IF_ ELSE . LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTBRACE  shift, and go to state 117


state 73

   28 STATEMENTS_: ASIGN_MENT SEMICOLON .

    $default  reduce using rule 28 (STATEMENTS_)


state 74

   29 STATEMENTS_: FUNCTION_CALL SEMICOLON .

    $default  reduce using rule 29 (STATEMENTS_)


state 75

   13 INT_ARRAY: INTARRAY LEFTBRACKET . INTEGER RIGHTBRACKET

    INTEGER  shift, and go to state 118


state 76

   25 MULT_DEC: COMMA IDENTIFIER MULT_DEC .

    $default  reduce using rule 25 (MULT_DEC)


state 77

   26 MULT_DEC: COMMA INT_ARRAY MULT_DEC .

    $default  reduce using rule 26 (MULT_DEC)


state 78

   11 TYPE_2: TYPE .

    $default  reduce using rule 11 (TYPE_2)


state 79

   24 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE_2 . SEMICOLON

    SEMICOLON  shift, and go to state 119


state 80

   12 TYPE_2: INT_ARRAY .

    $default  reduce using rule 12 (TYPE_2)


state 81

   49 SINGLE_EXPRESSION: NOT TRUE .

    $default  reduce using rule 49 (SINGLE_EXPRESSION)


state 82

   51 SINGLE_EXPRESSION: NOT FALSE .

    $default  reduce using rule 51 (SINGLE_EXPRESSION)


state 83

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 68


state 84

   55 SINGLE_EXPRESSION: NOT INT_ARRAY_EXP .

    $default  reduce using rule 55 (SINGLE_EXPRESSION)


state 85

   44 SINGLE_EXPRESSION: MINUS INTEGER .

    $default  reduce using rule 44 (SINGLE_EXPRESSION)


state 86

   57 SINGLE_EXPRESSION: ABSOLUTEVALUE NOT . INT_ARRAY_EXP ABSOLUTEVALUE

    IDENTIFIER  shift, and go to state 83

    INT_ARRAY_EXP  go to state 120


state 87

   45 SINGLE_EXPRESSION: ABSOLUTEVALUE MINUS . INTEGER ABSOLUTEVALUE

    INTEGER  shift, and go to state 121


state 88

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET
   53 SINGLE_EXPRESSION: ABSOLUTEVALUE IDENTIFIER . ABSOLUTEVALUE

    ABSOLUTEVALUE  shift, and go to state 122
    LEFTBRACKET    shift, and go to state 68


state 89

   47 SINGLE_EXPRESSION: ABSOLUTEVALUE INTEGER . ABSOLUTEVALUE

    ABSOLUTEVALUE  shift, and go to state 123


state 90

   56 SINGLE_EXPRESSION: ABSOLUTEVALUE INT_ARRAY_EXP . ABSOLUTEVALUE

    ABSOLUTEVALUE  shift, and go to state 124


state 91

   43 EXPR_ESSION: LEFTPAREN MULT_EXPRESSION . RIGHTPAREN OPE_RATOR

    RIGHTPAREN  shift, and go to state 125


state 92

   33 RETURN_: RETURN EXPR_ESSION SEMICOLON .

    $default  reduce using rule 33 (RETURN_)


state 93

   66 OPE_RATOR: EQEQ . EXPR_ESSION

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 126
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 94

   67 OPE_RATOR: GT . EXPR_ESSION

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 127
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 95

   68 OPE_RATOR: GTE . EXPR_ESSION

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 128
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 96

   69 OPE_RATOR: LT . EXPR_ESSION

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 129
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 97

   70 OPE_RATOR: LTE . EXPR_ESSION

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 130
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 98

   71 OPE_RATOR: NE . EXPR_ESSION

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 131
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 99

   65 OPE_RATOR: ANDAND . EXPR_ESSION

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 132
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 100

   64 OPE_RATOR: OROR . EXPR_ESSION

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 133
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 101

   60 OPE_RATOR: PLUS . EXPR_ESSION

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 134
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 102

   61 OPE_RATOR: MINUS . EXPR_ESSION

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 135
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 103

   62 OPE_RATOR: TIMES . EXPR_ESSION

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 136
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 104

   63 OPE_RATOR: DIVIDE . EXPR_ESSION

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 137
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 105

   58 MULT_EXPRESSION: SINGLE_EXPRESSION OPE_RATOR .

    $default  reduce using rule 58 (MULT_EXPRESSION)


state 106

   34 IF_: IF LEFTPAREN EXPR_ESSION . RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    RIGHTPAREN  shift, and go to state 138


state 107

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET
   40 ASIGN_MENT: IDENTIFIER . ASSIGNMENT EXPR_ESSION

    LEFTBRACKET  shift, and go to state 68
    ASSIGNMENT   shift, and go to state 139


state 108

   41 ASIGN_MENT: INT_ARRAY_EXP . ASSIGNMENT EXPR_ESSION

    ASSIGNMENT  shift, and go to state 140


state 109

   36 FOR_: FOR LEFTPAREN FOR_PARAMS . RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    RIGHTPAREN  shift, and go to state 141


state 110

   37 FOR_PARAMS: FOR_ASIGN . LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN

    LEFTPAREN  shift, and go to state 142


state 111

   38 FOR_ASIGN: ASIGN_MENT . SEMICOLON

    SEMICOLON  shift, and go to state 143


state 112

   14 INT_ARRAY_EXP: IDENTIFIER LEFTBRACKET EXPR_ESSION . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 144


state 113

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET
   52 SINGLE_EXPRESSION: IDENTIFIER .
   72 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER . LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTPAREN    shift, and go to state 145
    LEFTBRACKET  shift, and go to state 68

    $default  reduce using rule 52 (SINGLE_EXPRESSION)


state 114

   40 ASIGN_MENT: IDENTIFIER ASSIGNMENT EXPR_ESSION .

    $default  reduce using rule 40 (ASIGN_MENT)


state 115

   14 INT_ARRAY_EXP: IDENTIFIER . LEFTBRACKET EXPR_ESSION RIGHTBRACKET
   52 SINGLE_EXPRESSION: IDENTIFIER .
   73 FUNCTION_CALL: INT_ARRAY_EXP ASSIGNMENT IDENTIFIER . LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTPAREN    shift, and go to state 146
    LEFTBRACKET  shift, and go to state 68

    $default  reduce using rule 52 (SINGLE_EXPRESSION)


state 116

   41 ASIGN_MENT: INT_ARRAY_EXP ASSIGNMENT EXPR_ESSION .

    $default  reduce using rule 41 (ASIGN_MENT)


state 117

   35 IF_ELSE: IF_ ELSE LEFTBRACE . BODY_STATEMENTS RIGHTBRACE

    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    $default  reduce using rule 21 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 42
    BODY_STATEMENTS  go to state 147
    STATEMENTS_      go to state 44
    IF_              go to state 45
    IF_ELSE          go to state 46
    FOR_             go to state 47
    ASIGN_MENT       go to state 48
    FUNCTION_CALL    go to state 49


state 118

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 148


state 119

   24 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE_2 SEMICOLON .

    $default  reduce using rule 24 (VAR_DEC)


state 120

   57 SINGLE_EXPRESSION: ABSOLUTEVALUE NOT INT_ARRAY_EXP . ABSOLUTEVALUE

    ABSOLUTEVALUE  shift, and go to state 149


state 121

   45 SINGLE_EXPRESSION: ABSOLUTEVALUE MINUS INTEGER . ABSOLUTEVALUE

    ABSOLUTEVALUE  shift, and go to state 150


state 122

   53 SINGLE_EXPRESSION: ABSOLUTEVALUE IDENTIFIER ABSOLUTEVALUE .

    $default  reduce using rule 53 (SINGLE_EXPRESSION)


state 123

   47 SINGLE_EXPRESSION: ABSOLUTEVALUE INTEGER ABSOLUTEVALUE .

    $default  reduce using rule 47 (SINGLE_EXPRESSION)


state 124

   56 SINGLE_EXPRESSION: ABSOLUTEVALUE INT_ARRAY_EXP ABSOLUTEVALUE .

    $default  reduce using rule 56 (SINGLE_EXPRESSION)


state 125

   43 EXPR_ESSION: LEFTPAREN MULT_EXPRESSION RIGHTPAREN . OPE_RATOR

    EQEQ    shift, and go to state 93
    GT      shift, and go to state 94
    GTE     shift, and go to state 95
    LT      shift, and go to state 96
    LTE     shift, and go to state 97
    NE      shift, and go to state 98
    ANDAND  shift, and go to state 99
    OROR    shift, and go to state 100
    PLUS    shift, and go to state 101
    MINUS   shift, and go to state 102
    TIMES   shift, and go to state 103
    DIVIDE  shift, and go to state 104

    $default  reduce using rule 59 (OPE_RATOR)

    OPE_RATOR  go to state 151


state 126

   66 OPE_RATOR: EQEQ EXPR_ESSION .

    $default  reduce using rule 66 (OPE_RATOR)


state 127

   67 OPE_RATOR: GT EXPR_ESSION .

    $default  reduce using rule 67 (OPE_RATOR)


state 128

   68 OPE_RATOR: GTE EXPR_ESSION .

    $default  reduce using rule 68 (OPE_RATOR)


state 129

   69 OPE_RATOR: LT EXPR_ESSION .

    $default  reduce using rule 69 (OPE_RATOR)


state 130

   70 OPE_RATOR: LTE EXPR_ESSION .

    $default  reduce using rule 70 (OPE_RATOR)


state 131

   71 OPE_RATOR: NE EXPR_ESSION .

    $default  reduce using rule 71 (OPE_RATOR)


state 132

   65 OPE_RATOR: ANDAND EXPR_ESSION .

    $default  reduce using rule 65 (OPE_RATOR)


state 133

   64 OPE_RATOR: OROR EXPR_ESSION .

    $default  reduce using rule 64 (OPE_RATOR)


state 134

   60 OPE_RATOR: PLUS EXPR_ESSION .

    $default  reduce using rule 60 (OPE_RATOR)


state 135

   61 OPE_RATOR: MINUS EXPR_ESSION .

    $default  reduce using rule 61 (OPE_RATOR)


state 136

   62 OPE_RATOR: TIMES EXPR_ESSION .

    $default  reduce using rule 62 (OPE_RATOR)


state 137

   63 OPE_RATOR: DIVIDE EXPR_ESSION .

    $default  reduce using rule 63 (OPE_RATOR)


state 138

   34 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN . LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTBRACE  shift, and go to state 152


state 139

   40 ASIGN_MENT: IDENTIFIER ASSIGNMENT . EXPR_ESSION

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 114
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 140

   41 ASIGN_MENT: INT_ARRAY_EXP ASSIGNMENT . EXPR_ESSION

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 116
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 141

   36 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN . LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTBRACE  shift, and go to state 153


state 142

   37 FOR_PARAMS: FOR_ASIGN LEFTPAREN . EXPR_ESSION RIGHTPAREN FOR_ASIGN

    NOT            shift, and go to state 54
    MINUS          shift, and go to state 55
    TRUE           shift, and go to state 56
    FALSE          shift, and go to state 57
    IDENTIFIER     shift, and go to state 58
    INTEGER        shift, and go to state 59
    ABSOLUTEVALUE  shift, and go to state 60
    LEFTPAREN      shift, and go to state 61

    INT_ARRAY_EXP      go to state 62
    EXPR_ESSION        go to state 154
    SINGLE_EXPRESSION  go to state 64
    MULT_EXPRESSION    go to state 65


state 143

   38 FOR_ASIGN: ASIGN_MENT SEMICOLON .

    $default  reduce using rule 38 (FOR_ASIGN)


state 144

   14 INT_ARRAY_EXP: IDENTIFIER LEFTBRACKET EXPR_ESSION RIGHTBRACKET .

    $default  reduce using rule 14 (INT_ARRAY_EXP)


state 145

   72 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN . IN_PARAMS RIGHTPAREN

    NOT         shift, and go to state 155
    MINUS       shift, and go to state 156
    TRUE        shift, and go to state 157
    FALSE       shift, and go to state 158
    IDENTIFIER  shift, and go to state 83
    INTEGER     shift, and go to state 159
    COMMA       shift, and go to state 160

    $default  reduce using rule 83 (NEXT_PARAM)

    INT_ARRAY_EXP  go to state 161
    IN_PARAMS      go to state 162
    NEXT_PARAM     go to state 163


state 146

   73 FUNCTION_CALL: INT_ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN . IN_PARAMS RIGHTPAREN

    NOT         shift, and go to state 155
    MINUS       shift, and go to state 156
    TRUE        shift, and go to state 157
    FALSE       shift, and go to state 158
    IDENTIFIER  shift, and go to state 83
    INTEGER     shift, and go to state 159
    COMMA       shift, and go to state 160

    $default  reduce using rule 83 (NEXT_PARAM)

    INT_ARRAY_EXP  go to state 161
    IN_PARAMS      go to state 164
    NEXT_PARAM     go to state 163


state 147

   35 IF_ELSE: IF_ ELSE LEFTBRACE BODY_STATEMENTS . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 165


state 148

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER RIGHTBRACKET .

    $default  reduce using rule 13 (INT_ARRAY)


state 149

   57 SINGLE_EXPRESSION: ABSOLUTEVALUE NOT INT_ARRAY_EXP ABSOLUTEVALUE .

    $default  reduce using rule 57 (SINGLE_EXPRESSION)


state 150

   45 SINGLE_EXPRESSION: ABSOLUTEVALUE MINUS INTEGER ABSOLUTEVALUE .

    $default  reduce using rule 45 (SINGLE_EXPRESSION)


state 151

   43 EXPR_ESSION: LEFTPAREN MULT_EXPRESSION RIGHTPAREN OPE_RATOR .

    $default  reduce using rule 43 (EXPR_ESSION)


state 152

   34 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE . BODY_STATEMENTS RIGHTBRACE

    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    $default  reduce using rule 21 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 42
    BODY_STATEMENTS  go to state 166
    STATEMENTS_      go to state 44
    IF_              go to state 45
    IF_ELSE          go to state 46
    FOR_             go to state 47
    ASIGN_MENT       go to state 48
    FUNCTION_CALL    go to state 49


state 153

   36 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE . BODY_STATEMENTS RIGHTBRACE

    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    $default  reduce using rule 21 (BODY_STATEMENTS)

    INT_ARRAY_EXP    go to state 42
    BODY_STATEMENTS  go to state 167
    STATEMENTS_      go to state 44
    IF_              go to state 45
    IF_ELSE          go to state 46
    FOR_             go to state 47
    ASIGN_MENT       go to state 48
    FUNCTION_CALL    go to state 49


state 154

   37 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION . RIGHTPAREN FOR_ASIGN

    RIGHTPAREN  shift, and go to state 168


state 155

   78 IN_PARAMS: NOT . TRUE NEXT_PARAM
   80          | NOT . FALSE NEXT_PARAM

    TRUE   shift, and go to state 169
    FALSE  shift, and go to state 170


state 156

   74 IN_PARAMS: MINUS . INTEGER NEXT_PARAM

    INTEGER  shift, and go to state 171


state 157

   77 IN_PARAMS: TRUE . NEXT_PARAM

    COMMA  shift, and go to state 160

    $default  reduce using rule 83 (NEXT_PARAM)

    NEXT_PARAM  go to state 172


state 158

   79 IN_PARAMS: FALSE . NEXT_PARAM

    COMMA  shift, and go to state 160

    $default  reduce using rule 83 (NEXT_PARAM)

    NEXT_PARAM  go to state 173


state 159

   75 IN_PARAMS: INTEGER . NEXT_PARAM

    COMMA  shift, and go to state 160

    $default  reduce using rule 83 (NEXT_PARAM)

    NEXT_PARAM  go to state 174


state 160

   82 NEXT_PARAM: COMMA . IN_PARAMS

    NOT         shift, and go to state 155
    MINUS       shift, and go to state 156
    TRUE        shift, and go to state 157
    FALSE       shift, and go to state 158
    IDENTIFIER  shift, and go to state 83
    INTEGER     shift, and go to state 159
    COMMA       shift, and go to state 160

    $default  reduce using rule 83 (NEXT_PARAM)

    INT_ARRAY_EXP  go to state 161
    IN_PARAMS      go to state 175
    NEXT_PARAM     go to state 163


state 161

   76 IN_PARAMS: INT_ARRAY_EXP . NEXT_PARAM

    COMMA  shift, and go to state 160

    $default  reduce using rule 83 (NEXT_PARAM)

    NEXT_PARAM  go to state 176


state 162

   72 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS . RIGHTPAREN

    RIGHTPAREN  shift, and go to state 177


state 163

   81 IN_PARAMS: NEXT_PARAM .

    $default  reduce using rule 81 (IN_PARAMS)


state 164

   73 FUNCTION_CALL: INT_ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS . RIGHTPAREN

    RIGHTPAREN  shift, and go to state 178


state 165

   35 IF_ELSE: IF_ ELSE LEFTBRACE BODY_STATEMENTS RIGHTBRACE .

    $default  reduce using rule 35 (IF_ELSE)


state 166

   34 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 179


state 167

   36 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 180


state 168

   37 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN . FOR_ASIGN

    IDENTIFIER  shift, and go to state 107

    $default  reduce using rule 39 (FOR_ASIGN)

    INT_ARRAY_EXP  go to state 108
    FOR_ASIGN      go to state 181
    ASIGN_MENT     go to state 111


state 169

   78 IN_PARAMS: NOT TRUE . NEXT_PARAM

    COMMA  shift, and go to state 160

    $default  reduce using rule 83 (NEXT_PARAM)

    NEXT_PARAM  go to state 182


state 170

   80 IN_PARAMS: NOT FALSE . NEXT_PARAM

    COMMA  shift, and go to state 160

    $default  reduce using rule 83 (NEXT_PARAM)

    NEXT_PARAM  go to state 183


state 171

   74 IN_PARAMS: MINUS INTEGER . NEXT_PARAM

    COMMA  shift, and go to state 160

    $default  reduce using rule 83 (NEXT_PARAM)

    NEXT_PARAM  go to state 184


state 172

   77 IN_PARAMS: TRUE NEXT_PARAM .

    $default  reduce using rule 77 (IN_PARAMS)


state 173

   79 IN_PARAMS: FALSE NEXT_PARAM .

    $default  reduce using rule 79 (IN_PARAMS)


state 174

   75 IN_PARAMS: INTEGER NEXT_PARAM .

    $default  reduce using rule 75 (IN_PARAMS)


state 175

   82 NEXT_PARAM: COMMA IN_PARAMS .

    $default  reduce using rule 82 (NEXT_PARAM)


state 176

   76 IN_PARAMS: INT_ARRAY_EXP NEXT_PARAM .

    $default  reduce using rule 76 (IN_PARAMS)


state 177

   72 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN .

    $default  reduce using rule 72 (FUNCTION_CALL)


state 178

   73 FUNCTION_CALL: INT_ARRAY_EXP ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN .

    $default  reduce using rule 73 (FUNCTION_CALL)


state 179

   34 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE .

    $default  reduce using rule 34 (IF_)


state 180

   36 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE .

    $default  reduce using rule 36 (FOR_)


state 181

   37 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN .

    $default  reduce using rule 37 (FOR_PARAMS)


state 182

   78 IN_PARAMS: NOT TRUE NEXT_PARAM .

    $default  reduce using rule 78 (IN_PARAMS)


state 183

   80 IN_PARAMS: NOT FALSE NEXT_PARAM .

    $default  reduce using rule 80 (IN_PARAMS)


state 184

   74 IN_PARAMS: MINUS INTEGER NEXT_PARAM .

    $default  reduce using rule 74 (IN_PARAMS)
