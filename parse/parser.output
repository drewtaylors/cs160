Grammar

    0 $accept: Start $end

    1 Start: F FUNC_

    2 FUNC_: F FUNC_
    3      | /* empty */

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    5 P_L: IDENTIFIER COLON TYPE MORE_PARAMS
    6    | /* empty */

    7 MORE_PARAMS: COMMA P_L
    8            | /* empty */

    9 TYPE: INT
   10     | BOOL

   11 TYPE_2: TYPE
   12       | INT_ARRAY

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER RIGHTBRACKET

   14 R_T: TYPE

   15 B_O_F: VAR_DECLERATIONS BODY_CHOICE RETURN_

   16 BODY_CHOICE: F BODY_STATEMENTS
   17            | BODY_STATEMENTS

   18 BODY_STATEMENTS: STATEMENTS_ BODY_STATEMENTS
   19                | /* empty */

   20 VAR_DECLERATIONS: VAR_DEC VAR_DECLERATIONS
   21                 | /* empty */

   22 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE_2 SEMICOLON

   23 MULT_DEC: COMMA IDENTIFIER MULT_DEC
   24         | COMMA INT_ARRAY MULT_DEC
   25         | /* empty */

   26 STATEMENTS_: ASIGN_MENT SEMICOLON
   27            | FUNCTION_CALL SEMICOLON
   28            | IF_
   29            | IF_ELSE
   30            | FOR_

   31 RETURN_: RETURN EXPR_ESSION SEMICOLON

   32 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

   33 IF_ELSE: IF_ ELSE LEFTBRACE BODY_STATEMENTS RIGHTBRACE

   34 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

   35 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN

   36 FOR_ASIGN: ASIGN_MENT SEMICOLON
   37          | /* empty */

   38 ASIGN_MENT: IDENTIFIER ASSIGNMENT EXPR_ESSION
   39           | INT_ARRAY ASSIGNMENT EXPR_ESSION

   40 EXPR_ESSION: MULT_EXPRESSION
   41            | LEFTPAREN MULT_EXPRESSION RIGHTPAREN OPE_RATOR

   42 SINGLE_EXPRESSION: MINUS INTEGER
   43                  | ABSOLUTEVALUE MINUS INTEGER ABSOLUTEVALUE
   44                  | INTEGER
   45                  | ABSOLUTEVALUE INTEGER ABSOLUTEVALUE
   46                  | TRUE
   47                  | NOT TRUE
   48                  | FALSE
   49                  | NOT FALSE
   50                  | IDENTIFIER
   51                  | ABSOLUTEVALUE IDENTIFIER ABSOLUTEVALUE
   52                  | INT_ARRAY
   53                  | NOT INT_ARRAY
   54                  | ABSOLUTEVALUE INT_ARRAY ABSOLUTEVALUE
   55                  | ABSOLUTEVALUE NOT INT_ARRAY ABSOLUTEVALUE

   56 INT_ARRAY: IDENTIFIER LEFTBRACKET INTEGER RIGHTBRACKET

   57 MULT_EXPRESSION: SINGLE_EXPRESSION OPE_RATOR

   58 OPE_RATOR: /* empty */
   59          | PLUS EXPR_ESSION
   60          | MINUS EXPR_ESSION
   61          | TIMES EXPR_ESSION
   62          | DIVIDE EXPR_ESSION
   63          | OROR EXPR_ESSION
   64          | ANDAND EXPR_ESSION
   65          | EQEQ EXPR_ESSION
   66          | GT EXPR_ESSION
   67          | GTE EXPR_ESSION
   68          | LT EXPR_ESSION
   69          | LTE EXPR_ESSION
   70          | NE EXPR_ESSION

   71 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN
   72              | INT_ARRAY ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

   73 IN_PARAMS: MINUS INTEGER NEXT_PARAM
   74          | INTEGER NEXT_PARAM
   75          | TRUE NEXT_PARAM
   76          | NOT TRUE NEXT_PARAM
   77          | FALSE NEXT_PARAM
   78          | NOT FALSE NEXT_PARAM
   79          | NEXT_PARAM

   80 NEXT_PARAM: COMMA IN_PARAMS
   81           | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
BOOL (258) 10
ELSE (259) 33
IF (260) 32
INT (261) 9
FOR (262) 34
VAR (263) 22
FUNCTION (264) 4
INTARRAY (265) 13
RETURN (266) 31
EQEQ (267) 65
GT (268) 66
GTE (269) 67
LT (270) 68
LTE (271) 69
NE (272) 70
ANDAND (273) 64
OROR (274) 63
NOT (275) 47 49 53 55 76 78
PLUS (276) 59
MINUS (277) 42 43 60 73
TIMES (278) 61
DIVIDE (279) 62
TRUE (280) 46 47 75 76
FALSE (281) 48 49 77 78
IDENTIFIER (282) 4 5 22 23 38 50 51 56 71 72
INTEGER (283) 13 42 43 44 45 56 73 74
SEMICOLON (284) 22 26 27 31 36
COLON (285) 4 5 22
COMMA (286) 7 23 24 80
ABSOLUTEVALUE (287) 43 45 51 54 55
LEFTBRACE (288) 4 32 33 34
RIGHTBRACE (289) 4 32 33 34
LEFTPAREN (290) 4 32 34 35 41 71 72
RIGHTPAREN (291) 4 32 34 35 41 71 72
LEFTBRACKET (292) 13 56
RIGHTBRACKET (293) 13 56
ASSIGNMENT (294) 38 39 71 72


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
Start (41)
    on left: 1, on right: 0
FUNC_ (42)
    on left: 2 3, on right: 1 2
F (43)
    on left: 4, on right: 1 2 16
P_L (44)
    on left: 5 6, on right: 4 7
MORE_PARAMS (45)
    on left: 7 8, on right: 5
TYPE (46)
    on left: 9 10, on right: 5 11 14
TYPE_2 (47)
    on left: 11 12, on right: 22
INT_ARRAY (48)
    on left: 13 56, on right: 12 24 39 52 53 54 55 72
R_T (49)
    on left: 14, on right: 4
B_O_F (50)
    on left: 15, on right: 4
BODY_CHOICE (51)
    on left: 16 17, on right: 15
BODY_STATEMENTS (52)
    on left: 18 19, on right: 16 17 18 32 33 34
VAR_DECLERATIONS (53)
    on left: 20 21, on right: 15 20
VAR_DEC (54)
    on left: 22, on right: 20
MULT_DEC (55)
    on left: 23 24 25, on right: 22 23 24
STATEMENTS_ (56)
    on left: 26 27 28 29 30, on right: 18
RETURN_ (57)
    on left: 31, on right: 15
IF_ (58)
    on left: 32, on right: 28 33
IF_ELSE (59)
    on left: 33, on right: 29
FOR_ (60)
    on left: 34, on right: 30
FOR_PARAMS (61)
    on left: 35, on right: 34
FOR_ASIGN (62)
    on left: 36 37, on right: 35
ASIGN_MENT (63)
    on left: 38 39, on right: 26 36
EXPR_ESSION (64)
    on left: 40 41, on right: 31 32 35 38 39 59 60 61 62 63 64 65 66
    67 68 69 70
SINGLE_EXPRESSION (65)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55, on right: 57
MULT_EXPRESSION (66)
    on left: 57, on right: 40 41
OPE_RATOR (67)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70, on right: 41 57
FUNCTION_CALL (68)
    on left: 71 72, on right: 27
IN_PARAMS (69)
    on left: 73 74 75 76 77 78 79, on right: 71 72 80
NEXT_PARAM (70)
    on left: 80 81, on right: 73 74 75 76 77 78 79


state 0

    0 $accept: . Start $end

    FUNCTION  shift, and go to state 1

    Start  go to state 2
    F      go to state 3


state 1

    4 F: FUNCTION . IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    IDENTIFIER  shift, and go to state 4


state 2

    0 $accept: Start . $end

    $end  shift, and go to state 5


state 3

    1 Start: F . FUNC_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (FUNC_)

    FUNC_  go to state 6
    F      go to state 7


state 4

    4 F: FUNCTION IDENTIFIER . LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    LEFTPAREN  shift, and go to state 8


state 5

    0 $accept: Start $end .

    $default  accept


state 6

    1 Start: F FUNC_ .

    $default  reduce using rule 1 (Start)


state 7

    2 FUNC_: F . FUNC_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (FUNC_)

    FUNC_  go to state 9
    F      go to state 7


state 8

    4 F: FUNCTION IDENTIFIER LEFTPAREN . P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 6 (P_L)

    P_L  go to state 11


state 9

    2 FUNC_: F FUNC_ .

    $default  reduce using rule 2 (FUNC_)


state 10

    5 P_L: IDENTIFIER . COLON TYPE MORE_PARAMS

    COLON  shift, and go to state 12


state 11

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L . RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    RIGHTPAREN  shift, and go to state 13


state 12

    5 P_L: IDENTIFIER COLON . TYPE MORE_PARAMS

    BOOL  shift, and go to state 14
    INT   shift, and go to state 15

    TYPE  go to state 16


state 13

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN . COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    COLON  shift, and go to state 17


state 14

   10 TYPE: BOOL .

    $default  reduce using rule 10 (TYPE)


state 15

    9 TYPE: INT .

    $default  reduce using rule 9 (TYPE)


state 16

    5 P_L: IDENTIFIER COLON TYPE . MORE_PARAMS

    COMMA  shift, and go to state 18

    $default  reduce using rule 8 (MORE_PARAMS)

    MORE_PARAMS  go to state 19


state 17

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON . R_T LEFTBRACE B_O_F RIGHTBRACE

    BOOL  shift, and go to state 14
    INT   shift, and go to state 15

    TYPE  go to state 20
    R_T   go to state 21


state 18

    7 MORE_PARAMS: COMMA . P_L

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 6 (P_L)

    P_L  go to state 22


state 19

    5 P_L: IDENTIFIER COLON TYPE MORE_PARAMS .

    $default  reduce using rule 5 (P_L)


state 20

   14 R_T: TYPE .

    $default  reduce using rule 14 (R_T)


state 21

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T . LEFTBRACE B_O_F RIGHTBRACE

    LEFTBRACE  shift, and go to state 23


state 22

    7 MORE_PARAMS: COMMA P_L .

    $default  reduce using rule 7 (MORE_PARAMS)


state 23

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE . B_O_F RIGHTBRACE

    VAR  shift, and go to state 24

    $default  reduce using rule 21 (VAR_DECLERATIONS)

    B_O_F             go to state 25
    VAR_DECLERATIONS  go to state 26
    VAR_DEC           go to state 27


state 24

   22 VAR_DEC: VAR . IDENTIFIER MULT_DEC COLON TYPE_2 SEMICOLON

    IDENTIFIER  shift, and go to state 28


state 25

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 29


state 26

   15 B_O_F: VAR_DECLERATIONS . BODY_CHOICE RETURN_

    IF          shift, and go to state 30
    FOR         shift, and go to state 31
    FUNCTION    shift, and go to state 1
    INTARRAY    shift, and go to state 32
    IDENTIFIER  shift, and go to state 33

    $default  reduce using rule 19 (BODY_STATEMENTS)

    F                go to state 34
    INT_ARRAY        go to state 35
    BODY_CHOICE      go to state 36
    BODY_STATEMENTS  go to state 37
    STATEMENTS_      go to state 38
    IF_              go to state 39
    IF_ELSE          go to state 40
    FOR_             go to state 41
    ASIGN_MENT       go to state 42
    FUNCTION_CALL    go to state 43


state 27

   20 VAR_DECLERATIONS: VAR_DEC . VAR_DECLERATIONS

    VAR  shift, and go to state 24

    $default  reduce using rule 21 (VAR_DECLERATIONS)

    VAR_DECLERATIONS  go to state 44
    VAR_DEC           go to state 27


state 28

   22 VAR_DEC: VAR IDENTIFIER . MULT_DEC COLON TYPE_2 SEMICOLON

    COMMA  shift, and go to state 45

    $default  reduce using rule 25 (MULT_DEC)

    MULT_DEC  go to state 46


state 29

    4 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE .

    $default  reduce using rule 4 (F)


state 30

   32 IF_: IF . LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTPAREN  shift, and go to state 47


state 31

   34 FOR_: FOR . LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTPAREN  shift, and go to state 48


state 32

   13 INT_ARRAY: INTARRAY . LEFTBRACKET INTEGER RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 49


state 33

   38 ASIGN_MENT: IDENTIFIER . ASSIGNMENT EXPR_ESSION
   56 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET
   71 FUNCTION_CALL: IDENTIFIER . ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTBRACKET  shift, and go to state 50
    ASSIGNMENT   shift, and go to state 51


state 34

   16 BODY_CHOICE: F . BODY_STATEMENTS

    IF          shift, and go to state 30
    FOR         shift, and go to state 31
    INTARRAY    shift, and go to state 32
    IDENTIFIER  shift, and go to state 33

    $default  reduce using rule 19 (BODY_STATEMENTS)

    INT_ARRAY        go to state 35
    BODY_STATEMENTS  go to state 52
    STATEMENTS_      go to state 38
    IF_              go to state 39
    IF_ELSE          go to state 40
    FOR_             go to state 41
    ASIGN_MENT       go to state 42
    FUNCTION_CALL    go to state 43


state 35

   39 ASIGN_MENT: INT_ARRAY . ASSIGNMENT EXPR_ESSION
   72 FUNCTION_CALL: INT_ARRAY . ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    ASSIGNMENT  shift, and go to state 53


state 36

   15 B_O_F: VAR_DECLERATIONS BODY_CHOICE . RETURN_

    RETURN  shift, and go to state 54

    RETURN_  go to state 55


state 37

   17 BODY_CHOICE: BODY_STATEMENTS .

    $default  reduce using rule 17 (BODY_CHOICE)


state 38

   18 BODY_STATEMENTS: STATEMENTS_ . BODY_STATEMENTS

    IF          shift, and go to state 30
    FOR         shift, and go to state 31
    INTARRAY    shift, and go to state 32
    IDENTIFIER  shift, and go to state 33

    $default  reduce using rule 19 (BODY_STATEMENTS)

    INT_ARRAY        go to state 35
    BODY_STATEMENTS  go to state 56
    STATEMENTS_      go to state 38
    IF_              go to state 39
    IF_ELSE          go to state 40
    FOR_             go to state 41
    ASIGN_MENT       go to state 42
    FUNCTION_CALL    go to state 43


state 39

   28 STATEMENTS_: IF_ .
   33 IF_ELSE: IF_ . ELSE LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    ELSE  shift, and go to state 57

    $default  reduce using rule 28 (STATEMENTS_)


state 40

   29 STATEMENTS_: IF_ELSE .

    $default  reduce using rule 29 (STATEMENTS_)


state 41

   30 STATEMENTS_: FOR_ .

    $default  reduce using rule 30 (STATEMENTS_)


state 42

   26 STATEMENTS_: ASIGN_MENT . SEMICOLON

    SEMICOLON  shift, and go to state 58


state 43

   27 STATEMENTS_: FUNCTION_CALL . SEMICOLON

    SEMICOLON  shift, and go to state 59


state 44

   20 VAR_DECLERATIONS: VAR_DEC VAR_DECLERATIONS .

    $default  reduce using rule 20 (VAR_DECLERATIONS)


state 45

   23 MULT_DEC: COMMA . IDENTIFIER MULT_DEC
   24         | COMMA . INT_ARRAY MULT_DEC

    INTARRAY    shift, and go to state 32
    IDENTIFIER  shift, and go to state 60

    INT_ARRAY  go to state 61


state 46

   22 VAR_DEC: VAR IDENTIFIER MULT_DEC . COLON TYPE_2 SEMICOLON

    COLON  shift, and go to state 62


state 47

   32 IF_: IF LEFTPAREN . EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 72
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 48

   34 FOR_: FOR LEFTPAREN . FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    INTARRAY    shift, and go to state 32
    IDENTIFIER  shift, and go to state 75

    $default  reduce using rule 37 (FOR_ASIGN)

    INT_ARRAY   go to state 76
    FOR_PARAMS  go to state 77
    FOR_ASIGN   go to state 78
    ASIGN_MENT  go to state 79


state 49

   13 INT_ARRAY: INTARRAY LEFTBRACKET . INTEGER RIGHTBRACKET

    INTEGER  shift, and go to state 80


state 50

   56 INT_ARRAY: IDENTIFIER LEFTBRACKET . INTEGER RIGHTBRACKET

    INTEGER  shift, and go to state 81


state 51

   38 ASIGN_MENT: IDENTIFIER ASSIGNMENT . EXPR_ESSION
   71 FUNCTION_CALL: IDENTIFIER ASSIGNMENT . IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 82
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 83
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 52

   16 BODY_CHOICE: F BODY_STATEMENTS .

    $default  reduce using rule 16 (BODY_CHOICE)


state 53

   39 ASIGN_MENT: INT_ARRAY ASSIGNMENT . EXPR_ESSION
   72 FUNCTION_CALL: INT_ARRAY ASSIGNMENT . IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 84
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 85
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 54

   31 RETURN_: RETURN . EXPR_ESSION SEMICOLON

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 86
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 55

   15 B_O_F: VAR_DECLERATIONS BODY_CHOICE RETURN_ .

    $default  reduce using rule 15 (B_O_F)


state 56

   18 BODY_STATEMENTS: STATEMENTS_ BODY_STATEMENTS .

    $default  reduce using rule 18 (BODY_STATEMENTS)


state 57

   33 IF_ELSE: IF_ ELSE . LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTBRACE  shift, and go to state 87


state 58

   26 STATEMENTS_: ASIGN_MENT SEMICOLON .

    $default  reduce using rule 26 (STATEMENTS_)


state 59

   27 STATEMENTS_: FUNCTION_CALL SEMICOLON .

    $default  reduce using rule 27 (STATEMENTS_)


state 60

   23 MULT_DEC: COMMA IDENTIFIER . MULT_DEC
   56 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET

    COMMA        shift, and go to state 45
    LEFTBRACKET  shift, and go to state 50

    $default  reduce using rule 25 (MULT_DEC)

    MULT_DEC  go to state 88


state 61

   24 MULT_DEC: COMMA INT_ARRAY . MULT_DEC

    COMMA  shift, and go to state 45

    $default  reduce using rule 25 (MULT_DEC)

    MULT_DEC  go to state 89


state 62

   22 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON . TYPE_2 SEMICOLON

    BOOL        shift, and go to state 14
    INT         shift, and go to state 15
    INTARRAY    shift, and go to state 32
    IDENTIFIER  shift, and go to state 90

    TYPE       go to state 91
    TYPE_2     go to state 92
    INT_ARRAY  go to state 93


state 63

   47 SINGLE_EXPRESSION: NOT . TRUE
   49                  | NOT . FALSE
   53                  | NOT . INT_ARRAY

    INTARRAY    shift, and go to state 32
    TRUE        shift, and go to state 94
    FALSE       shift, and go to state 95
    IDENTIFIER  shift, and go to state 90

    INT_ARRAY  go to state 96


state 64

   42 SINGLE_EXPRESSION: MINUS . INTEGER

    INTEGER  shift, and go to state 97


state 65

   46 SINGLE_EXPRESSION: TRUE .

    $default  reduce using rule 46 (SINGLE_EXPRESSION)


state 66

   48 SINGLE_EXPRESSION: FALSE .

    $default  reduce using rule 48 (SINGLE_EXPRESSION)


state 67

   50 SINGLE_EXPRESSION: IDENTIFIER .
   56 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 50

    $default  reduce using rule 50 (SINGLE_EXPRESSION)


state 68

   44 SINGLE_EXPRESSION: INTEGER .

    $default  reduce using rule 44 (SINGLE_EXPRESSION)


state 69

   43 SINGLE_EXPRESSION: ABSOLUTEVALUE . MINUS INTEGER ABSOLUTEVALUE
   45                  | ABSOLUTEVALUE . INTEGER ABSOLUTEVALUE
   51                  | ABSOLUTEVALUE . IDENTIFIER ABSOLUTEVALUE
   54                  | ABSOLUTEVALUE . INT_ARRAY ABSOLUTEVALUE
   55                  | ABSOLUTEVALUE . NOT INT_ARRAY ABSOLUTEVALUE

    INTARRAY    shift, and go to state 32
    NOT         shift, and go to state 98
    MINUS       shift, and go to state 99
    IDENTIFIER  shift, and go to state 100
    INTEGER     shift, and go to state 101

    INT_ARRAY  go to state 102


state 70

   41 EXPR_ESSION: LEFTPAREN . MULT_EXPRESSION RIGHTPAREN OPE_RATOR

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69

    INT_ARRAY          go to state 71
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 103


state 71

   52 SINGLE_EXPRESSION: INT_ARRAY .

    $default  reduce using rule 52 (SINGLE_EXPRESSION)


state 72

   32 IF_: IF LEFTPAREN EXPR_ESSION . RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    RIGHTPAREN  shift, and go to state 104


state 73

   57 MULT_EXPRESSION: SINGLE_EXPRESSION . OPE_RATOR

    EQEQ    shift, and go to state 105
    GT      shift, and go to state 106
    GTE     shift, and go to state 107
    LT      shift, and go to state 108
    LTE     shift, and go to state 109
    NE      shift, and go to state 110
    ANDAND  shift, and go to state 111
    OROR    shift, and go to state 112
    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116

    $default  reduce using rule 58 (OPE_RATOR)

    OPE_RATOR  go to state 117


state 74

   40 EXPR_ESSION: MULT_EXPRESSION .

    $default  reduce using rule 40 (EXPR_ESSION)


state 75

   38 ASIGN_MENT: IDENTIFIER . ASSIGNMENT EXPR_ESSION
   56 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 50
    ASSIGNMENT   shift, and go to state 118


state 76

   39 ASIGN_MENT: INT_ARRAY . ASSIGNMENT EXPR_ESSION

    ASSIGNMENT  shift, and go to state 119


state 77

   34 FOR_: FOR LEFTPAREN FOR_PARAMS . RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    RIGHTPAREN  shift, and go to state 120


state 78

   35 FOR_PARAMS: FOR_ASIGN . LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN

    LEFTPAREN  shift, and go to state 121


state 79

   36 FOR_ASIGN: ASIGN_MENT . SEMICOLON

    SEMICOLON  shift, and go to state 122


state 80

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 123


state 81

   56 INT_ARRAY: IDENTIFIER LEFTBRACKET INTEGER . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 124


state 82

   50 SINGLE_EXPRESSION: IDENTIFIER .
   56 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET
   71 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER . LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTPAREN    shift, and go to state 125
    LEFTBRACKET  shift, and go to state 50

    $default  reduce using rule 50 (SINGLE_EXPRESSION)


state 83

   38 ASIGN_MENT: IDENTIFIER ASSIGNMENT EXPR_ESSION .

    $default  reduce using rule 38 (ASIGN_MENT)


state 84

   50 SINGLE_EXPRESSION: IDENTIFIER .
   56 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET
   72 FUNCTION_CALL: INT_ARRAY ASSIGNMENT IDENTIFIER . LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTPAREN    shift, and go to state 126
    LEFTBRACKET  shift, and go to state 50

    $default  reduce using rule 50 (SINGLE_EXPRESSION)


state 85

   39 ASIGN_MENT: INT_ARRAY ASSIGNMENT EXPR_ESSION .

    $default  reduce using rule 39 (ASIGN_MENT)


state 86

   31 RETURN_: RETURN EXPR_ESSION . SEMICOLON

    SEMICOLON  shift, and go to state 127


state 87

   33 IF_ELSE: IF_ ELSE LEFTBRACE . BODY_STATEMENTS RIGHTBRACE

    IF          shift, and go to state 30
    FOR         shift, and go to state 31
    INTARRAY    shift, and go to state 32
    IDENTIFIER  shift, and go to state 33

    $default  reduce using rule 19 (BODY_STATEMENTS)

    INT_ARRAY        go to state 35
    BODY_STATEMENTS  go to state 128
    STATEMENTS_      go to state 38
    IF_              go to state 39
    IF_ELSE          go to state 40
    FOR_             go to state 41
    ASIGN_MENT       go to state 42
    FUNCTION_CALL    go to state 43


state 88

   23 MULT_DEC: COMMA IDENTIFIER MULT_DEC .

    $default  reduce using rule 23 (MULT_DEC)


state 89

   24 MULT_DEC: COMMA INT_ARRAY MULT_DEC .

    $default  reduce using rule 24 (MULT_DEC)


state 90

   56 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 50


state 91

   11 TYPE_2: TYPE .

    $default  reduce using rule 11 (TYPE_2)


state 92

   22 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE_2 . SEMICOLON

    SEMICOLON  shift, and go to state 129


state 93

   12 TYPE_2: INT_ARRAY .

    $default  reduce using rule 12 (TYPE_2)


state 94

   47 SINGLE_EXPRESSION: NOT TRUE .

    $default  reduce using rule 47 (SINGLE_EXPRESSION)


state 95

   49 SINGLE_EXPRESSION: NOT FALSE .

    $default  reduce using rule 49 (SINGLE_EXPRESSION)


state 96

   53 SINGLE_EXPRESSION: NOT INT_ARRAY .

    $default  reduce using rule 53 (SINGLE_EXPRESSION)


state 97

   42 SINGLE_EXPRESSION: MINUS INTEGER .

    $default  reduce using rule 42 (SINGLE_EXPRESSION)


state 98

   55 SINGLE_EXPRESSION: ABSOLUTEVALUE NOT . INT_ARRAY ABSOLUTEVALUE

    INTARRAY    shift, and go to state 32
    IDENTIFIER  shift, and go to state 90

    INT_ARRAY  go to state 130


state 99

   43 SINGLE_EXPRESSION: ABSOLUTEVALUE MINUS . INTEGER ABSOLUTEVALUE

    INTEGER  shift, and go to state 131


state 100

   51 SINGLE_EXPRESSION: ABSOLUTEVALUE IDENTIFIER . ABSOLUTEVALUE
   56 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET

    ABSOLUTEVALUE  shift, and go to state 132
    LEFTBRACKET    shift, and go to state 50


state 101

   45 SINGLE_EXPRESSION: ABSOLUTEVALUE INTEGER . ABSOLUTEVALUE

    ABSOLUTEVALUE  shift, and go to state 133


state 102

   54 SINGLE_EXPRESSION: ABSOLUTEVALUE INT_ARRAY . ABSOLUTEVALUE

    ABSOLUTEVALUE  shift, and go to state 134


state 103

   41 EXPR_ESSION: LEFTPAREN MULT_EXPRESSION . RIGHTPAREN OPE_RATOR

    RIGHTPAREN  shift, and go to state 135


state 104

   32 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN . LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTBRACE  shift, and go to state 136


state 105

   65 OPE_RATOR: EQEQ . EXPR_ESSION

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 137
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 106

   66 OPE_RATOR: GT . EXPR_ESSION

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 138
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 107

   67 OPE_RATOR: GTE . EXPR_ESSION

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 139
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 108

   68 OPE_RATOR: LT . EXPR_ESSION

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 140
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 109

   69 OPE_RATOR: LTE . EXPR_ESSION

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 141
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 110

   70 OPE_RATOR: NE . EXPR_ESSION

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 142
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 111

   64 OPE_RATOR: ANDAND . EXPR_ESSION

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 143
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 112

   63 OPE_RATOR: OROR . EXPR_ESSION

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 144
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 113

   59 OPE_RATOR: PLUS . EXPR_ESSION

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 145
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 114

   60 OPE_RATOR: MINUS . EXPR_ESSION

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 146
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 115

   61 OPE_RATOR: TIMES . EXPR_ESSION

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 147
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 116

   62 OPE_RATOR: DIVIDE . EXPR_ESSION

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 148
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 117

   57 MULT_EXPRESSION: SINGLE_EXPRESSION OPE_RATOR .

    $default  reduce using rule 57 (MULT_EXPRESSION)


state 118

   38 ASIGN_MENT: IDENTIFIER ASSIGNMENT . EXPR_ESSION

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 83
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 119

   39 ASIGN_MENT: INT_ARRAY ASSIGNMENT . EXPR_ESSION

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 85
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 120

   34 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN . LEFTBRACE BODY_STATEMENTS RIGHTBRACE

    LEFTBRACE  shift, and go to state 149


state 121

   35 FOR_PARAMS: FOR_ASIGN LEFTPAREN . EXPR_ESSION RIGHTPAREN FOR_ASIGN

    INTARRAY       shift, and go to state 32
    NOT            shift, and go to state 63
    MINUS          shift, and go to state 64
    TRUE           shift, and go to state 65
    FALSE          shift, and go to state 66
    IDENTIFIER     shift, and go to state 67
    INTEGER        shift, and go to state 68
    ABSOLUTEVALUE  shift, and go to state 69
    LEFTPAREN      shift, and go to state 70

    INT_ARRAY          go to state 71
    EXPR_ESSION        go to state 150
    SINGLE_EXPRESSION  go to state 73
    MULT_EXPRESSION    go to state 74


state 122

   36 FOR_ASIGN: ASIGN_MENT SEMICOLON .

    $default  reduce using rule 36 (FOR_ASIGN)


state 123

   13 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER RIGHTBRACKET .

    $default  reduce using rule 13 (INT_ARRAY)


state 124

   56 INT_ARRAY: IDENTIFIER LEFTBRACKET INTEGER RIGHTBRACKET .

    $default  reduce using rule 56 (INT_ARRAY)


state 125

   71 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN . IN_PARAMS RIGHTPAREN

    NOT      shift, and go to state 151
    MINUS    shift, and go to state 152
    TRUE     shift, and go to state 153
    FALSE    shift, and go to state 154
    INTEGER  shift, and go to state 155
    COMMA    shift, and go to state 156

    $default  reduce using rule 81 (NEXT_PARAM)

    IN_PARAMS   go to state 157
    NEXT_PARAM  go to state 158


state 126

   72 FUNCTION_CALL: INT_ARRAY ASSIGNMENT IDENTIFIER LEFTPAREN . IN_PARAMS RIGHTPAREN

    NOT      shift, and go to state 151
    MINUS    shift, and go to state 152
    TRUE     shift, and go to state 153
    FALSE    shift, and go to state 154
    INTEGER  shift, and go to state 155
    COMMA    shift, and go to state 156

    $default  reduce using rule 81 (NEXT_PARAM)

    IN_PARAMS   go to state 159
    NEXT_PARAM  go to state 158


state 127

   31 RETURN_: RETURN EXPR_ESSION SEMICOLON .

    $default  reduce using rule 31 (RETURN_)


state 128

   33 IF_ELSE: IF_ ELSE LEFTBRACE BODY_STATEMENTS . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 160


state 129

   22 VAR_DEC: VAR IDENTIFIER MULT_DEC COLON TYPE_2 SEMICOLON .

    $default  reduce using rule 22 (VAR_DEC)


state 130

   55 SINGLE_EXPRESSION: ABSOLUTEVALUE NOT INT_ARRAY . ABSOLUTEVALUE

    ABSOLUTEVALUE  shift, and go to state 161


state 131

   43 SINGLE_EXPRESSION: ABSOLUTEVALUE MINUS INTEGER . ABSOLUTEVALUE

    ABSOLUTEVALUE  shift, and go to state 162


state 132

   51 SINGLE_EXPRESSION: ABSOLUTEVALUE IDENTIFIER ABSOLUTEVALUE .

    $default  reduce using rule 51 (SINGLE_EXPRESSION)


state 133

   45 SINGLE_EXPRESSION: ABSOLUTEVALUE INTEGER ABSOLUTEVALUE .

    $default  reduce using rule 45 (SINGLE_EXPRESSION)


state 134

   54 SINGLE_EXPRESSION: ABSOLUTEVALUE INT_ARRAY ABSOLUTEVALUE .

    $default  reduce using rule 54 (SINGLE_EXPRESSION)


state 135

   41 EXPR_ESSION: LEFTPAREN MULT_EXPRESSION RIGHTPAREN . OPE_RATOR

    EQEQ    shift, and go to state 105
    GT      shift, and go to state 106
    GTE     shift, and go to state 107
    LT      shift, and go to state 108
    LTE     shift, and go to state 109
    NE      shift, and go to state 110
    ANDAND  shift, and go to state 111
    OROR    shift, and go to state 112
    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116

    $default  reduce using rule 58 (OPE_RATOR)

    OPE_RATOR  go to state 163


state 136

   32 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE . BODY_STATEMENTS RIGHTBRACE

    IF          shift, and go to state 30
    FOR         shift, and go to state 31
    INTARRAY    shift, and go to state 32
    IDENTIFIER  shift, and go to state 33

    $default  reduce using rule 19 (BODY_STATEMENTS)

    INT_ARRAY        go to state 35
    BODY_STATEMENTS  go to state 164
    STATEMENTS_      go to state 38
    IF_              go to state 39
    IF_ELSE          go to state 40
    FOR_             go to state 41
    ASIGN_MENT       go to state 42
    FUNCTION_CALL    go to state 43


state 137

   65 OPE_RATOR: EQEQ EXPR_ESSION .

    $default  reduce using rule 65 (OPE_RATOR)


state 138

   66 OPE_RATOR: GT EXPR_ESSION .

    $default  reduce using rule 66 (OPE_RATOR)


state 139

   67 OPE_RATOR: GTE EXPR_ESSION .

    $default  reduce using rule 67 (OPE_RATOR)


state 140

   68 OPE_RATOR: LT EXPR_ESSION .

    $default  reduce using rule 68 (OPE_RATOR)


state 141

   69 OPE_RATOR: LTE EXPR_ESSION .

    $default  reduce using rule 69 (OPE_RATOR)


state 142

   70 OPE_RATOR: NE EXPR_ESSION .

    $default  reduce using rule 70 (OPE_RATOR)


state 143

   64 OPE_RATOR: ANDAND EXPR_ESSION .

    $default  reduce using rule 64 (OPE_RATOR)


state 144

   63 OPE_RATOR: OROR EXPR_ESSION .

    $default  reduce using rule 63 (OPE_RATOR)


state 145

   59 OPE_RATOR: PLUS EXPR_ESSION .

    $default  reduce using rule 59 (OPE_RATOR)


state 146

   60 OPE_RATOR: MINUS EXPR_ESSION .

    $default  reduce using rule 60 (OPE_RATOR)


state 147

   61 OPE_RATOR: TIMES EXPR_ESSION .

    $default  reduce using rule 61 (OPE_RATOR)


state 148

   62 OPE_RATOR: DIVIDE EXPR_ESSION .

    $default  reduce using rule 62 (OPE_RATOR)


state 149

   34 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE . BODY_STATEMENTS RIGHTBRACE

    IF          shift, and go to state 30
    FOR         shift, and go to state 31
    INTARRAY    shift, and go to state 32
    IDENTIFIER  shift, and go to state 33

    $default  reduce using rule 19 (BODY_STATEMENTS)

    INT_ARRAY        go to state 35
    BODY_STATEMENTS  go to state 165
    STATEMENTS_      go to state 38
    IF_              go to state 39
    IF_ELSE          go to state 40
    FOR_             go to state 41
    ASIGN_MENT       go to state 42
    FUNCTION_CALL    go to state 43


state 150

   35 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION . RIGHTPAREN FOR_ASIGN

    RIGHTPAREN  shift, and go to state 166


state 151

   76 IN_PARAMS: NOT . TRUE NEXT_PARAM
   78          | NOT . FALSE NEXT_PARAM

    TRUE   shift, and go to state 167
    FALSE  shift, and go to state 168


state 152

   73 IN_PARAMS: MINUS . INTEGER NEXT_PARAM

    INTEGER  shift, and go to state 169


state 153

   75 IN_PARAMS: TRUE . NEXT_PARAM

    COMMA  shift, and go to state 156

    $default  reduce using rule 81 (NEXT_PARAM)

    NEXT_PARAM  go to state 170


state 154

   77 IN_PARAMS: FALSE . NEXT_PARAM

    COMMA  shift, and go to state 156

    $default  reduce using rule 81 (NEXT_PARAM)

    NEXT_PARAM  go to state 171


state 155

   74 IN_PARAMS: INTEGER . NEXT_PARAM

    COMMA  shift, and go to state 156

    $default  reduce using rule 81 (NEXT_PARAM)

    NEXT_PARAM  go to state 172


state 156

   80 NEXT_PARAM: COMMA . IN_PARAMS

    NOT      shift, and go to state 151
    MINUS    shift, and go to state 152
    TRUE     shift, and go to state 153
    FALSE    shift, and go to state 154
    INTEGER  shift, and go to state 155
    COMMA    shift, and go to state 156

    $default  reduce using rule 81 (NEXT_PARAM)

    IN_PARAMS   go to state 173
    NEXT_PARAM  go to state 158


state 157

   71 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS . RIGHTPAREN

    RIGHTPAREN  shift, and go to state 174


state 158

   79 IN_PARAMS: NEXT_PARAM .

    $default  reduce using rule 79 (IN_PARAMS)


state 159

   72 FUNCTION_CALL: INT_ARRAY ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS . RIGHTPAREN

    RIGHTPAREN  shift, and go to state 175


state 160

   33 IF_ELSE: IF_ ELSE LEFTBRACE BODY_STATEMENTS RIGHTBRACE .

    $default  reduce using rule 33 (IF_ELSE)


state 161

   55 SINGLE_EXPRESSION: ABSOLUTEVALUE NOT INT_ARRAY ABSOLUTEVALUE .

    $default  reduce using rule 55 (SINGLE_EXPRESSION)


state 162

   43 SINGLE_EXPRESSION: ABSOLUTEVALUE MINUS INTEGER ABSOLUTEVALUE .

    $default  reduce using rule 43 (SINGLE_EXPRESSION)


state 163

   41 EXPR_ESSION: LEFTPAREN MULT_EXPRESSION RIGHTPAREN OPE_RATOR .

    $default  reduce using rule 41 (EXPR_ESSION)


state 164

   32 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 176


state 165

   34 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 177


state 166

   35 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN . FOR_ASIGN

    INTARRAY    shift, and go to state 32
    IDENTIFIER  shift, and go to state 75

    $default  reduce using rule 37 (FOR_ASIGN)

    INT_ARRAY   go to state 76
    FOR_ASIGN   go to state 178
    ASIGN_MENT  go to state 79


state 167

   76 IN_PARAMS: NOT TRUE . NEXT_PARAM

    COMMA  shift, and go to state 156

    $default  reduce using rule 81 (NEXT_PARAM)

    NEXT_PARAM  go to state 179


state 168

   78 IN_PARAMS: NOT FALSE . NEXT_PARAM

    COMMA  shift, and go to state 156

    $default  reduce using rule 81 (NEXT_PARAM)

    NEXT_PARAM  go to state 180


state 169

   73 IN_PARAMS: MINUS INTEGER . NEXT_PARAM

    COMMA  shift, and go to state 156

    $default  reduce using rule 81 (NEXT_PARAM)

    NEXT_PARAM  go to state 181


state 170

   75 IN_PARAMS: TRUE NEXT_PARAM .

    $default  reduce using rule 75 (IN_PARAMS)


state 171

   77 IN_PARAMS: FALSE NEXT_PARAM .

    $default  reduce using rule 77 (IN_PARAMS)


state 172

   74 IN_PARAMS: INTEGER NEXT_PARAM .

    $default  reduce using rule 74 (IN_PARAMS)


state 173

   80 NEXT_PARAM: COMMA IN_PARAMS .

    $default  reduce using rule 80 (NEXT_PARAM)


state 174

   71 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN .

    $default  reduce using rule 71 (FUNCTION_CALL)


state 175

   72 FUNCTION_CALL: INT_ARRAY ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN .

    $default  reduce using rule 72 (FUNCTION_CALL)


state 176

   32 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE .

    $default  reduce using rule 32 (IF_)


state 177

   34 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE BODY_STATEMENTS RIGHTBRACE .

    $default  reduce using rule 34 (FOR_)


state 178

   35 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN .

    $default  reduce using rule 35 (FOR_PARAMS)


state 179

   76 IN_PARAMS: NOT TRUE NEXT_PARAM .

    $default  reduce using rule 76 (IN_PARAMS)


state 180

   78 IN_PARAMS: NOT FALSE NEXT_PARAM .

    $default  reduce using rule 78 (IN_PARAMS)


state 181

   73 IN_PARAMS: MINUS INTEGER NEXT_PARAM .

    $default  reduce using rule 73 (IN_PARAMS)
