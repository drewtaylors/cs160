Grammar

    0 $accept: Start $end

    1 Start: F FUNC_
    2      | /* empty */

    3 FUNC_: F FUNC_
    4      | /* empty */

    5 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    6 P_L: IDENTIFIER COLON TYPE MORE_PARAMS
    7    | /* empty */

    8 MORE_PARAMS: COMMA P_L
    9            | /* empty */

   10 TYPE: INT
   11     | BOOL

   12 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER RIGHTBRACKET

   13 R_T: TYPE

   14 B_O_F: VAR_DECLERATIONS BODY_CHOICE RETURN_

   15 BODY_CHOICE: F
   16            | STATEMENTS_

   17 VAR_DECLERATIONS: VAR IDENTIFIER MULT_DEC COLON TYPE SEMICOLON
   18                 | /* empty */

   19 MULT_DEC: COMMA IDENTIFIER MULT_DEC
   20         | COMMA INT_ARRAY MULT_DEC
   21         | /* empty */

   22 STATEMENTS_: ASIGN_MENT SEMICOLON
   23            | FUNCTION_CALL SEMICOLON
   24            | IF_
   25            | IF_ELSE
   26            | FOR_
   27            | /* empty */

   28 RETURN_: RETURN EXPR_ESSION SEMICOLON

   29 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE

   30 IF_ELSE: IF_ ELSE LEFTBRACE STATEMENTS_ RIGHTBRACE

   31 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE

   32 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN

   33 FOR_ASIGN: ASIGN_MENT
   34          | /* empty */

   35 ASIGN_MENT: IDENTIFIER ASSIGNMENT EXPR_ESSION
   36           | INT_ARRAY ASSIGNMENT EXPR_ESSION

   37 EXPR_ESSION: MULT_EXPRESSION
   38            | LEFTPAREN MULT_EXPRESSION RIGHTPAREN

   39 SINGLE_EXPRESSION: MINUS INTEGER
   40                  | ABSOLUTEVALUE MINUS INTEGER ABSOLUTEVALUE
   41                  | INTEGER
   42                  | ABSOLUTEVALUE INTEGER ABSOLUTEVALUE
   43                  | TRUE
   44                  | NOT TRUE
   45                  | FALSE
   46                  | NOT FALSE
   47                  | IDENTIFIER
   48                  | ABSOLUTEVALUE IDENTIFIER ABSOLUTEVALUE
   49                  | INT_ARRAY
   50                  | ABSOLUTEVALUE INT_ARRAY ABSOLUTEVALUE

   51 INT_ARRAY: IDENTIFIER LEFTBRACKET INTEGER RIGHTBRACKET

   52 MULT_EXPRESSION: SINGLE_EXPRESSION OPE_RATOR

   53 OPE_RATOR: /* empty */
   54          | PLUS EXPR_ESSION
   55          | MINUS EXPR_ESSION
   56          | TIMES EXPR_ESSION
   57          | DIVIDE EXPR_ESSION
   58          | OROR EXPR_ESSION
   59          | ANDAND EXPR_ESSION
   60          | EQEQ EXPR_ESSION
   61          | GT EXPR_ESSION
   62          | GTE EXPR_ESSION
   63          | LT EXPR_ESSION
   64          | LTE EXPR_ESSION
   65          | NE EXPR_ESSION

   66 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN
   67              | INT_ARRAY ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

   68 IN_PARAMS: MINUS INTEGER NEXT_PARAM
   69          | INTEGER NEXT_PARAM
   70          | TRUE NEXT_PARAM
   71          | NOT TRUE NEXT_PARAM
   72          | FALSE NEXT_PARAM
   73          | NOT FALSE NEXT_PARAM
   74          | NEXT_PARAM

   75 NEXT_PARAM: COMMA IN_PARAMS
   76           | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
BOOL (258) 11
ELSE (259) 30
IF (260) 29
INT (261) 10
FOR (262) 31
VAR (263) 17
FUNCTION (264) 5
INTARRAY (265) 12
RETURN (266) 28
EQEQ (267) 60
GT (268) 61
GTE (269) 62
LT (270) 63
LTE (271) 64
NE (272) 65
ANDAND (273) 59
OROR (274) 58
NOT (275) 44 46 71 73
PLUS (276) 54
MINUS (277) 39 40 55 68
TIMES (278) 56
DIVIDE (279) 57
TRUE (280) 43 44 70 71
FALSE (281) 45 46 72 73
IDENTIFIER (282) 5 6 17 19 35 47 48 51 66 67
INTEGER (283) 12 39 40 41 42 51 68 69
SEMICOLON (284) 17 22 23 28
COLON (285) 5 6 17
COMMA (286) 8 19 20 75
ABSOLUTEVALUE (287) 40 42 48 50
LEFTBRACE (288) 5 29 30 31
RIGHTBRACE (289) 5 29 30 31
LEFTPAREN (290) 5 29 31 32 38 66 67
RIGHTPAREN (291) 5 29 31 32 38 66 67
LEFTBRACKET (292) 12 51
RIGHTBRACKET (293) 12 51
ASSIGNMENT (294) 35 36 66 67


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
Start (41)
    on left: 1 2, on right: 0
FUNC_ (42)
    on left: 3 4, on right: 1 3
F (43)
    on left: 5, on right: 1 3 15
P_L (44)
    on left: 6 7, on right: 5 8
MORE_PARAMS (45)
    on left: 8 9, on right: 6
TYPE (46)
    on left: 10 11, on right: 6 13 17
INT_ARRAY (47)
    on left: 12 51, on right: 20 36 49 50 67
R_T (48)
    on left: 13, on right: 5
B_O_F (49)
    on left: 14, on right: 5
BODY_CHOICE (50)
    on left: 15 16, on right: 14
VAR_DECLERATIONS (51)
    on left: 17 18, on right: 14
MULT_DEC (52)
    on left: 19 20 21, on right: 17 19 20
STATEMENTS_ (53)
    on left: 22 23 24 25 26 27, on right: 16 29 30 31
RETURN_ (54)
    on left: 28, on right: 14
IF_ (55)
    on left: 29, on right: 24 30
IF_ELSE (56)
    on left: 30, on right: 25
FOR_ (57)
    on left: 31, on right: 26
FOR_PARAMS (58)
    on left: 32, on right: 31
FOR_ASIGN (59)
    on left: 33 34, on right: 32
ASIGN_MENT (60)
    on left: 35 36, on right: 22 33
EXPR_ESSION (61)
    on left: 37 38, on right: 28 29 32 35 36 54 55 56 57 58 59 60 61
    62 63 64 65
SINGLE_EXPRESSION (62)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50, on right: 52
MULT_EXPRESSION (63)
    on left: 52, on right: 37 38
OPE_RATOR (64)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65, on right: 52
FUNCTION_CALL (65)
    on left: 66 67, on right: 23
IN_PARAMS (66)
    on left: 68 69 70 71 72 73 74, on right: 66 67 75
NEXT_PARAM (67)
    on left: 75 76, on right: 68 69 70 71 72 73 74


state 0

    0 $accept: . Start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Start)

    Start  go to state 2
    F      go to state 3


state 1

    5 F: FUNCTION . IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    IDENTIFIER  shift, and go to state 4


state 2

    0 $accept: Start . $end

    $end  shift, and go to state 5


state 3

    1 Start: F . FUNC_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 4 (FUNC_)

    FUNC_  go to state 6
    F      go to state 7


state 4

    5 F: FUNCTION IDENTIFIER . LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    LEFTPAREN  shift, and go to state 8


state 5

    0 $accept: Start $end .

    $default  accept


state 6

    1 Start: F FUNC_ .

    $default  reduce using rule 1 (Start)


state 7

    3 FUNC_: F . FUNC_

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 4 (FUNC_)

    FUNC_  go to state 9
    F      go to state 7


state 8

    5 F: FUNCTION IDENTIFIER LEFTPAREN . P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 7 (P_L)

    P_L  go to state 11


state 9

    3 FUNC_: F FUNC_ .

    $default  reduce using rule 3 (FUNC_)


state 10

    6 P_L: IDENTIFIER . COLON TYPE MORE_PARAMS

    COLON  shift, and go to state 12


state 11

    5 F: FUNCTION IDENTIFIER LEFTPAREN P_L . RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    RIGHTPAREN  shift, and go to state 13


state 12

    6 P_L: IDENTIFIER COLON . TYPE MORE_PARAMS

    BOOL  shift, and go to state 14
    INT   shift, and go to state 15

    TYPE  go to state 16


state 13

    5 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN . COLON R_T LEFTBRACE B_O_F RIGHTBRACE

    COLON  shift, and go to state 17


state 14

   11 TYPE: BOOL .

    $default  reduce using rule 11 (TYPE)


state 15

   10 TYPE: INT .

    $default  reduce using rule 10 (TYPE)


state 16

    6 P_L: IDENTIFIER COLON TYPE . MORE_PARAMS

    COMMA  shift, and go to state 18

    $default  reduce using rule 9 (MORE_PARAMS)

    MORE_PARAMS  go to state 19


state 17

    5 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON . R_T LEFTBRACE B_O_F RIGHTBRACE

    BOOL  shift, and go to state 14
    INT   shift, and go to state 15

    TYPE  go to state 20
    R_T   go to state 21


state 18

    8 MORE_PARAMS: COMMA . P_L

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 7 (P_L)

    P_L  go to state 22


state 19

    6 P_L: IDENTIFIER COLON TYPE MORE_PARAMS .

    $default  reduce using rule 6 (P_L)


state 20

   13 R_T: TYPE .

    $default  reduce using rule 13 (R_T)


state 21

    5 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T . LEFTBRACE B_O_F RIGHTBRACE

    LEFTBRACE  shift, and go to state 23


state 22

    8 MORE_PARAMS: COMMA P_L .

    $default  reduce using rule 8 (MORE_PARAMS)


state 23

    5 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE . B_O_F RIGHTBRACE

    VAR  shift, and go to state 24

    $default  reduce using rule 18 (VAR_DECLERATIONS)

    B_O_F             go to state 25
    VAR_DECLERATIONS  go to state 26


state 24

   17 VAR_DECLERATIONS: VAR . IDENTIFIER MULT_DEC COLON TYPE SEMICOLON

    IDENTIFIER  shift, and go to state 27


state 25

    5 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 28


state 26

   14 B_O_F: VAR_DECLERATIONS . BODY_CHOICE RETURN_

    IF          shift, and go to state 29
    FOR         shift, and go to state 30
    FUNCTION    shift, and go to state 1
    INTARRAY    shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 27 (STATEMENTS_)

    F              go to state 33
    INT_ARRAY      go to state 34
    BODY_CHOICE    go to state 35
    STATEMENTS_    go to state 36
    IF_            go to state 37
    IF_ELSE        go to state 38
    FOR_           go to state 39
    ASIGN_MENT     go to state 40
    FUNCTION_CALL  go to state 41


state 27

   17 VAR_DECLERATIONS: VAR IDENTIFIER . MULT_DEC COLON TYPE SEMICOLON

    COMMA  shift, and go to state 42

    $default  reduce using rule 21 (MULT_DEC)

    MULT_DEC  go to state 43


state 28

    5 F: FUNCTION IDENTIFIER LEFTPAREN P_L RIGHTPAREN COLON R_T LEFTBRACE B_O_F RIGHTBRACE .

    $default  reduce using rule 5 (F)


state 29

   29 IF_: IF . LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE

    LEFTPAREN  shift, and go to state 44


state 30

   31 FOR_: FOR . LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE

    LEFTPAREN  shift, and go to state 45


state 31

   12 INT_ARRAY: INTARRAY . LEFTBRACKET INTEGER RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 46


state 32

   35 ASIGN_MENT: IDENTIFIER . ASSIGNMENT EXPR_ESSION
   51 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET
   66 FUNCTION_CALL: IDENTIFIER . ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTBRACKET  shift, and go to state 47
    ASSIGNMENT   shift, and go to state 48


state 33

   15 BODY_CHOICE: F .

    $default  reduce using rule 15 (BODY_CHOICE)


state 34

   36 ASIGN_MENT: INT_ARRAY . ASSIGNMENT EXPR_ESSION
   67 FUNCTION_CALL: INT_ARRAY . ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    ASSIGNMENT  shift, and go to state 49


state 35

   14 B_O_F: VAR_DECLERATIONS BODY_CHOICE . RETURN_

    RETURN  shift, and go to state 50

    RETURN_  go to state 51


state 36

   16 BODY_CHOICE: STATEMENTS_ .

    $default  reduce using rule 16 (BODY_CHOICE)


state 37

   24 STATEMENTS_: IF_ .
   30 IF_ELSE: IF_ . ELSE LEFTBRACE STATEMENTS_ RIGHTBRACE

    ELSE  shift, and go to state 52

    $default  reduce using rule 24 (STATEMENTS_)


state 38

   25 STATEMENTS_: IF_ELSE .

    $default  reduce using rule 25 (STATEMENTS_)


state 39

   26 STATEMENTS_: FOR_ .

    $default  reduce using rule 26 (STATEMENTS_)


state 40

   22 STATEMENTS_: ASIGN_MENT . SEMICOLON

    SEMICOLON  shift, and go to state 53


state 41

   23 STATEMENTS_: FUNCTION_CALL . SEMICOLON

    SEMICOLON  shift, and go to state 54


state 42

   19 MULT_DEC: COMMA . IDENTIFIER MULT_DEC
   20         | COMMA . INT_ARRAY MULT_DEC

    INTARRAY    shift, and go to state 31
    IDENTIFIER  shift, and go to state 55

    INT_ARRAY  go to state 56


state 43

   17 VAR_DECLERATIONS: VAR IDENTIFIER MULT_DEC . COLON TYPE SEMICOLON

    COLON  shift, and go to state 57


state 44

   29 IF_: IF LEFTPAREN . EXPR_ESSION RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 67
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 45

   31 FOR_: FOR LEFTPAREN . FOR_PARAMS RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE

    INTARRAY    shift, and go to state 31
    IDENTIFIER  shift, and go to state 70

    $default  reduce using rule 34 (FOR_ASIGN)

    INT_ARRAY   go to state 71
    FOR_PARAMS  go to state 72
    FOR_ASIGN   go to state 73
    ASIGN_MENT  go to state 74


state 46

   12 INT_ARRAY: INTARRAY LEFTBRACKET . INTEGER RIGHTBRACKET

    INTEGER  shift, and go to state 75


state 47

   51 INT_ARRAY: IDENTIFIER LEFTBRACKET . INTEGER RIGHTBRACKET

    INTEGER  shift, and go to state 76


state 48

   35 ASIGN_MENT: IDENTIFIER ASSIGNMENT . EXPR_ESSION
   66 FUNCTION_CALL: IDENTIFIER ASSIGNMENT . IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 77
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 78
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 49

   36 ASIGN_MENT: INT_ARRAY ASSIGNMENT . EXPR_ESSION
   67 FUNCTION_CALL: INT_ARRAY ASSIGNMENT . IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 79
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 80
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 50

   28 RETURN_: RETURN . EXPR_ESSION SEMICOLON

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 81
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 51

   14 B_O_F: VAR_DECLERATIONS BODY_CHOICE RETURN_ .

    $default  reduce using rule 14 (B_O_F)


state 52

   30 IF_ELSE: IF_ ELSE . LEFTBRACE STATEMENTS_ RIGHTBRACE

    LEFTBRACE  shift, and go to state 82


state 53

   22 STATEMENTS_: ASIGN_MENT SEMICOLON .

    $default  reduce using rule 22 (STATEMENTS_)


state 54

   23 STATEMENTS_: FUNCTION_CALL SEMICOLON .

    $default  reduce using rule 23 (STATEMENTS_)


state 55

   19 MULT_DEC: COMMA IDENTIFIER . MULT_DEC
   51 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET

    COMMA        shift, and go to state 42
    LEFTBRACKET  shift, and go to state 47

    $default  reduce using rule 21 (MULT_DEC)

    MULT_DEC  go to state 83


state 56

   20 MULT_DEC: COMMA INT_ARRAY . MULT_DEC

    COMMA  shift, and go to state 42

    $default  reduce using rule 21 (MULT_DEC)

    MULT_DEC  go to state 84


state 57

   17 VAR_DECLERATIONS: VAR IDENTIFIER MULT_DEC COLON . TYPE SEMICOLON

    BOOL  shift, and go to state 14
    INT   shift, and go to state 15

    TYPE  go to state 85


state 58

   44 SINGLE_EXPRESSION: NOT . TRUE
   46                  | NOT . FALSE

    TRUE   shift, and go to state 86
    FALSE  shift, and go to state 87


state 59

   39 SINGLE_EXPRESSION: MINUS . INTEGER

    INTEGER  shift, and go to state 88


state 60

   43 SINGLE_EXPRESSION: TRUE .

    $default  reduce using rule 43 (SINGLE_EXPRESSION)


state 61

   45 SINGLE_EXPRESSION: FALSE .

    $default  reduce using rule 45 (SINGLE_EXPRESSION)


state 62

   47 SINGLE_EXPRESSION: IDENTIFIER .
   51 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 47

    $default  reduce using rule 47 (SINGLE_EXPRESSION)


state 63

   41 SINGLE_EXPRESSION: INTEGER .

    $default  reduce using rule 41 (SINGLE_EXPRESSION)


state 64

   40 SINGLE_EXPRESSION: ABSOLUTEVALUE . MINUS INTEGER ABSOLUTEVALUE
   42                  | ABSOLUTEVALUE . INTEGER ABSOLUTEVALUE
   48                  | ABSOLUTEVALUE . IDENTIFIER ABSOLUTEVALUE
   50                  | ABSOLUTEVALUE . INT_ARRAY ABSOLUTEVALUE

    INTARRAY    shift, and go to state 31
    MINUS       shift, and go to state 89
    IDENTIFIER  shift, and go to state 90
    INTEGER     shift, and go to state 91

    INT_ARRAY  go to state 92


state 65

   38 EXPR_ESSION: LEFTPAREN . MULT_EXPRESSION RIGHTPAREN

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64

    INT_ARRAY          go to state 66
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 93


state 66

   49 SINGLE_EXPRESSION: INT_ARRAY .

    $default  reduce using rule 49 (SINGLE_EXPRESSION)


state 67

   29 IF_: IF LEFTPAREN EXPR_ESSION . RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE

    RIGHTPAREN  shift, and go to state 94


state 68

   52 MULT_EXPRESSION: SINGLE_EXPRESSION . OPE_RATOR

    EQEQ    shift, and go to state 95
    GT      shift, and go to state 96
    GTE     shift, and go to state 97
    LT      shift, and go to state 98
    LTE     shift, and go to state 99
    NE      shift, and go to state 100
    ANDAND  shift, and go to state 101
    OROR    shift, and go to state 102
    PLUS    shift, and go to state 103
    MINUS   shift, and go to state 104
    TIMES   shift, and go to state 105
    DIVIDE  shift, and go to state 106

    $default  reduce using rule 53 (OPE_RATOR)

    OPE_RATOR  go to state 107


state 69

   37 EXPR_ESSION: MULT_EXPRESSION .

    $default  reduce using rule 37 (EXPR_ESSION)


state 70

   35 ASIGN_MENT: IDENTIFIER . ASSIGNMENT EXPR_ESSION
   51 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 47
    ASSIGNMENT   shift, and go to state 108


state 71

   36 ASIGN_MENT: INT_ARRAY . ASSIGNMENT EXPR_ESSION

    ASSIGNMENT  shift, and go to state 109


state 72

   31 FOR_: FOR LEFTPAREN FOR_PARAMS . RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE

    RIGHTPAREN  shift, and go to state 110


state 73

   32 FOR_PARAMS: FOR_ASIGN . LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN

    LEFTPAREN  shift, and go to state 111


state 74

   33 FOR_ASIGN: ASIGN_MENT .

    $default  reduce using rule 33 (FOR_ASIGN)


state 75

   12 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 112


state 76

   51 INT_ARRAY: IDENTIFIER LEFTBRACKET INTEGER . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 113


state 77

   47 SINGLE_EXPRESSION: IDENTIFIER .
   51 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET
   66 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER . LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTPAREN    shift, and go to state 114
    LEFTBRACKET  shift, and go to state 47

    $default  reduce using rule 47 (SINGLE_EXPRESSION)


state 78

   35 ASIGN_MENT: IDENTIFIER ASSIGNMENT EXPR_ESSION .

    $default  reduce using rule 35 (ASIGN_MENT)


state 79

   47 SINGLE_EXPRESSION: IDENTIFIER .
   51 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET
   67 FUNCTION_CALL: INT_ARRAY ASSIGNMENT IDENTIFIER . LEFTPAREN IN_PARAMS RIGHTPAREN

    LEFTPAREN    shift, and go to state 115
    LEFTBRACKET  shift, and go to state 47

    $default  reduce using rule 47 (SINGLE_EXPRESSION)


state 80

   36 ASIGN_MENT: INT_ARRAY ASSIGNMENT EXPR_ESSION .

    $default  reduce using rule 36 (ASIGN_MENT)


state 81

   28 RETURN_: RETURN EXPR_ESSION . SEMICOLON

    SEMICOLON  shift, and go to state 116


state 82

   30 IF_ELSE: IF_ ELSE LEFTBRACE . STATEMENTS_ RIGHTBRACE

    IF          shift, and go to state 29
    FOR         shift, and go to state 30
    INTARRAY    shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 27 (STATEMENTS_)

    INT_ARRAY      go to state 34
    STATEMENTS_    go to state 117
    IF_            go to state 37
    IF_ELSE        go to state 38
    FOR_           go to state 39
    ASIGN_MENT     go to state 40
    FUNCTION_CALL  go to state 41


state 83

   19 MULT_DEC: COMMA IDENTIFIER MULT_DEC .

    $default  reduce using rule 19 (MULT_DEC)


state 84

   20 MULT_DEC: COMMA INT_ARRAY MULT_DEC .

    $default  reduce using rule 20 (MULT_DEC)


state 85

   17 VAR_DECLERATIONS: VAR IDENTIFIER MULT_DEC COLON TYPE . SEMICOLON

    SEMICOLON  shift, and go to state 118


state 86

   44 SINGLE_EXPRESSION: NOT TRUE .

    $default  reduce using rule 44 (SINGLE_EXPRESSION)


state 87

   46 SINGLE_EXPRESSION: NOT FALSE .

    $default  reduce using rule 46 (SINGLE_EXPRESSION)


state 88

   39 SINGLE_EXPRESSION: MINUS INTEGER .

    $default  reduce using rule 39 (SINGLE_EXPRESSION)


state 89

   40 SINGLE_EXPRESSION: ABSOLUTEVALUE MINUS . INTEGER ABSOLUTEVALUE

    INTEGER  shift, and go to state 119


state 90

   48 SINGLE_EXPRESSION: ABSOLUTEVALUE IDENTIFIER . ABSOLUTEVALUE
   51 INT_ARRAY: IDENTIFIER . LEFTBRACKET INTEGER RIGHTBRACKET

    ABSOLUTEVALUE  shift, and go to state 120
    LEFTBRACKET    shift, and go to state 47


state 91

   42 SINGLE_EXPRESSION: ABSOLUTEVALUE INTEGER . ABSOLUTEVALUE

    ABSOLUTEVALUE  shift, and go to state 121


state 92

   50 SINGLE_EXPRESSION: ABSOLUTEVALUE INT_ARRAY . ABSOLUTEVALUE

    ABSOLUTEVALUE  shift, and go to state 122


state 93

   38 EXPR_ESSION: LEFTPAREN MULT_EXPRESSION . RIGHTPAREN

    RIGHTPAREN  shift, and go to state 123


state 94

   29 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN . LEFTBRACE STATEMENTS_ RIGHTBRACE

    LEFTBRACE  shift, and go to state 124


state 95

   60 OPE_RATOR: EQEQ . EXPR_ESSION

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 125
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 96

   61 OPE_RATOR: GT . EXPR_ESSION

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 126
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 97

   62 OPE_RATOR: GTE . EXPR_ESSION

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 127
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 98

   63 OPE_RATOR: LT . EXPR_ESSION

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 128
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 99

   64 OPE_RATOR: LTE . EXPR_ESSION

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 129
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 100

   65 OPE_RATOR: NE . EXPR_ESSION

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 130
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 101

   59 OPE_RATOR: ANDAND . EXPR_ESSION

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 131
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 102

   58 OPE_RATOR: OROR . EXPR_ESSION

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 132
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 103

   54 OPE_RATOR: PLUS . EXPR_ESSION

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 133
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 104

   55 OPE_RATOR: MINUS . EXPR_ESSION

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 134
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 105

   56 OPE_RATOR: TIMES . EXPR_ESSION

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 135
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 106

   57 OPE_RATOR: DIVIDE . EXPR_ESSION

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 136
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 107

   52 MULT_EXPRESSION: SINGLE_EXPRESSION OPE_RATOR .

    $default  reduce using rule 52 (MULT_EXPRESSION)


state 108

   35 ASIGN_MENT: IDENTIFIER ASSIGNMENT . EXPR_ESSION

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 78
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 109

   36 ASIGN_MENT: INT_ARRAY ASSIGNMENT . EXPR_ESSION

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 80
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 110

   31 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN . LEFTBRACE STATEMENTS_ RIGHTBRACE

    LEFTBRACE  shift, and go to state 137


state 111

   32 FOR_PARAMS: FOR_ASIGN LEFTPAREN . EXPR_ESSION RIGHTPAREN FOR_ASIGN

    INTARRAY       shift, and go to state 31
    NOT            shift, and go to state 58
    MINUS          shift, and go to state 59
    TRUE           shift, and go to state 60
    FALSE          shift, and go to state 61
    IDENTIFIER     shift, and go to state 62
    INTEGER        shift, and go to state 63
    ABSOLUTEVALUE  shift, and go to state 64
    LEFTPAREN      shift, and go to state 65

    INT_ARRAY          go to state 66
    EXPR_ESSION        go to state 138
    SINGLE_EXPRESSION  go to state 68
    MULT_EXPRESSION    go to state 69


state 112

   12 INT_ARRAY: INTARRAY LEFTBRACKET INTEGER RIGHTBRACKET .

    $default  reduce using rule 12 (INT_ARRAY)


state 113

   51 INT_ARRAY: IDENTIFIER LEFTBRACKET INTEGER RIGHTBRACKET .

    $default  reduce using rule 51 (INT_ARRAY)


state 114

   66 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN . IN_PARAMS RIGHTPAREN

    NOT      shift, and go to state 139
    MINUS    shift, and go to state 140
    TRUE     shift, and go to state 141
    FALSE    shift, and go to state 142
    INTEGER  shift, and go to state 143
    COMMA    shift, and go to state 144

    $default  reduce using rule 76 (NEXT_PARAM)

    IN_PARAMS   go to state 145
    NEXT_PARAM  go to state 146


state 115

   67 FUNCTION_CALL: INT_ARRAY ASSIGNMENT IDENTIFIER LEFTPAREN . IN_PARAMS RIGHTPAREN

    NOT      shift, and go to state 139
    MINUS    shift, and go to state 140
    TRUE     shift, and go to state 141
    FALSE    shift, and go to state 142
    INTEGER  shift, and go to state 143
    COMMA    shift, and go to state 144

    $default  reduce using rule 76 (NEXT_PARAM)

    IN_PARAMS   go to state 147
    NEXT_PARAM  go to state 146


state 116

   28 RETURN_: RETURN EXPR_ESSION SEMICOLON .

    $default  reduce using rule 28 (RETURN_)


state 117

   30 IF_ELSE: IF_ ELSE LEFTBRACE STATEMENTS_ . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 148


state 118

   17 VAR_DECLERATIONS: VAR IDENTIFIER MULT_DEC COLON TYPE SEMICOLON .

    $default  reduce using rule 17 (VAR_DECLERATIONS)


state 119

   40 SINGLE_EXPRESSION: ABSOLUTEVALUE MINUS INTEGER . ABSOLUTEVALUE

    ABSOLUTEVALUE  shift, and go to state 149


state 120

   48 SINGLE_EXPRESSION: ABSOLUTEVALUE IDENTIFIER ABSOLUTEVALUE .

    $default  reduce using rule 48 (SINGLE_EXPRESSION)


state 121

   42 SINGLE_EXPRESSION: ABSOLUTEVALUE INTEGER ABSOLUTEVALUE .

    $default  reduce using rule 42 (SINGLE_EXPRESSION)


state 122

   50 SINGLE_EXPRESSION: ABSOLUTEVALUE INT_ARRAY ABSOLUTEVALUE .

    $default  reduce using rule 50 (SINGLE_EXPRESSION)


state 123

   38 EXPR_ESSION: LEFTPAREN MULT_EXPRESSION RIGHTPAREN .

    $default  reduce using rule 38 (EXPR_ESSION)


state 124

   29 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE . STATEMENTS_ RIGHTBRACE

    IF          shift, and go to state 29
    FOR         shift, and go to state 30
    INTARRAY    shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 27 (STATEMENTS_)

    INT_ARRAY      go to state 34
    STATEMENTS_    go to state 150
    IF_            go to state 37
    IF_ELSE        go to state 38
    FOR_           go to state 39
    ASIGN_MENT     go to state 40
    FUNCTION_CALL  go to state 41


state 125

   60 OPE_RATOR: EQEQ EXPR_ESSION .

    $default  reduce using rule 60 (OPE_RATOR)


state 126

   61 OPE_RATOR: GT EXPR_ESSION .

    $default  reduce using rule 61 (OPE_RATOR)


state 127

   62 OPE_RATOR: GTE EXPR_ESSION .

    $default  reduce using rule 62 (OPE_RATOR)


state 128

   63 OPE_RATOR: LT EXPR_ESSION .

    $default  reduce using rule 63 (OPE_RATOR)


state 129

   64 OPE_RATOR: LTE EXPR_ESSION .

    $default  reduce using rule 64 (OPE_RATOR)


state 130

   65 OPE_RATOR: NE EXPR_ESSION .

    $default  reduce using rule 65 (OPE_RATOR)


state 131

   59 OPE_RATOR: ANDAND EXPR_ESSION .

    $default  reduce using rule 59 (OPE_RATOR)


state 132

   58 OPE_RATOR: OROR EXPR_ESSION .

    $default  reduce using rule 58 (OPE_RATOR)


state 133

   54 OPE_RATOR: PLUS EXPR_ESSION .

    $default  reduce using rule 54 (OPE_RATOR)


state 134

   55 OPE_RATOR: MINUS EXPR_ESSION .

    $default  reduce using rule 55 (OPE_RATOR)


state 135

   56 OPE_RATOR: TIMES EXPR_ESSION .

    $default  reduce using rule 56 (OPE_RATOR)


state 136

   57 OPE_RATOR: DIVIDE EXPR_ESSION .

    $default  reduce using rule 57 (OPE_RATOR)


state 137

   31 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE . STATEMENTS_ RIGHTBRACE

    IF          shift, and go to state 29
    FOR         shift, and go to state 30
    INTARRAY    shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 27 (STATEMENTS_)

    INT_ARRAY      go to state 34
    STATEMENTS_    go to state 151
    IF_            go to state 37
    IF_ELSE        go to state 38
    FOR_           go to state 39
    ASIGN_MENT     go to state 40
    FUNCTION_CALL  go to state 41


state 138

   32 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION . RIGHTPAREN FOR_ASIGN

    RIGHTPAREN  shift, and go to state 152


state 139

   71 IN_PARAMS: NOT . TRUE NEXT_PARAM
   73          | NOT . FALSE NEXT_PARAM

    TRUE   shift, and go to state 153
    FALSE  shift, and go to state 154


state 140

   68 IN_PARAMS: MINUS . INTEGER NEXT_PARAM

    INTEGER  shift, and go to state 155


state 141

   70 IN_PARAMS: TRUE . NEXT_PARAM

    COMMA  shift, and go to state 144

    $default  reduce using rule 76 (NEXT_PARAM)

    NEXT_PARAM  go to state 156


state 142

   72 IN_PARAMS: FALSE . NEXT_PARAM

    COMMA  shift, and go to state 144

    $default  reduce using rule 76 (NEXT_PARAM)

    NEXT_PARAM  go to state 157


state 143

   69 IN_PARAMS: INTEGER . NEXT_PARAM

    COMMA  shift, and go to state 144

    $default  reduce using rule 76 (NEXT_PARAM)

    NEXT_PARAM  go to state 158


state 144

   75 NEXT_PARAM: COMMA . IN_PARAMS

    NOT      shift, and go to state 139
    MINUS    shift, and go to state 140
    TRUE     shift, and go to state 141
    FALSE    shift, and go to state 142
    INTEGER  shift, and go to state 143
    COMMA    shift, and go to state 144

    $default  reduce using rule 76 (NEXT_PARAM)

    IN_PARAMS   go to state 159
    NEXT_PARAM  go to state 146


state 145

   66 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS . RIGHTPAREN

    RIGHTPAREN  shift, and go to state 160


state 146

   74 IN_PARAMS: NEXT_PARAM .

    $default  reduce using rule 74 (IN_PARAMS)


state 147

   67 FUNCTION_CALL: INT_ARRAY ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS . RIGHTPAREN

    RIGHTPAREN  shift, and go to state 161


state 148

   30 IF_ELSE: IF_ ELSE LEFTBRACE STATEMENTS_ RIGHTBRACE .

    $default  reduce using rule 30 (IF_ELSE)


state 149

   40 SINGLE_EXPRESSION: ABSOLUTEVALUE MINUS INTEGER ABSOLUTEVALUE .

    $default  reduce using rule 40 (SINGLE_EXPRESSION)


state 150

   29 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE STATEMENTS_ . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 162


state 151

   31 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE STATEMENTS_ . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 163


state 152

   32 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN . FOR_ASIGN

    INTARRAY    shift, and go to state 31
    IDENTIFIER  shift, and go to state 70

    $default  reduce using rule 34 (FOR_ASIGN)

    INT_ARRAY   go to state 71
    FOR_ASIGN   go to state 164
    ASIGN_MENT  go to state 74


state 153

   71 IN_PARAMS: NOT TRUE . NEXT_PARAM

    COMMA  shift, and go to state 144

    $default  reduce using rule 76 (NEXT_PARAM)

    NEXT_PARAM  go to state 165


state 154

   73 IN_PARAMS: NOT FALSE . NEXT_PARAM

    COMMA  shift, and go to state 144

    $default  reduce using rule 76 (NEXT_PARAM)

    NEXT_PARAM  go to state 166


state 155

   68 IN_PARAMS: MINUS INTEGER . NEXT_PARAM

    COMMA  shift, and go to state 144

    $default  reduce using rule 76 (NEXT_PARAM)

    NEXT_PARAM  go to state 167


state 156

   70 IN_PARAMS: TRUE NEXT_PARAM .

    $default  reduce using rule 70 (IN_PARAMS)


state 157

   72 IN_PARAMS: FALSE NEXT_PARAM .

    $default  reduce using rule 72 (IN_PARAMS)


state 158

   69 IN_PARAMS: INTEGER NEXT_PARAM .

    $default  reduce using rule 69 (IN_PARAMS)


state 159

   75 NEXT_PARAM: COMMA IN_PARAMS .

    $default  reduce using rule 75 (NEXT_PARAM)


state 160

   66 FUNCTION_CALL: IDENTIFIER ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN .

    $default  reduce using rule 66 (FUNCTION_CALL)


state 161

   67 FUNCTION_CALL: INT_ARRAY ASSIGNMENT IDENTIFIER LEFTPAREN IN_PARAMS RIGHTPAREN .

    $default  reduce using rule 67 (FUNCTION_CALL)


state 162

   29 IF_: IF LEFTPAREN EXPR_ESSION RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE .

    $default  reduce using rule 29 (IF_)


state 163

   31 FOR_: FOR LEFTPAREN FOR_PARAMS RIGHTPAREN LEFTBRACE STATEMENTS_ RIGHTBRACE .

    $default  reduce using rule 31 (FOR_)


state 164

   32 FOR_PARAMS: FOR_ASIGN LEFTPAREN EXPR_ESSION RIGHTPAREN FOR_ASIGN .

    $default  reduce using rule 32 (FOR_PARAMS)


state 165

   71 IN_PARAMS: NOT TRUE NEXT_PARAM .

    $default  reduce using rule 71 (IN_PARAMS)


state 166

   73 IN_PARAMS: NOT FALSE NEXT_PARAM .

    $default  reduce using rule 73 (IN_PARAMS)


state 167

   68 IN_PARAMS: MINUS INTEGER NEXT_PARAM .

    $default  reduce using rule 68 (IN_PARAMS)
