Terminals unused in grammar

   BOOL
   ELSE
   IF
   INT
   FOR
   VAR
   FUNCTION
   INTARRAY
   RETURN


State 15 conflicts: 4 shift/reduce
State 16 conflicts: 4 shift/reduce
State 17 conflicts: 4 shift/reduce
State 18 conflicts: 4 shift/reduce


Grammar

    0 $accept: List $end

    1 List: List Expr ','
    2     | Expr ','

    3 Expr: Expr '*' Expr
    4     | Expr '+' Expr
    5     | Expr '-' Expr
    6     | Expr '/' Expr
    7     | 'n'
    8     | '(' Expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8
')' (41) 8
'*' (42) 3
'+' (43) 4
',' (44) 1 2
'-' (45) 5
'/' (47) 6
'n' (110) 7
error (256)
BOOL (258)
ELSE (259)
IF (260)
INT (261)
FOR (262)
VAR (263)
FUNCTION (264)
INTARRAY (265)
RETURN (266)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
List (21)
    on left: 1 2, on right: 0 1
Expr (22)
    on left: 3 4 5 6 7 8, on right: 1 2 3 4 5 6 8


state 0

    0 $accept: . List $end

    'n'  shift, and go to state 1
    '('  shift, and go to state 2

    List  go to state 3
    Expr  go to state 4


state 1

    7 Expr: 'n' .

    $default  reduce using rule 7 (Expr)


state 2

    8 Expr: '(' . Expr ')'

    'n'  shift, and go to state 1
    '('  shift, and go to state 2

    Expr  go to state 5


state 3

    0 $accept: List . $end
    1 List: List . Expr ','

    $end  shift, and go to state 6
    'n'   shift, and go to state 1
    '('   shift, and go to state 2

    Expr  go to state 7


state 4

    2 List: Expr . ','
    3 Expr: Expr . '*' Expr
    4     | Expr . '+' Expr
    5     | Expr . '-' Expr
    6     | Expr . '/' Expr

    ','  shift, and go to state 8
    '*'  shift, and go to state 9
    '+'  shift, and go to state 10
    '-'  shift, and go to state 11
    '/'  shift, and go to state 12


state 5

    3 Expr: Expr . '*' Expr
    4     | Expr . '+' Expr
    5     | Expr . '-' Expr
    6     | Expr . '/' Expr
    8     | '(' Expr . ')'

    '*'  shift, and go to state 9
    '+'  shift, and go to state 10
    '-'  shift, and go to state 11
    '/'  shift, and go to state 12
    ')'  shift, and go to state 13


state 6

    0 $accept: List $end .

    $default  accept


state 7

    1 List: List Expr . ','
    3 Expr: Expr . '*' Expr
    4     | Expr . '+' Expr
    5     | Expr . '-' Expr
    6     | Expr . '/' Expr

    ','  shift, and go to state 14
    '*'  shift, and go to state 9
    '+'  shift, and go to state 10
    '-'  shift, and go to state 11
    '/'  shift, and go to state 12


state 8

    2 List: Expr ',' .

    $default  reduce using rule 2 (List)


state 9

    3 Expr: Expr '*' . Expr

    'n'  shift, and go to state 1
    '('  shift, and go to state 2

    Expr  go to state 15


state 10

    4 Expr: Expr '+' . Expr

    'n'  shift, and go to state 1
    '('  shift, and go to state 2

    Expr  go to state 16


state 11

    5 Expr: Expr '-' . Expr

    'n'  shift, and go to state 1
    '('  shift, and go to state 2

    Expr  go to state 17


state 12

    6 Expr: Expr '/' . Expr

    'n'  shift, and go to state 1
    '('  shift, and go to state 2

    Expr  go to state 18


state 13

    8 Expr: '(' Expr ')' .

    $default  reduce using rule 8 (Expr)


state 14

    1 List: List Expr ',' .

    $default  reduce using rule 1 (List)


state 15

    3 Expr: Expr . '*' Expr
    3     | Expr '*' Expr .
    4     | Expr . '+' Expr
    5     | Expr . '-' Expr
    6     | Expr . '/' Expr

    '*'  shift, and go to state 9
    '+'  shift, and go to state 10
    '-'  shift, and go to state 11
    '/'  shift, and go to state 12

    '*'       [reduce using rule 3 (Expr)]
    '+'       [reduce using rule 3 (Expr)]
    '-'       [reduce using rule 3 (Expr)]
    '/'       [reduce using rule 3 (Expr)]
    $default  reduce using rule 3 (Expr)


state 16

    3 Expr: Expr . '*' Expr
    4     | Expr . '+' Expr
    4     | Expr '+' Expr .
    5     | Expr . '-' Expr
    6     | Expr . '/' Expr

    '*'  shift, and go to state 9
    '+'  shift, and go to state 10
    '-'  shift, and go to state 11
    '/'  shift, and go to state 12

    '*'       [reduce using rule 4 (Expr)]
    '+'       [reduce using rule 4 (Expr)]
    '-'       [reduce using rule 4 (Expr)]
    '/'       [reduce using rule 4 (Expr)]
    $default  reduce using rule 4 (Expr)


state 17

    3 Expr: Expr . '*' Expr
    4     | Expr . '+' Expr
    5     | Expr . '-' Expr
    5     | Expr '-' Expr .
    6     | Expr . '/' Expr

    '*'  shift, and go to state 9
    '+'  shift, and go to state 10
    '-'  shift, and go to state 11
    '/'  shift, and go to state 12

    '*'       [reduce using rule 5 (Expr)]
    '+'       [reduce using rule 5 (Expr)]
    '-'       [reduce using rule 5 (Expr)]
    '/'       [reduce using rule 5 (Expr)]
    $default  reduce using rule 5 (Expr)


state 18

    3 Expr: Expr . '*' Expr
    4     | Expr . '+' Expr
    5     | Expr . '-' Expr
    6     | Expr . '/' Expr
    6     | Expr '/' Expr .

    '*'  shift, and go to state 9
    '+'  shift, and go to state 10
    '-'  shift, and go to state 11
    '/'  shift, and go to state 12

    '*'       [reduce using rule 6 (Expr)]
    '+'       [reduce using rule 6 (Expr)]
    '-'       [reduce using rule 6 (Expr)]
    '/'       [reduce using rule 6 (Expr)]
    $default  reduce using rule 6 (Expr)
